(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.2' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    523809,      10626]
NotebookOptionsPosition[    503903,      10258]
NotebookOutlinePosition[    511558,      10400]
CellTagsIndexPosition[    511477,      10395]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"5db650d0-631c-4499-979a-39b261587dbb"],

Cell[TextData[StyleBox["Probabilit\[EAcute]s et Statistique II\nChapitre 4. \
Variables al\[EAcute]atoires continues",
 FontSize->48,
 FontTracking->"Plain"]], "Title",
 CellChangeTimes->{{3.8486715534101505`*^9, 3.848671576751784*^9}, {
  3.854273782118215*^9, 3.854273788314485*^9}, {3.8551151456887565`*^9, 
  3.8551151595582023`*^9}, {3.855334233553878*^9, 3.855334235158021*^9}},
 FontFamily->
  "Times New Roman",ExpressionUUID->"620dc577-4893-4e94-86b2-0aa9eec94068"],

Cell["Jamel Saadaoui", "Author",
 CellChangeTimes->{{3.854277400337855*^9, 3.8542774043402967`*^9}},
 FontFamily->
  "Times New Roman",ExpressionUUID->"39d614b9-6960-491b-a546-d9d394e64519"],

Cell["University of Strasbourg, BETA,CNRS", "Affiliation",
 CellChangeTimes->{{3.854277607651429*^9, 3.854277617680724*^9}, {
  3.8543334758545313`*^9, 3.854333484106111*^9}, {3.854333663611863*^9, 
  3.8543336645281067`*^9}},
 FontFamily->
  "Times New Roman",ExpressionUUID->"1dca433f-2621-4df7-92fe-a72298503036"],

Cell["\<\
https://www.jamelsaadaoui.com/
\
\>", "Affiliation",
 CellChangeTimes->{{3.8543337336232767`*^9, 3.854333738181881*^9}, 
   3.854450919627133*^9},
 FontFamily->
  "Times New Roman",ExpressionUUID->"1645a041-1075-42ff-bd9b-911e78ec92ab"]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"bb4a671c-1796-405f-bff7-3289408c1f3c"],

Cell[BoxData[
 RowBox[{
  RowBox[{"g", "[", "x_", "]"}], ":=", 
  RowBox[{"Piecewise", "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"y", "=", "0"}], ",", 
       RowBox[{"x", "<", "0"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"y", "=", 
        RowBox[{"1", "-", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{"-", "0.1"}], "x"}]]}]}], ",", 
       RowBox[{"x", "\[GreaterEqual]", "0"}]}], "}"}]}], "}"}], 
   "]"}]}]], "Input",
 CellMargins:>
  Dynamic[{{
    0.135 FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}], 0.03 
     FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]}, {
    0.01972855652173913 FrontEnd`AbsoluteCurrentValue[{WindowSize, 2}], 
     0.11199100621118013` FrontEnd`AbsoluteCurrentValue[{WindowSize, 2}]}}],
 CellChangeTimes->{{3.855020759636661*^9, 3.8550207890971465`*^9}, {
   3.855020826431323*^9, 3.855020833039602*^9}, 3.8550209885039997`*^9, {
   3.855021052856452*^9, 3.855021078924914*^9}, 3.8550231627748528`*^9, 
   3.85506132606896*^9},
 CellLabel->"In[1]:=",ExpressionUUID->"26a306ed-d4b4-4ba0-9b4b-e51696b0fbf1"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"g", "[", "x", "]"}]], "Input",
 CellChangeTimes->{{3.85530265515672*^9, 3.855302660333702*^9}},
 CellLabel->"In[2]:=",ExpressionUUID->"d2c0facc-1ee8-4706-aab6-b5475bcb5d5c"],

Cell[BoxData[
 TagBox[GridBox[{
    {"\[Piecewise]", GridBox[{
       {"0", 
        RowBox[{"x", "<", "0"}]},
       {
        RowBox[{"1", "-", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{"-", "0.1`"}], " ", "x"}]]}], 
        RowBox[{"x", "\[GreaterEqual]", "0"}]},
       {"0", 
        TagBox["True",
         "PiecewiseDefault",
         AutoDelete->True]}
      },
      AllowedDimensions->{2, Automatic},
      Editable->True,
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.84]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}},
      Selectable->True]}
   },
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[0.35]}, 
       Offset[0.27999999999999997`]}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}}],
  "Piecewise",
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True,
  Selectable->False,
  StripWrapperBoxes->True]], "Output",
 CellChangeTimes->{3.9205372391867046`*^9},
 CellLabel->"Out[2]=",ExpressionUUID->"588adf6b-831d-c14b-8169-38bb2cf9e9ff"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"76642f3f-335b-42ec-a611-f4b5e0dda7ba"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Magnify", "[", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"Evaluate", "[", 
      RowBox[{"g", "[", "x", "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", "10"}], ",", "50"}], "}"}], ",", 
     RowBox[{"PlotTheme", "\[Rule]", "\"\<Scientific\>\""}], " ", ",", 
     RowBox[{"ImageSize", "\[Rule]", "Medium"}]}], "]"}], ",", "2"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.825499338293391*^9, 3.825499342756067*^9}, {
   3.825499374096592*^9, 3.8254995172726*^9}, {3.8254995805171294`*^9, 
   3.825499580738017*^9}, 3.825499765976895*^9, {3.82550098549673*^9, 
   3.825500985716482*^9}, {3.855020641203966*^9, 3.8550206442410297`*^9}, {
   3.8550207299956303`*^9, 3.855020734645871*^9}, {3.855020842061291*^9, 
   3.85502091537309*^9}, {3.855021017001173*^9, 3.8550210262039757`*^9}, {
   3.8550210624686394`*^9, 3.855021074270439*^9}, {3.855022714849115*^9, 
   3.855022808344961*^9}, {3.8550228988754582`*^9, 3.855022911009011*^9}, {
   3.855023006549001*^9, 3.855023079585123*^9}, 3.855023136393858*^9, 
   3.855023183946428*^9, {3.855023214344204*^9, 3.85502324281609*^9}, {
   3.855023343071503*^9, 3.8550233677558513`*^9}, {3.855023540593035*^9, 
   3.855023591455499*^9}, {3.855023629853389*^9, 3.855023637963237*^9}, 
   3.855023830446697*^9, {3.855023876764213*^9, 3.855023891263541*^9}, {
   3.855112446475125*^9, 3.8551124857388506`*^9}, {3.855302684772976*^9, 
   3.855302713359944*^9}},
 CellLabel->"In[3]:=",ExpressionUUID->"d39374ee-cdf9-4118-9c76-ad421ab09f62"],

Cell[BoxData[
 StyleBox[
  GraphicsBox[
   InterpretationBox[{
     TagBox[{{{}, {}, 
        TagBox[
         {RGBColor[0.9, 0.36, 0.054], AbsoluteThickness[1.6], Opacity[1.], 
          CapForm["Butt"], LineBox[CompressedData["
1:eJxTTMoPSmViYGBQAGIQXbbt5bX//5UPMEDBhmLn+5O/IfivDOY+V3+L4Met
DvjhfwvBd1+wXXLBFgRfoqs1xiETwd8dq/io4ZISnM/AGvmWcakinC8Tt0Z3
up4cnJ8vsLjnXKYkwv7JC0J/7BGB82/NKe5MCuWH833PzauXuccK5y+4zdTy
0vz7fhh/Xey2nPDn3+D8vfczQ49OQ/BvPb6gtvDrVzhf5M28kxGbv8D5nX+s
+E/ofYLzH1s9M/H1fgXnM9j7smmuegnnyzlvuc7CieBHeDdV7Tn2HM4/Ey13
QNvpKZy/tSbMm8vyAZwv9UuqXXb2CTh/leXWS/ccj8H5VpX+cgteHIbzN31g
z3bN2QfnJ93a3D/fZTmc77TRssZz/2w4/5nInjlN0yfD+QBiLoyj
           "]], LineBox[CompressedData["
1:eJwV0mlQk3cQBvBwjEVUiuGmQhGJo5FL5BCl7nLJHygjlbGiHJYjGhEqOoKC
FQNNMbYRlUixGA9OESggWoU0KEQR0IrlUGI4vDjESF4UElAH6dsPO8/8Znee
T7s0du9mjjaDwQim5/8cMZaKs/JFwGAUzth9twMWmyurLglrgZcSW90Ynw5d
FlkZ5941AGNHosmBMj5cKwgZNS+5BTz+V2HPogRw/8TCFcGVzcDryGYKjYRQ
YSA/1RZ1D5oY7Oon0tOQYLg39o7sEfC6Nk3nmv8BmuMdWZEbn4JNr43F7u5i
cEzQGvi0XwH4tSWJlZTAziBXj3MX+6Bp4TomdakUevULlE9nBgA9NvneTbwM
/S0uFZVbXkColk9x7FwFSDd+Zq7UG4HnK41rQ/Suwk8kb2hZEgXlU6Vm9u9v
wr/D/AzWAm2ciNrBTpG3g1GjUtlwYgGGR0T0tJd2gW5akcw1mYmp78oH3hf1
wsHINbtnM8zQOCPT0v/Hfqh70apj67EEnyacte5c/Rwmt9pIIyps8LDYR5xj
9hLSvt/m7eCwDD+WW3qW/f0Khlhnmqr4LOQ2syaLTYfhgUVz1ZDBCqzYdOdy
W9wI5A9SufeT2Gj3Ba+nLXUUnrUajnDn7PHCZYXUIeM1iIijrsEvTiiIIcaD
MWNg+nB5Ti3ljF7ckw5DVm/ARlAT6u7ughfTue83dL0B8SpPQ6Nda9D0DDPK
dJcSOiy93SZPu2LmbXl9y2slbFgiO+X0xA2FQ7eCt3PewtJ5fmMyXQ/kqmVX
XP95Cz7acKju27Vo8jpJ0+I4DhZB9YmlOZ542NpcX4s/DrHpLtGUZB3+3NJ7
g3N/HMakrOw8hhdW3pxjqRep4OWoRWWu8zeoWH5bUu+vgtxooZto+wYUQRh/
c6oKeKMHNdR5wGT7gbj5pSpItndRdHIQE3TiF4gfqABU8T3b5nvj2YRu8dkJ
FQTYmYcsKvLGjDWPdK2/pIDN+/WQzMMHDzWGnL++kgJ7judtlsIH1Xfvznr5
UrDrFpd/fZ8vntqjGQ4Np6D5Uk/8OxM/FGf5OWYlUqApn5t2uumHhZi7dvoI
BRxW5fyCEH/cbzQ+HiOkYJItcq+b8MfjxUED7gUUSEo+vVALNuINpY5fYSkF
kX7LcL11ADJ/ONEpqqHAKulYg2NTAOZEtlbYNlBgpp94NWQrQS+dnFfzmiko
8z2SPrGNoK4wbdEK2q5HcnxFkQQHGSpWIO3QidrH8hiCyQd+t/2NtuCJ+kNc
IsHWvuFgAxkFM0VHfdIzCQpq9u1cfIcCxXpRd1klQb3C/g/6LRRwU0rEgdUE
z5GIeWzamuq/OG9rCXp/PqodSJtpK59efYMgU2uwPZt2sJ7VksYmgmnx/Xla
9yiQ9pTFdz8mGPYsjD1FO8ig3iFVTuj/cHFjtlIgD2jXmPcRXF0Czs60pyRK
QfRzgtwinek9tB0Knf8ce0Owr8uq7SVtqcI7VThOsEQ7bAujje4zDgOnCYK5
ljP0BQU7j6V0HlATXNVadzGc9lRTdoHZDEGPa3JVCu2sj/lxko/03v2ko4i2
oesV+6hZgp+SB6NraV9Ikqjn5giG8jqOPqT9Hy/rRvY=
           "]]},
         Annotation[#, "Charting`Private`Tag#1"]& ], {}}, {}},
      {"WolframDynamicHighlight", <|
       "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>}], 
     StyleBox[
      DynamicBox[(Charting`HighlightActionBox["DynamicHighlight", {}, 
        Slot["HighlightElements"], 
        Slot["LayoutOptions"], 
        Slot["Meta"], 
        Charting`HighlightActionFunction["DynamicHighlight", {{{{}, {}, 
            Annotation[{
              Directive[
               Opacity[1.], 
               RGBColor[0.9, 0.36, 0.054], 
               CapForm["Butt"], 
               AbsoluteThickness[1.6]], 
              Line[CompressedData["
1:eJxTTMoPSmViYGBQAGIQXbbt5bX//5UPMEDBhmLn+5O/IfivDOY+V3+L4Met
DvjhfwvBd1+wXXLBFgRfoqs1xiETwd8dq/io4ZISnM/AGvmWcakinC8Tt0Z3
up4cnJ8vsLjnXKYkwv7JC0J/7BGB82/NKe5MCuWH833PzauXuccK5y+4zdTy
0vz7fhh/Xey2nPDn3+D8vfczQ49OQ/BvPb6gtvDrVzhf5M28kxGbv8D5nX+s
+E/ofYLzH1s9M/H1fgXnM9j7smmuegnnyzlvuc7CieBHeDdV7Tn2HM4/Ey13
QNvpKZy/tSbMm8vyAZwv9UuqXXb2CTh/leXWS/ccj8H5VpX+cgteHIbzN31g
z3bN2QfnJ93a3D/fZTmc77TRssZz/2w4/5nInjlN0yfD+QBiLoyj
               "]], 
              Line[CompressedData["
1:eJwV0mlQk3cQBvBwjEVUiuGmQhGJo5FL5BCl7nLJHygjlbGiHJYjGhEqOoKC
FQNNMbYRlUixGA9OESggWoU0KEQR0IrlUGI4vDjESF4UElAH6dsPO8/8Znee
T7s0du9mjjaDwQim5/8cMZaKs/JFwGAUzth9twMWmyurLglrgZcSW90Ynw5d
FlkZ5941AGNHosmBMj5cKwgZNS+5BTz+V2HPogRw/8TCFcGVzcDryGYKjYRQ
YSA/1RZ1D5oY7Oon0tOQYLg39o7sEfC6Nk3nmv8BmuMdWZEbn4JNr43F7u5i
cEzQGvi0XwH4tSWJlZTAziBXj3MX+6Bp4TomdakUevULlE9nBgA9NvneTbwM
/S0uFZVbXkColk9x7FwFSDd+Zq7UG4HnK41rQ/Suwk8kb2hZEgXlU6Vm9u9v
wr/D/AzWAm2ciNrBTpG3g1GjUtlwYgGGR0T0tJd2gW5akcw1mYmp78oH3hf1
wsHINbtnM8zQOCPT0v/Hfqh70apj67EEnyacte5c/Rwmt9pIIyps8LDYR5xj
9hLSvt/m7eCwDD+WW3qW/f0Khlhnmqr4LOQ2syaLTYfhgUVz1ZDBCqzYdOdy
W9wI5A9SufeT2Gj3Ba+nLXUUnrUajnDn7PHCZYXUIeM1iIijrsEvTiiIIcaD
MWNg+nB5Ti3ljF7ckw5DVm/ARlAT6u7ughfTue83dL0B8SpPQ6Nda9D0DDPK
dJcSOiy93SZPu2LmbXl9y2slbFgiO+X0xA2FQ7eCt3PewtJ5fmMyXQ/kqmVX
XP95Cz7acKju27Vo8jpJ0+I4DhZB9YmlOZ542NpcX4s/DrHpLtGUZB3+3NJ7
g3N/HMakrOw8hhdW3pxjqRep4OWoRWWu8zeoWH5bUu+vgtxooZto+wYUQRh/
c6oKeKMHNdR5wGT7gbj5pSpItndRdHIQE3TiF4gfqABU8T3b5nvj2YRu8dkJ
FQTYmYcsKvLGjDWPdK2/pIDN+/WQzMMHDzWGnL++kgJ7judtlsIH1Xfvznr5
UrDrFpd/fZ8vntqjGQ4Np6D5Uk/8OxM/FGf5OWYlUqApn5t2uumHhZi7dvoI
BRxW5fyCEH/cbzQ+HiOkYJItcq+b8MfjxUED7gUUSEo+vVALNuINpY5fYSkF
kX7LcL11ADJ/ONEpqqHAKulYg2NTAOZEtlbYNlBgpp94NWQrQS+dnFfzmiko
8z2SPrGNoK4wbdEK2q5HcnxFkQQHGSpWIO3QidrH8hiCyQd+t/2NtuCJ+kNc
IsHWvuFgAxkFM0VHfdIzCQpq9u1cfIcCxXpRd1klQb3C/g/6LRRwU0rEgdUE
z5GIeWzamuq/OG9rCXp/PqodSJtpK59efYMgU2uwPZt2sJ7VksYmgmnx/Xla
9yiQ9pTFdz8mGPYsjD1FO8ig3iFVTuj/cHFjtlIgD2jXmPcRXF0Czs60pyRK
QfRzgtwinek9tB0Knf8ce0Owr8uq7SVtqcI7VThOsEQ7bAujje4zDgOnCYK5
ljP0BQU7j6V0HlATXNVadzGc9lRTdoHZDEGPa3JVCu2sj/lxko/03v2ko4i2
oesV+6hZgp+SB6NraV9Ikqjn5giG8jqOPqT9Hy/rRvY=
               "]]}, "Charting`Private`Tag#1"], {}}}, {}}, <|
         "HighlightElements" -> <|
           "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
          "LayoutOptions" -> <|
           "PanelPlotLayout" -> <||>, 
            "PlotRange" -> {{-10, 50}, {0., 0.9932620521758597}}, 
            "Frame" -> {{True, True}, {True, True}}, "AxesOrigin" -> {0, 0}, 
            "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {False, False}, 
            "LabelStyle" -> {FontFamily -> "Times"}, "AspectRatio" -> 
            GoldenRatio^(-1), "DefaultStyle" -> {
              Directive[
               Opacity[1.], 
               RGBColor[0.9, 0.36, 0.054], 
               CapForm["Butt"], 
               AbsoluteThickness[1.6]]}, 
            "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
                Identity[
                 Part[#, 1]], 
                Identity[
                 Part[#, 2]]}& ), 
              "ScalingFunctions" -> {{Identity, Identity}, {
                Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
            False|>, 
          "Meta" -> <|
           "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
            Plot, "GroupHighlight" -> False|>|>]]& )[<|
        "HighlightElements" -> <|
          "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
         "LayoutOptions" -> <|
          "PanelPlotLayout" -> <||>, 
           "PlotRange" -> {{-10, 50}, {0., 0.9932620521758597}}, 
           "Frame" -> {{True, True}, {True, True}}, "AxesOrigin" -> {0, 0}, 
           "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {False, False}, 
           "LabelStyle" -> {FontFamily -> "Times"}, "AspectRatio" -> 
           GoldenRatio^(-1), "DefaultStyle" -> {
             Directive[
              Opacity[1.], 
              RGBColor[0.9, 0.36, 0.054], 
              CapForm["Butt"], 
              AbsoluteThickness[1.6]]}, 
           "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
               Identity[
                Part[#, 1]], 
               Identity[
                Part[#, 2]]}& ), 
             "ScalingFunctions" -> {{Identity, Identity}, {
               Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
           False|>, 
         "Meta" -> <|
          "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
           Plot, "GroupHighlight" -> False|>|>],
       ImageSizeCache->{{4.503599627370496*^15, -4.503599627370496*^15}, {
        4.503599627370496*^15, -4.503599627370496*^15}}],
      Selectable->False]},
    Annotation[{{{{}, {}, 
        Annotation[{
          Directive[
           Opacity[1.], 
           RGBColor[0.9, 0.36, 0.054], 
           CapForm["Butt"], 
           AbsoluteThickness[1.6]], 
          Line[CompressedData["
1:eJxTTMoPSmViYGBQAGIQXbbt5bX//5UPMEDBhmLn+5O/IfivDOY+V3+L4Met
DvjhfwvBd1+wXXLBFgRfoqs1xiETwd8dq/io4ZISnM/AGvmWcakinC8Tt0Z3
up4cnJ8vsLjnXKYkwv7JC0J/7BGB82/NKe5MCuWH833PzauXuccK5y+4zdTy
0vz7fhh/Xey2nPDn3+D8vfczQ49OQ/BvPb6gtvDrVzhf5M28kxGbv8D5nX+s
+E/ofYLzH1s9M/H1fgXnM9j7smmuegnnyzlvuc7CieBHeDdV7Tn2HM4/Ey13
QNvpKZy/tSbMm8vyAZwv9UuqXXb2CTh/leXWS/ccj8H5VpX+cgteHIbzN31g
z3bN2QfnJ93a3D/fZTmc77TRssZz/2w4/5nInjlN0yfD+QBiLoyj
           "]], 
          Line[CompressedData["
1:eJwV0mlQk3cQBvBwjEVUiuGmQhGJo5FL5BCl7nLJHygjlbGiHJYjGhEqOoKC
FQNNMbYRlUixGA9OESggWoU0KEQR0IrlUGI4vDjESF4UElAH6dsPO8/8Znee
T7s0du9mjjaDwQim5/8cMZaKs/JFwGAUzth9twMWmyurLglrgZcSW90Ynw5d
FlkZ5941AGNHosmBMj5cKwgZNS+5BTz+V2HPogRw/8TCFcGVzcDryGYKjYRQ
YSA/1RZ1D5oY7Oon0tOQYLg39o7sEfC6Nk3nmv8BmuMdWZEbn4JNr43F7u5i
cEzQGvi0XwH4tSWJlZTAziBXj3MX+6Bp4TomdakUevULlE9nBgA9NvneTbwM
/S0uFZVbXkColk9x7FwFSDd+Zq7UG4HnK41rQ/Suwk8kb2hZEgXlU6Vm9u9v
wr/D/AzWAm2ciNrBTpG3g1GjUtlwYgGGR0T0tJd2gW5akcw1mYmp78oH3hf1
wsHINbtnM8zQOCPT0v/Hfqh70apj67EEnyacte5c/Rwmt9pIIyps8LDYR5xj
9hLSvt/m7eCwDD+WW3qW/f0Khlhnmqr4LOQ2syaLTYfhgUVz1ZDBCqzYdOdy
W9wI5A9SufeT2Gj3Ba+nLXUUnrUajnDn7PHCZYXUIeM1iIijrsEvTiiIIcaD
MWNg+nB5Ti3ljF7ckw5DVm/ARlAT6u7ughfTue83dL0B8SpPQ6Nda9D0DDPK
dJcSOiy93SZPu2LmbXl9y2slbFgiO+X0xA2FQ7eCt3PewtJ5fmMyXQ/kqmVX
XP95Cz7acKju27Vo8jpJ0+I4DhZB9YmlOZ542NpcX4s/DrHpLtGUZB3+3NJ7
g3N/HMakrOw8hhdW3pxjqRep4OWoRWWu8zeoWH5bUu+vgtxooZto+wYUQRh/
c6oKeKMHNdR5wGT7gbj5pSpItndRdHIQE3TiF4gfqABU8T3b5nvj2YRu8dkJ
FQTYmYcsKvLGjDWPdK2/pIDN+/WQzMMHDzWGnL++kgJ7judtlsIH1Xfvznr5
UrDrFpd/fZ8vntqjGQ4Np6D5Uk/8OxM/FGf5OWYlUqApn5t2uumHhZi7dvoI
BRxW5fyCEH/cbzQ+HiOkYJItcq+b8MfjxUED7gUUSEo+vVALNuINpY5fYSkF
kX7LcL11ADJ/ONEpqqHAKulYg2NTAOZEtlbYNlBgpp94NWQrQS+dnFfzmiko
8z2SPrGNoK4wbdEK2q5HcnxFkQQHGSpWIO3QidrH8hiCyQd+t/2NtuCJ+kNc
IsHWvuFgAxkFM0VHfdIzCQpq9u1cfIcCxXpRd1klQb3C/g/6LRRwU0rEgdUE
z5GIeWzamuq/OG9rCXp/PqodSJtpK59efYMgU2uwPZt2sJ7VksYmgmnx/Xla
9yiQ9pTFdz8mGPYsjD1FO8ig3iFVTuj/cHFjtlIgD2jXmPcRXF0Czs60pyRK
QfRzgtwinek9tB0Knf8ce0Owr8uq7SVtqcI7VThOsEQ7bAujje4zDgOnCYK5
ljP0BQU7j6V0HlATXNVadzGc9lRTdoHZDEGPa3JVCu2sj/lxko/03v2ko4i2
oesV+6hZgp+SB6NraV9Ikqjn5giG8jqOPqT9Hy/rRvY=
           "]]}, "Charting`Private`Tag#1"], {}}}, {}}, <|
     "HighlightElements" -> <|
       "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
      "LayoutOptions" -> <|
       "PanelPlotLayout" -> <||>, 
        "PlotRange" -> {{-10, 50}, {0., 0.9932620521758597}}, 
        "Frame" -> {{True, True}, {True, True}}, "AxesOrigin" -> {0, 0}, 
        "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {False, False}, 
        "LabelStyle" -> {FontFamily -> "Times"}, "AspectRatio" -> 
        GoldenRatio^(-1), "DefaultStyle" -> {
          Directive[
           Opacity[1.], 
           RGBColor[0.9, 0.36, 0.054], 
           CapForm["Butt"], 
           AbsoluteThickness[1.6]]}, 
        "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), 
          "ScalingFunctions" -> {{Identity, Identity}, {
            Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> False|>, 
      "Meta" -> <|
       "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
        Plot, "GroupHighlight" -> False|>|>, "DynamicHighlight"]],
   AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
   Axes->{False, False},
   AxesLabel->{None, None},
   AxesOrigin->{0, 0},
   DisplayFunction->Identity,
   Frame->{{True, True}, {True, True}},
   FrameLabel->{{None, None}, {None, None}},
   FrameStyle->Automatic,
   FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
   GridLines->{{0}, {0}},
   GridLinesStyle->Directive[
     GrayLevel[0.5, 0.4]],
   ImagePadding->All,
   ImageSize->Medium,
   LabelStyle->{FontFamily -> "Times"},
   Method->{
    "DefaultBoundaryStyle" -> Automatic, 
     "DefaultGraphicsInteraction" -> {
      "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
       "Effects" -> {
        "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
         "Droplines" -> {
          "freeformCursorMode" -> True, 
           "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
     "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None, 
     "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
         (Identity[#]& )[
          Part[#, 1]], 
         (Identity[#]& )[
          Part[#, 2]]}& ), "CopiedValueFunction" -> ({
         (Identity[#]& )[
          Part[#, 1]], 
         (Identity[#]& )[
          Part[#, 2]]}& )}},
   PlotRange->{{-10, 50}, {0., 0.9932620521758597}},
   PlotRangeClipping->True,
   PlotRangePadding->{{
      Scaled[0.02], 
      Scaled[0.02]}, {
      Scaled[0.05], 
      Scaled[0.05]}},
   Ticks->{Automatic, Automatic}],
  StripOnInput->False,
  Magnification->2 Inherited]], "Output",
 CellChangeTimes->{3.920537303456352*^9},
 CellLabel->"Out[3]=",ExpressionUUID->"20c32c40-caef-f24f-bb75-a31f5e91c623"]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.9205372827701855`*^9, 
  3.92053728278623*^9}},ExpressionUUID->"2c8ad585-8101-4c63-ab74-\
29abd8407dc8"]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"276ece49-db6f-44ff-b407-85aef40795bb"],

Cell[CellGroupData[{

Cell["Derivate of the CDF is the PDF", "Item",
 CellMargins:>
  Dynamic[{{
    0.135 FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}], 0.03 
     FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]}, {
    0.0124074 FrontEnd`AbsoluteCurrentValue[{WindowSize, 2}], 
     0.11240739999999999` FrontEnd`AbsoluteCurrentValue[{WindowSize, 2}]}}],
 CellChangeTimes->{{3.8255027696755066`*^9, 3.8255027864580617`*^9}, {
  3.855034269189198*^9, 
  3.855034271932167*^9}},ExpressionUUID->"0ca1a13b-cfa2-432e-a782-\
c1a67a09e7c8"],

Cell[BoxData[
 RowBox[{
  RowBox[{"f", "[", "x_", "]"}], " ", ":=", " ", 
  RowBox[{"y", "=", 
   RowBox[{"1", "-", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      RowBox[{"-", "0.1"}], "x"}]]}]}]}]], "Input",
 CellChangeTimes->{{3.8255023811441326`*^9, 3.8255024457679696`*^9}, {
  3.8550344105442877`*^9, 3.855034426300166*^9}},
 CellLabel->"In[10]:=",ExpressionUUID->"580d38fd-bce8-4105-a9ff-5d98c3cdfe7c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"f", "[", "x", "]"}]], "Input",
 CellChangeTimes->{{3.85502129043309*^9, 3.855021318109783*^9}},
 CellLabel->"In[11]:=",ExpressionUUID->"6e96882a-9b60-486b-bdc3-c5acd2b3aea2"],

Cell[BoxData[
 RowBox[{"1", "-", 
  SuperscriptBox["\[ExponentialE]", 
   RowBox[{
    RowBox[{"-", "0.1`"}], " ", "x"}]]}]], "Output",
 CellChangeTimes->{
  3.855021329464501*^9, {3.855034415007612*^9, 3.8550344294620867`*^9}, 
   3.855061349525853*^9, 3.855102463781191*^9, 3.8551125182606*^9, 
   3.855124916993419*^9, 3.855305292670991*^9, 3.886754656627348*^9, 
   3.8867554342491665`*^9, 3.9205378883160744`*^9},
 CellLabel->"Out[11]=",ExpressionUUID->"6c362222-6f76-714c-b1a3-56748af6e242"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"f", "'"}], "[", "x", "]"}]], "Input",
 CellLabel->"In[12]:=",ExpressionUUID->"15a22bb5-7da8-4aaa-b795-6ef7cc1fba09"],

Cell[BoxData[
 RowBox[{"0.1`", " ", 
  SuperscriptBox["\[ExponentialE]", 
   RowBox[{
    RowBox[{"-", "0.1`"}], " ", "x"}]]}]], "Output",
 CellChangeTimes->{
  3.825502468864288*^9, 3.8550213357908764`*^9, {3.855034417120108*^9, 
   3.855034432138043*^9}, 3.85506135560222*^9, 3.855102468054829*^9, 
   3.855112519942232*^9, 3.8551249193543825`*^9, 3.855305306921752*^9, 
   3.8867546601314898`*^9, 3.88675544341538*^9, 3.920537900816847*^9},
 CellLabel->"Out[12]=",ExpressionUUID->"d5dd5e4d-c2ee-7c4e-ae92-a7ad18119ed6"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"e16c2549-9684-491f-87e8-fafbf5be272b"],

Cell[CellGroupData[{

Cell["derivative of 1- E^(-0.1*x)", "WolframAlphaLong",
 CellMargins:>
  Dynamic[{{
    0.135 FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}], 0.03 
     FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]}, {
    0.01972855652173913 FrontEnd`AbsoluteCurrentValue[{WindowSize, 2}], 
     0.11199100621118013` FrontEnd`AbsoluteCurrentValue[{WindowSize, 2}]}}],
 CellChangeTimes->{{3.855021779303428*^9, 3.855021806191176*^9}, 
   3.8550220378675985`*^9},
 CellLabel->"In[14]:=",ExpressionUUID->"6bb0b635-c9a9-44dd-bc7f-80d160cbabee"],

Cell[BoxData[
 NamespaceBox["WolframAlphaQueryResults",
  DynamicModuleBox[{Typeset`q$$ = "derivative of 1- E^(-0.1*x)", 
   Typeset`opts$$ = {
   AppearanceElements -> {
     "Warnings", "Assumptions", "Brand", "Pods", "PodMenus", "Unsuccessful", 
      "Sources"}, Asynchronous -> All, 
    TimeConstraint -> {20, Automatic, Automatic, Automatic}, 
    Method -> {
     "Formats" -> {"cell", "minput", "msound", "dataformats"}, "Server" -> 
      "https://api.wolframalpha.com/v1/"}}, Typeset`elements$$ = {
   "Warnings", "Assumptions", "Brand", "Pods", "PodMenus", "Unsuccessful", 
    "Sources"}, Typeset`pod1$$ = XMLElement[
   "pod", {"title" -> "Derivative", "scanner" -> "Derivative", "id" -> 
     "Input", "position" -> "100", "error" -> "false", "numsubpods" -> "1", 
     "primary" -> "true"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["minput", {}, {"D[1 - E^(-0.1 x), x]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            RowBox[{
              RowBox[{
                TagBox[
                 FractionBox["\[DifferentialD]", 
                  RowBox[{"\"\[DifferentialD]\"", "\[InvisibleSpace]", "x"}]], 
                 $CellContext`TagBoxWrapper[
                 "StringBoxes" -> RowBox[{"d/d", "\[InvisibleSpace]", "x"}]]],
                 "\[InvisibleSpace]", 
                RowBox[{"(", 
                  TagBox[
                   RowBox[{"1", "-", 
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{
                    RowBox[{"-", "0.1`"}], " ", "x"}]]}], HoldForm], ")"}]}], 
              "\[LongEqual]", 
              TagBox[
               RowBox[{"0.1`", " ", 
                 SuperscriptBox["\[ExponentialE]", 
                  RowBox[{
                    RowBox[{"-", "0.1`"}], " ", "x"}]]}], Identity]}], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {"Graphics", FontFamily -> "Times"}, 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"], 
             DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,moutput,computabledata,formatteddata,formuladata"}]}\
], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  "}], 
     XMLElement["states", {"count" -> "2"}, {
       XMLElement[
       "state", {
        "name" -> "Approximate form", "input" -> 
         "Input__Approximate form"}, {}], 
       XMLElement[
       "state", {
        "name" -> "Step-by-step solution", "input" -> 
         "Input__Step-by-step solution", "stepbystep" -> "true", 
         "buttonstyle" -> "StepByStepSolution"}, {}]}]}], Typeset`pod2$$ = 
   XMLElement[
   "pod", {"title" -> "Plots", "scanner" -> "Plotter", "id" -> "Plot", 
     "position" -> "200", "error" -> "false", "numsubpods" -> "2"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["minput", {}, {"Plot[0.1/E^(0.1 x), {x, 30., -30.}]"}], 
       XMLElement["cell", {"compressed" -> True, "string" -> False}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             FormBox[
              StyleBox[
               
               DynamicModuleBox[{
                CalculateUtilities`GraphicsUtilities`Private`max17543$$ = 0.5,
                  CalculateUtilities`GraphicsUtilities`Private`min17542$$ = \
-0.5, CalculateUtilities`GraphicsUtilities`Private`more$$ = False, 
                 Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
                 Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, 
                 Typeset`animvar$$ = 1, Typeset`name$$ = "\"untitled\"", 
                 Typeset`specs$$ = {{
                    Hold[
                    CalculateUtilities`GraphicsUtilities`Private`more$$], {
                    False, True}}, {{
                    Hold[
                    CalculateUtilities`GraphicsUtilities`Private`min17542$$], \
-0.5, "min"}, -1, 1}, {{
                    Hold[
                    CalculateUtilities`GraphicsUtilities`Private`max17543$$], 
                    0.5, "max"}, -1, 1}, {
                    Hold[
                    Style[
                    Overlay[{
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "WABitmaps", "PodInfoBackground"]]], 
                    Pane[
                    Column[{
                    Grid[{{
                    Manipulate`Place[1], 
                    Manipulate`Place[2]}}]}], 
                    ImageMargins -> {{20, 30}, {10, 10}}]}, {1, 2}, 2, 
                    Alignment -> {Left, Top}]]], 
                    Manipulate`Dump`ThisIsNotAControl}}, Typeset`size$$ = 
                 Automatic, Typeset`update$$ = 0, Typeset`initDone$$ = False, 
                 Typeset`skipInitDone$$ = False, 
                 CalculateUtilities`GraphicsUtilities`Private`more$7940822$$ = 
                 False, CalculateUtilities`GraphicsUtilities`Private`min17542$\
7940827$$ = 0, 
                 CalculateUtilities`GraphicsUtilities`Private`max17543$\
7940828$$ = 0}, 
                DynamicBox[
                 Manipulate`ManipulateBoxes[
                 2, TraditionalForm, 
                  "Variables" :> {
                   CalculateUtilities`GraphicsUtilities`Private`max17543$$ = 
                    0.5, CalculateUtilities`GraphicsUtilities`Private`\
min17542$$ = -0.5, CalculateUtilities`GraphicsUtilities`Private`more$$ = 
                    False}, "ControllerVariables" :> {
                    Hold[
                    CalculateUtilities`GraphicsUtilities`Private`more$$, 
                    CalculateUtilities`GraphicsUtilities`Private`more$7940822$\
$, False], 
                    Hold[
                    CalculateUtilities`GraphicsUtilities`Private`min17542$$, 
                    CalculateUtilities`GraphicsUtilities`Private`min17542$\
7940827$$, 0], 
                    Hold[
                    CalculateUtilities`GraphicsUtilities`Private`max17543$$, 
                    CalculateUtilities`GraphicsUtilities`Private`max17543$\
7940828$$, 0]}, "OtherVariables" :> {
                   Typeset`show$$, Typeset`bookmarkList$$, 
                    Typeset`bookmarkMode$$, Typeset`animator$$, 
                    Typeset`animvar$$, Typeset`name$$, Typeset`specs$$, 
                    Typeset`size$$, Typeset`update$$, Typeset`initDone$$, 
                    Typeset`skipInitDone$$}, "Body" :> Quiet[
                    Function[Null, 
                    CalculateUtilities`GraphicsUtilities`Private`post$7940798[
                    Plot[
                    SlotSequence[1], AspectRatio -> If[
                    TrueQ[
                    CalculateUtilities`GraphicsUtilities`Private`aspect], 
                    Automatic, 1/GoldenRatio]]], HoldAll][
                    0.1 E^((-0.1) $CellContext`x), {$CellContext`x, 
                    If[
                    NumericQ[
                    CalculateUtilities`GraphicsUtilities`Private`min17542$$], 
                    (
                    Piecewise[{{
                    0. - 32.07134902949092 Tan[1.5040801783846716` #], # < 
                    0}}, 0. - 32.07134902949092 
                    Tan[1.5040801783846716` #]]& )[
                    CalculateUtilities`GraphicsUtilities`Private`min17542$$], 
                    30.], 
                    If[
                    And[
                    NumericQ[
                    CalculateUtilities`GraphicsUtilities`Private`min17542$$], 
                    NumericQ[
                    CalculateUtilities`GraphicsUtilities`Private`max17543$$]], 
                    (
                    Piecewise[{{
                    0. - 32.07134902949092 Tan[1.5040801783846716` #], # < 
                    0}}, 0. - 32.07134902949092 Tan[1.5040801783846716` #]]& )[
                    If[
                    CalculateUtilities`GraphicsUtilities`Private`min17542$$ == 
                    CalculateUtilities`GraphicsUtilities`Private`max17543$$, 
                    CalculateUtilities`GraphicsUtilities`Private`min17542$$ - 
                    0.06, CalculateUtilities`GraphicsUtilities`Private`\
max17543$$]], -30.]}, LabelStyle -> {FontFamily -> "Bitstream Charter"}, 
                    WorkingPrecision -> MachinePrecision, 
                    PlotRange -> {Full, Automatic}, LabelStyle -> {}, Ticks -> 
                    Automatic, ImageSize -> Scaled[0.4], AxesLabel -> {
                    RawBoxes[
                    FormBox["x", TraditionalForm]], 
                    RawBoxes[
                    FormBox["y", TraditionalForm]]}, AxesLabel -> {
                    RawBoxes[
                    FormBox["x", TraditionalForm]], None}]], 
                  "Specifications" :> {{
                    CalculateUtilities`GraphicsUtilities`Private`more$$, {
                    False, True}, ControlType -> None}, {{
                    CalculateUtilities`GraphicsUtilities`Private`min17542$$, \
-0.5, "min"}, -1, 1, ImageSize -> Tiny, ControlPlacement -> 1}, {{
                    CalculateUtilities`GraphicsUtilities`Private`max17543$$, 
                    0.5, "max"}, -1, 1, ImageSize -> Tiny, ControlPlacement -> 
                    2}, 
                    Style[
                    Overlay[{
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "WABitmaps", "PodInfoBackground"]]], 
                    Pane[
                    Column[{
                    Grid[{{
                    Manipulate`Place[1], 
                    Manipulate`Place[2]}}]}], 
                    ImageMargins -> {{20, 30}, {10, 10}}]}, {1, 2}, 2, 
                    Alignment -> {Left, Top}]]}, 
                  "Options" :> {
                   ControlPlacement -> Bottom, 
                    FrameMargins -> {{0, 0}, {0, 10}}, Paneled -> False, 
                    AppearanceElements -> {}, 
                    LabelStyle -> {
                    "DialogStyle", FontColor -> GrayLevel[0.25]}}, 
                  "DefaultOptions" :> {}], SingleEvaluation -> True], 
                Initialization :> ({
                   ReleaseHold[
                    Hold[
                    CalculateUtilities`GraphicsUtilities`Private`WACleanTicks[
                    Pattern[
                    CalculateUtilities`GraphicsUtilities`Private`ticks, 
                    Blank[]]] := 
                    Module[{
                    CalculateUtilities`GraphicsUtilities`Private`res, 
                    CalculateUtilities`GraphicsUtilities`Private`unitformat}, 
                    CalculateUtilities`GraphicsUtilities`Private`res = 
                    ReplaceAll[
                    ReplaceAll[
                    Part[
                    DeleteCases[
                    Replace[
                    ReplaceAll[
                    CalculateUtilities`GraphicsUtilities`Private`ticks, 
                    Alternatives[
                    Style, $CellContext`UnitNumberForm, NumberForm] -> (#& )],
                     Pattern[CalculateUtilities`GraphicsUtilities`Private`t, {
                    PatternTest[
                    BlankSequence[], NumberQ]}] :> 
                    Thread[{CalculateUtilities`GraphicsUtilities`Private`t, 
                    CalculateUtilities`GraphicsUtilities`Private`t}]], {
                    Blank[], "", 
                    BlankNullSequence[]}], All, 
                    Span[1, 2]], Superscript[
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`b, 
                    Blank[Integer]], 
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`p, 
                    Blank[Integer]]] :> 
                    CalculateUtilities`GraphicsUtilities`Private`b^
                    CalculateUtilities`GraphicsUtilities`Private`p], Row[{
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`a, 
                    BlankSequence[]]}, "\[Times]"] :> 
                    Times[CalculateUtilities`GraphicsUtilities`Private`a]]; If[
                    MatchQ[
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`res, All, 2], 
                    Condition[
                    Pattern[
                    CalculateUtilities`GraphicsUtilities`Private`quants, {
                    Alternatives[
                    BlankSequence[$CellContext`ShortQuantity], 
                    BlankSequence[Quantity]]}], Length[
                    Union[
                    
                    Map[$CellContext`UnitObjectPart, 
                    CalculateUtilities`GraphicsUtilities`Private`quants]]] == 
                    1]], CalculateUtilities`GraphicsUtilities`Private`\
unitformat = $CellContext`ToCDFQuantityFunction[
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`res, 1, 2]]; 
                    CalculateUtilities`GraphicsUtilities`Private`unitformat -> 
                    Thread[{
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`res, All, 1], 
                    $CellContext`QuantityPart[
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`res, All, 2], 
                    $CellContext`UnitObjectPart[
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`res, 1, 
                    2]]]}], 
                    CalculateUtilities`GraphicsUtilities`Private`res]]; 
                    Options[
                    CalculateUtilities`GraphicsUtilities`Private`post$7940798]\
 = {"ReturnInteractiveTypes" -> False, "Nearest" -> Automatic}; 
                    CalculateUtilities`GraphicsUtilities`Private`post$7940798[
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`g, 
                    Blank[Graphics]], 
                    OptionsPattern[]] := Check[
                    
                    Module[{
                    CalculateUtilities`GraphicsUtilities`Private`lines, 
                    CalculateUtilities`GraphicsUtilities`Private`pts, 
                    CalculateUtilities`GraphicsUtilities`Private`gg, 
                    CalculateUtilities`GraphicsUtilities`Private`type, 
                    CalculateUtilities`GraphicsUtilities`Private`b, 
                    CalculateUtilities`GraphicsUtilities`Private`l, 
                    CalculateUtilities`GraphicsUtilities`Private`t, 
                    CalculateUtilities`GraphicsUtilities`Private`r, 
                    CalculateUtilities`GraphicsUtilities`Private`oldepilog, 
                    CalculateUtilities`GraphicsUtilities`Private`range, 
                    CalculateUtilities`GraphicsUtilities`Private`gridlines, 
                    CalculateUtilities`GraphicsUtilities`Private`oldgridlines,
                     CalculateUtilities`GraphicsUtilities`Private`\
neareststyle = OptionValue["Nearest"]}, 
                    CalculateUtilities`GraphicsUtilities`Private`oldepilog = 
                    Replace[
                    ReplaceAll[Epilog, 
                    Options[CalculateUtilities`GraphicsUtilities`Private`g]], 
                    Epilog -> Sequence[]]; Switch[
                    ReplaceAll[{Frame, Axes}, 
                    Options[
                    CalculateUtilities`GraphicsUtilities`Private`g]], {True, 
                    Blank[]}, 
                    CalculateUtilities`GraphicsUtilities`Private`type = 
                    Frame; {CalculateUtilities`GraphicsUtilities`Private`b, 
                    CalculateUtilities`GraphicsUtilities`Private`l, 
                    CalculateUtilities`GraphicsUtilities`Private`t, 
                    CalculateUtilities`GraphicsUtilities`Private`r} = 
                    CalculateUtilities`GraphicsUtilities`Private`\
ScaleCoordinatesToTicks[Frame, 
                    ReplaceAll[FrameTicks, 
                    Options[
                    CalculateUtilities`GraphicsUtilities`Private`g]]], {
                    Blank[], True}, 
                    CalculateUtilities`GraphicsUtilities`Private`type = 
                    Axes; {CalculateUtilities`GraphicsUtilities`Private`b, 
                    CalculateUtilities`GraphicsUtilities`Private`l} = 
                    CalculateUtilities`GraphicsUtilities`Private`\
ScaleCoordinatesToTicks[Axes, 
                    ReplaceAll[Ticks, 
                    Options[CalculateUtilities`GraphicsUtilities`Private`g]]], 
                    Blank[], 
                    CalculateUtilities`GraphicsUtilities`Private`type = None]; 
                    If[
                    And[
                    CalculateUtilities`GraphicsUtilities`Private`type === 
                    Frame, 
                    Or[
                    Not[
                    Or[
                    CalculateUtilities`GraphicsUtilities`Private`t === None, 
                    CalculateUtilities`GraphicsUtilities`Private`b === 
                    CalculateUtilities`GraphicsUtilities`Private`t]], 
                    Not[
                    Or[
                    CalculateUtilities`GraphicsUtilities`Private`r === None, 
                    CalculateUtilities`GraphicsUtilities`Private`l === 
                    CalculateUtilities`GraphicsUtilities`Private`r]]]], 
                    CalculateUtilities`GraphicsUtilities`Private`type = None]; 
                    If[
                    TrueQ[
                    OptionValue["ReturnInteractiveTypes"]], 
                    Which[
                    Or[
                    CalculateUtilities`GraphicsUtilities`Private`type === 
                    None, CalculateUtilities`GraphicsUtilities`Private`b === 
                    None, CalculateUtilities`GraphicsUtilities`Private`l === 
                    None], {}, 
                    FreeQ[CalculateUtilities`GraphicsUtilities`Private`g, 
                    Alternatives[Line, Point]], {}, True, {
                    "Tooltips", "Coordinates"}], If[
                    FreeQ[CalculateUtilities`GraphicsUtilities`Private`g, 
                    Alternatives[Line, Point]], 
                    Return[CalculateUtilities`GraphicsUtilities`Private`g]]; 
                    CalculateUtilities`GraphicsUtilities`Private`gg = 
                    Normal[CalculateUtilities`GraphicsUtilities`Private`g]; 
                    CalculateUtilities`GraphicsUtilities`Private`pts = 
                    Partition[
                    Flatten[
                    Cases[
                    Part[CalculateUtilities`GraphicsUtilities`Private`gg, 1], 
                    Point[
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`a, 
                    Blank[]]] :> 
                    CalculateUtilities`GraphicsUtilities`Private`a, 
                    Infinity]], 2]; 
                    If[Length[
                    CalculateUtilities`GraphicsUtilities`Private`pts] < 2, 
                    CalculateUtilities`GraphicsUtilities`Private`lines = Cases[
                    Part[CalculateUtilities`GraphicsUtilities`Private`gg, 1], 
                    Blank[Line], Infinity]; 
                    If[CalculateUtilities`GraphicsUtilities`Private`lines === \
{}, 
                    Return[CalculateUtilities`GraphicsUtilities`Private`g]]; 
                    CalculateUtilities`GraphicsUtilities`Private`pts = Flatten[
                    Cases[
                    CalculateUtilities`GraphicsUtilities`Private`lines, Line[
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`a, 
                    Blank[]]] :> 
                    CalculateUtilities`GraphicsUtilities`Private`a, Infinity],
                     1]; If[
                    CalculateUtilities`GraphicsUtilities`Private`neareststyle === 
                    Automatic, If[
                    CalculateUtilities`GraphicsUtilities`Private`orderedLines[
                    CalculateUtilities`GraphicsUtilities`Private`lines], 
                    CalculateUtilities`GraphicsUtilities`Private`neareststyle = 
                    "1D", CalculateUtilities`GraphicsUtilities`Private`\
neareststyle = "2D"]; Null], 
                    If[
                    CalculateUtilities`GraphicsUtilities`Private`neareststyle === 
                    Automatic, 
                    CalculateUtilities`GraphicsUtilities`Private`neareststyle = 
                    "2D"]]; 
                    CalculateUtilities`GraphicsUtilities`Private`range = 
                    Replace[
                    ReplaceAll[PlotRange, 
                    Options[CalculateUtilities`GraphicsUtilities`Private`g]], 
                    Except[{{
                    PatternTest[
                    Blank[], NumberQ], 
                    PatternTest[
                    Blank[], NumberQ]}, {
                    PatternTest[
                    Blank[], NumberQ], 
                    PatternTest[
                    Blank[], NumberQ]}}] :> {
                    Through[
                    {Min, Max}[
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`pts, All, 
                    1]]], 
                    Through[
                    {Min, Max}[
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`pts, All, 
                    2]]]}]; CalculateUtilities`GraphicsUtilities`Private`b = 
                    CalculateUtilities`GraphicsUtilities`Private`\
RefineCoordinateFunction[CalculateUtilities`GraphicsUtilities`Private`b, 
                    First[CalculateUtilities`GraphicsUtilities`Private`range], 
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`pts, All, 
                    1]]; CalculateUtilities`GraphicsUtilities`Private`l = 
                    CalculateUtilities`GraphicsUtilities`Private`\
RefineCoordinateFunction[CalculateUtilities`GraphicsUtilities`Private`l, 
                    Last[CalculateUtilities`GraphicsUtilities`Private`range], 
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`pts, All, 
                    2]]; CalculateUtilities`GraphicsUtilities`Private`\
oldgridlines = ReplaceAll[GridLines, 
                    Options[CalculateUtilities`GraphicsUtilities`Private`g]]; 
                    CalculateUtilities`GraphicsUtilities`Private`gridlines = 
                    With[{CalculateUtilities`GraphicsUtilities`Private`gray = 
                    GrayLevel[0.7]}, 
                    Replace[
                    CalculateUtilities`GraphicsUtilities`Private`oldgridlines,\
 {Pattern[CalculateUtilities`GraphicsUtilities`Private`a, {
                    Blank[List], 
                    Blank[List]}] :> Dynamic[
                    Join[CalculateUtilities`GraphicsUtilities`Private`a, 
                    Replace[
                    MousePosition[{"Graphics", Graphics}, None], {
                    None -> {{}, {}}, {
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`x, 
                    Blank[]], 
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`y, 
                    Blank[]]} :> {{{
                    CalculateUtilities`GraphicsUtilities`Private`x, 
                    CalculateUtilities`GraphicsUtilities`Private`gray}}, {{
                    CalculateUtilities`GraphicsUtilities`Private`y, 
                    CalculateUtilities`GraphicsUtilities`Private`gray}}}}], 
                    2]], {
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`a, 
                    Blank[List]], Automatic} :> 
                    With[{CalculateUtilities`GraphicsUtilities`Private`\
divisions = {CalculateUtilities`GraphicsUtilities`Private`a, 
                    FindDivisions[
                    Last[CalculateUtilities`GraphicsUtilities`Private`range], 
                    7]}}, 
                    Dynamic[
                    Join[
                    CalculateUtilities`GraphicsUtilities`Private`divisions, 
                    Replace[
                    MousePosition[{"Graphics", Graphics}, None], {
                    None -> {{}, {}}, {
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`x, 
                    Blank[]], 
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`y, 
                    Blank[]]} :> {{{
                    CalculateUtilities`GraphicsUtilities`Private`x, 
                    CalculateUtilities`GraphicsUtilities`Private`gray}}, {{
                    CalculateUtilities`GraphicsUtilities`Private`y, 
                    CalculateUtilities`GraphicsUtilities`Private`gray}}}}], 
                    2]]], Blank[] -> Dynamic[
                    
                    Map[{{#, 
                    CalculateUtilities`GraphicsUtilities`Private`gray}}& , 
                    MousePosition[{"Graphics", Graphics}, None]]]}]]; If[
                    Or[
                    CalculateUtilities`GraphicsUtilities`Private`type === 
                    None, CalculateUtilities`GraphicsUtilities`Private`b === 
                    None, CalculateUtilities`GraphicsUtilities`Private`l === 
                    None], 
                    Show[
                    CalculateUtilities`GraphicsUtilities`Private`g, GridLines -> 
                    CalculateUtilities`GraphicsUtilities`Private`gridlines, 
                    If[
                    MatchQ[
                    CalculateUtilities`GraphicsUtilities`Private`oldgridlines, 
                    Alternatives[None, GridLines]], 
                    Method -> {"GridLinesInFront" -> True}, 
                    Apply[Sequence, {}]]], 
                    
                    With[{CalculateUtilities`GraphicsUtilities`Private`nf = 
                    If[CalculateUtilities`GraphicsUtilities`Private`\
neareststyle === "1D", 
                    
                    With[{CalculateUtilities`GraphicsUtilities`Private`n = 
                    Nearest[Part[
                    CalculateUtilities`GraphicsUtilities`Private`pts, All, 1] -> 
                    CalculateUtilities`GraphicsUtilities`Private`pts]}, 
                    CalculateUtilities`GraphicsUtilities`Private`n[
                    Part[#, 1]]& ], 
                    
                    With[{CalculateUtilities`GraphicsUtilities`Private`n = 
                    Nearest[Transpose[
                    Transpose[
                    CalculateUtilities`GraphicsUtilities`Private`pts]/Abs[
                    Apply[
                    Subtract, 
                    CalculateUtilities`GraphicsUtilities`Private`range, {
                    1}]]] -> 
                    CalculateUtilities`GraphicsUtilities`Private`pts], 
                    CalculateUtilities`GraphicsUtilities`Private`scale = Abs[
                    Apply[
                    Subtract, 
                    CalculateUtilities`GraphicsUtilities`Private`range, {
                    1}]]}, CalculateUtilities`GraphicsUtilities`Private`n[#/
                    CalculateUtilities`GraphicsUtilities`Private`scale]& ]], 
                    CalculateUtilities`GraphicsUtilities`Private`left = 
                    CalculateUtilities`GraphicsUtilities`Private`l, 
                    CalculateUtilities`GraphicsUtilities`Private`bottom = 
                    CalculateUtilities`GraphicsUtilities`Private`b}, 
                    Show[
                    CalculateUtilities`GraphicsUtilities`Private`g, GridLines -> 
                    CalculateUtilities`GraphicsUtilities`Private`gridlines, 
                    If[
                    MatchQ[
                    CalculateUtilities`GraphicsUtilities`Private`oldgridlines, 
                    Alternatives[None, GridLines]], 
                    Method -> {"GridLinesInFront" -> True}, 
                    Apply[Sequence, {}]], 
                    Epilog -> {
                    CalculateUtilities`GraphicsUtilities`Private`oldepilog, 
                    Dynamic[
                    
                    DynamicModule[{
                    CalculateUtilities`GraphicsUtilities`Private`pt = 
                    CalculateUtilities`GraphicsUtilities`Private`nf[
                    MousePosition[{"Graphics", Graphics}, {0, 0}]], 
                    CalculateUtilities`GraphicsUtilities`Private`scaled = 
                    MousePosition[{"GraphicsScaled", Graphics}, None]}, 
                    If[
                    CalculateUtilities`GraphicsUtilities`Private`scaled === 
                    None, {}, {
                    Text[
                    Style[
                    Row[{
                    CalculateUtilities`GraphicsUtilities`Private`bottom[
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`pt, 1, 1]], 
                    CalculateUtilities`GraphicsUtilities`Private`left[
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`pt, 1, 2]]}, 
                    ","], 12], 
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`pt, 1], {
                    1.5 Sign[Part[
                    CalculateUtilities`GraphicsUtilities`Private`scaled, 1] - 
                    0.5], 0}, Background -> White], 
                    AbsolutePointSize[7], 
                    Point[CalculateUtilities`GraphicsUtilities`Private`pt], 
                    White, 
                    AbsolutePointSize[5], 
                    Point[
                    CalculateUtilities`GraphicsUtilities`Private`pt]}]]]}]]]]]\
, CalculateUtilities`GraphicsUtilities`Private`g]; 
                    CalculateUtilities`GraphicsUtilities`Private`post$7940798[
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`g, 
                    Blank[]], 
                    BlankNullSequence[]] := 
                    CalculateUtilities`GraphicsUtilities`Private`g; 
                    CalculateUtilities`GraphicsUtilities`Private`orderedLines[{
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`l, 
                    BlankSequence[Line]]}] := 
                    Module[{
                    CalculateUtilities`GraphicsUtilities`Private`ordered, 
                    CalculateUtilities`GraphicsUtilities`Private`intervals}, 
                    CalculateUtilities`GraphicsUtilities`Private`ordered = 
                    Apply[And, 
                    Map[OrderedQ[
                    Part[#, 1, All, 1]]& , 
                    Hold[CalculateUtilities`GraphicsUtilities`Private`l]]]; If[
                    Not[
                    TrueQ[
                    CalculateUtilities`GraphicsUtilities`Private`ordered]], 
                    Return[False]]; 
                    CalculateUtilities`GraphicsUtilities`Private`intervals = 
                    Part[{CalculateUtilities`GraphicsUtilities`Private`l}, 
                    All, 1, {1, -1}, 1]; Length[
                    Apply[
                    Interval, 
                    CalculateUtilities`GraphicsUtilities`Private`intervals]] === 
                    Length[CalculateUtilities`GraphicsUtilities`Private`\
intervals]]; 
                    CalculateUtilities`GraphicsUtilities`Private`\
ScaleCoordinatesToTicks[Frame, 
                    Alternatives[Automatic, FrameTicks]] = {
                    Identity, Identity, Identity, Identity}; 
                    CalculateUtilities`GraphicsUtilities`Private`\
ScaleCoordinatesToTicks[Frame, {
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`b, 
                    Blank[]], 
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`l, 
                    Blank[]], 
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`t, 
                    Blank[]], 
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`r, 
                    Blank[]]}] := 
                    Map[CalculateUtilities`GraphicsUtilities`Private`\
TicksToFunction, {CalculateUtilities`GraphicsUtilities`Private`b, 
                    CalculateUtilities`GraphicsUtilities`Private`l, 
                    CalculateUtilities`GraphicsUtilities`Private`t, 
                    CalculateUtilities`GraphicsUtilities`Private`r}]; 
                    CalculateUtilities`GraphicsUtilities`Private`\
ScaleCoordinatesToTicks[Frame, {{
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`l, 
                    Blank[]], 
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`r, 
                    Blank[]]}, {
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`b, 
                    Blank[]], 
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`t, 
                    Blank[]]}}] := 
                    Map[CalculateUtilities`GraphicsUtilities`Private`\
TicksToFunction, {CalculateUtilities`GraphicsUtilities`Private`b, 
                    CalculateUtilities`GraphicsUtilities`Private`l, 
                    CalculateUtilities`GraphicsUtilities`Private`t, 
                    CalculateUtilities`GraphicsUtilities`Private`r}]; 
                    CalculateUtilities`GraphicsUtilities`Private`\
ScaleCoordinatesToTicks[Frame, 
                    Blank[]] = {None, None, None, None}; 
                    CalculateUtilities`GraphicsUtilities`Private`\
ScaleCoordinatesToTicks[Axes, 
                    Alternatives[Automatic, Ticks]] = {Identity, Identity}; 
                    CalculateUtilities`GraphicsUtilities`Private`\
ScaleCoordinatesToTicks[Axes, {
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`h, 
                    Blank[]], 
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`v, 
                    Blank[]]}] := 
                    Map[CalculateUtilities`GraphicsUtilities`Private`\
TicksToFunction, {CalculateUtilities`GraphicsUtilities`Private`h, 
                    CalculateUtilities`GraphicsUtilities`Private`v}]; 
                    CalculateUtilities`GraphicsUtilities`Private`\
ScaleCoordinatesToTicks[Axes, 
                    Blank[]] = {None, None}; 
                    CalculateUtilities`GraphicsUtilities`Private`CDFCleanTicks[
                    Pattern[
                    CalculateUtilities`GraphicsUtilities`Private`ticks, 
                    Blank[]]] := ReplaceAll[
                    ReplaceAll[
                    Part[
                    DeleteCases[
                    ReplaceAll[
                    CalculateUtilities`GraphicsUtilities`Private`ticks, 
                    Alternatives[Style, NumberForm] -> (#& )], {
                    Blank[], "", 
                    BlankNullSequence[]}], All, 
                    Span[1, 2]], Superscript[
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`b, 
                    Blank[Integer]], 
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`p, 
                    Blank[Integer]]] :> 
                    CalculateUtilities`GraphicsUtilities`Private`b^
                    CalculateUtilities`GraphicsUtilities`Private`p], Row[{
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`a, 
                    BlankSequence[]]}, "\[Times]"] :> 
                    Times[CalculateUtilities`GraphicsUtilities`Private`a]]; 
                    CalculateUtilities`GraphicsUtilities`Private`\
TicksToFunction[
                    Pattern[
                    CalculateUtilities`GraphicsUtilities`Private`ticks$, 
                    Blank[]]] := 
                    CalculateUtilities`GraphicsUtilities`Private`\
iTicksToFunction[
                    CalculateUtilities`GraphicsUtilities`Private`WACleanTicks[
                    CalculateUtilities`GraphicsUtilities`Private`ticks$]]; 
                    CalculateUtilities`GraphicsUtilities`Private`\
TicksToFunction[None] = None; 
                    CalculateUtilities`GraphicsUtilities`Private`\
TicksToFunction[False] = None; 
                    CalculateUtilities`GraphicsUtilities`Private`\
TicksToFunction[True] = None; 
                    CalculateUtilities`GraphicsUtilities`Private`\
TicksToFunction[Automatic] = Identity; 
                    CalculateUtilities`GraphicsUtilities`Private`\
TicksToFunction[All] = Identity; 
                    CalculateUtilities`GraphicsUtilities`Private`\
iTicksToFunction[Pattern[CalculateUtilities`GraphicsUtilities`Private`func, 
                    Blank[]] -> 
                    Pattern[
                    CalculateUtilities`GraphicsUtilities`Private`ticks, 
                    Blank[]]] := Replace[
                    
                    CalculateUtilities`GraphicsUtilities`Private`\
iTicksToFunction[CalculateUtilities`GraphicsUtilities`Private`ticks], 
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`f, 
                    Except[None]] :> 
                    Composition[
                    CalculateUtilities`GraphicsUtilities`Private`func, 
                    CalculateUtilities`GraphicsUtilities`Private`f]]; 
                    CalculateUtilities`GraphicsUtilities`Private`\
iTicksToFunction[{}] = None; 
                    CalculateUtilities`GraphicsUtilities`Private`\
iTicksToFunction[
                    Pattern[
                    CalculateUtilities`GraphicsUtilities`Private`ticks, {
                    Repeated[{
                    Blank[Integer], 
                    Blank[String]}]}]] := Which[
                    Quiet[
                    MatchQ[
                    Apply[SameQ, 
                    Map[Part[
                    DateList[#], 
                    Span[2, All]]& , 
                    CalculateUtilities`GraphicsUtilities`Private`ticks, {
                    2}], {1}], {
                    Repeated[True]}]], DateString, 
                    Apply[And, 
                    StringMatchQ[
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`ticks, All, 
                    2], NumberString]], 
                    
                    CalculateUtilities`GraphicsUtilities`Private`\
iTicksToFunction[
                    Transpose[{
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`ticks, All, 
                    1], 
                    ToExpression[
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`ticks, All, 
                    2]]}]], True, None]; 
                    CalculateUtilities`GraphicsUtilities`Private`\
iTicksToFunction[
                    Pattern[
                    CalculateUtilities`GraphicsUtilities`Private`ticks, {
                    Repeated[{
                    PatternTest[
                    Blank[], NumericQ], 
                    PatternTest[
                    Blank[], NumericQ]}]}]] := Which[
                    MatchQ[
                    Apply[
                    Equal, CalculateUtilities`GraphicsUtilities`Private`ticks,\
 {1}], {
                    Repeated[True]}], Identity, 
                    MatchQ[
                    
                    Apply[# == Log[#2]& , 
                    CalculateUtilities`GraphicsUtilities`Private`ticks, {1}], {
                    Repeated[True]}], Exp, 
                    TrueQ[
                    Quiet[
                    Apply[Equal, 
                    Apply[Divide, Transpose[
                    Rest[CalculateUtilities`GraphicsUtilities`Private`ticks]] - 
                    Part[CalculateUtilities`GraphicsUtilities`Private`ticks, 
                    1]]]]], 
                    
                    With[{CalculateUtilities`GraphicsUtilities`Private`slope = 
                    Apply[Divide, 
                    Apply[Subtract, 
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`ticks, {-1, 
                    1}]]]}, 
                    SetPrecision[(# - Part[
                    CalculateUtilities`GraphicsUtilities`Private`ticks, 1, 
                    1])/CalculateUtilities`GraphicsUtilities`Private`slope + 
                    Part[CalculateUtilities`GraphicsUtilities`Private`ticks, 
                    1, 2], 3]& ], True, None]; 
                    CalculateUtilities`GraphicsUtilities`Private`\
iTicksToFunction[
                    Blank[]] = None; 
                    CalculateUtilities`GraphicsUtilities`Private`\
RefineCoordinateFunction[
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`type, 
                    Blank[]], 
                    BlankNullSequence[]] := 
                    CalculateUtilities`GraphicsUtilities`Private`type; 
                    CalculateUtilities`GraphicsUtilities`Private`\
RefineCoordinateFunction[Identity, {
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`min, 
                    Blank[]], 
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`max, 
                    Blank[]]}, 
                    Blank[]] := 
                    With[{CalculateUtilities`GraphicsUtilities`Private`nf = 
                    CalculateUtilities`GraphicsUtilities`Private`numberForm, 
                    CalculateUtilities`GraphicsUtilities`Private`acc = 
                    Floor[Max[
                    Ceiling[
                    FullSimplify[Log[10, 
                    Max[
                    
                    Abs[{CalculateUtilities`GraphicsUtilities`Private`min, 
                    CalculateUtilities`GraphicsUtilities`Private`max}]]] - 
                    Log[10, (CalculateUtilities`GraphicsUtilities`Private`max - 
                    CalculateUtilities`GraphicsUtilities`Private`min)/100]]], 
                    3] - RealExponent[
                    Max[
                    
                    Abs[{CalculateUtilities`GraphicsUtilities`Private`min, 
                    CalculateUtilities`GraphicsUtilities`Private`max}]]]]}, 
                    CalculateUtilities`GraphicsUtilities`Private`nf[#, 
                    CalculateUtilities`GraphicsUtilities`Private`acc]& ]; 
                    CalculateUtilities`GraphicsUtilities`Private`\
RefineCoordinateFunction[Exp, {
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`min, 
                    Blank[]], 
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`max, 
                    Blank[]]}, 
                    Blank[]] := 
                    With[{CalculateUtilities`GraphicsUtilities`Private`prec = 
                    Max[
                    Ceiling[
                    FullSimplify[Log[10, 
                    Max[
                    
                    Abs[{CalculateUtilities`GraphicsUtilities`Private`min, 
                    CalculateUtilities`GraphicsUtilities`Private`max}]]] - 
                    Log[10, (CalculateUtilities`GraphicsUtilities`Private`max - 
                    CalculateUtilities`GraphicsUtilities`Private`min)/100]]], 
                    3]}, Quiet[
                    RawBoxes[
                    ToBoxes[
                    NumberForm[
                    Exp[#], 
                    CalculateUtilities`GraphicsUtilities`Private`prec]]]]& ]; 
                    CalculateUtilities`GraphicsUtilities`Private`\
RefineCoordinateFunction[DateString, {
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`min, 
                    Blank[]], 
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`max, 
                    Blank[]]}, 
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`pts, 
                    Blank[]]] := 
                    Module[{
                    CalculateUtilities`GraphicsUtilities`Private`dates, 
                    CalculateUtilities`GraphicsUtilities`Private`spec}, 
                    CalculateUtilities`GraphicsUtilities`Private`dates = 
                    Map[DateList, 
                    CalculateUtilities`GraphicsUtilities`Private`pts]; 
                    CalculateUtilities`GraphicsUtilities`Private`spec = Switch[
                    Map[Length, 
                    Map[Union, 
                    Transpose[
                    CalculateUtilities`GraphicsUtilities`Private`dates]]], {
                    Blank[], 1, 1, 
                    BlankSequence[]}, {"Year"}, {
                    Blank[], 
                    Blank[], 1, 
                    BlankSequence[]}, {"MonthNameShort", " ", "Year"}, 
                    Blank[], {
                    "DayShort", " ", "MonthNameShort", " ", "Year"}]; 
                    If[(CalculateUtilities`GraphicsUtilities`Private`max - 
                    CalculateUtilities`GraphicsUtilities`Private`min)/
                    31536000 > 25, 
                    CalculateUtilities`GraphicsUtilities`Private`spec = {
                    "Year"}]; 
                    With[{CalculateUtilities`GraphicsUtilities`Private`s = 
                    CalculateUtilities`GraphicsUtilities`Private`spec}, 
                    DateString[#, 
                    CalculateUtilities`GraphicsUtilities`Private`s]& ]]; 
                    CalculateUtilities`GraphicsUtilities`Private`numberForm = 
                    Function[{
                    CalculateUtilities`GraphicsUtilities`Private`a, 
                    CalculateUtilities`GraphicsUtilities`Private`acc}, 
                    Quiet[
                    RawBoxes[
                    ToBoxes[
                    NumberForm[CalculateUtilities`GraphicsUtilities`Private`a, 
                    Max[1, 
                    Ceiling[
                    RealExponent[
                    CalculateUtilities`GraphicsUtilities`Private`a] + 
                    CalculateUtilities`GraphicsUtilities`Private`acc]], 
                    ExponentFunction -> (Null& ), 
                    NumberFormat -> (StringReplace[#, StringExpression[
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`s, 
                    BlankSequence[]], ".", EndOfString] -> 
                    CalculateUtilities`GraphicsUtilities`Private`s]& )]]]]]]], 
                   ReleaseHold[
                    Uncompress[
                    "6:eJztVm1v0zAQbinv7/\
APkPiMNpgEfEACOhiTBpSkfO8tdhoL1w62sw3+PPjsJmnWrlJMB2hKP5zqS/\
P47rnnrvfoUEZpv9fr6cvWfJCcpNfw9NCaoZzlshDk3UmuqNZMivQSPrtpTUzNLuXwgxLvu2rNe6lm\
YPz5Fb4PPCk4GPrVMM4Mo3qypyDPWKJrz0ixI/uTCZcJcPaTPn7+cmfrxfaWh8FYRmAMVUI/\
awuZZwo0TXsIdMWatxzEN398UB4/FZzH9HtBRUL1PesdKyAWRgrgmE/\
wrRebqduYmAFBQJFzp8nJc9j2Am0UE9MxneX4xtlkbbcFBjXVnps7JTfrFOTDv44PZOxi8h6XtDs7A\
sPCuGD0nZbVP+dugOfXbeGVPF5NHOb3hiNvYNgR1ct0PmldJ89I1bUu+jlX5zVfNhrk2VOm/\
l86YNosh/G0bRh0dmhrvFp7y/A7beFljl0/F/\
ddaz57Rwm4ajhUgvsoScHnUTRTHniJtk9X59bhMW5VfMfoDKlghRPZOMt+\
cf1xvwKvN4UYazfZgHREPQMimlPrIo7bXTZlZpiBgsQCz6/\
rl002lnUoAXe2rz0ThNkB5glZtzyh2U8X6g4myb78UXEruZxqMuR9Xxg6pWqt6G9gfZQlV5CxDIwkx\
guaeg3msEpqBCpY9oMSJM5BMIRkv+zHffMPFyuBVO0pVJfyLA5caU7Ck+\
iXBT6gYmqy5o4dOLqC2xazieRxrbqIpenitNkc0/\
0m040bmgM9lITQkoQP9G5T6DaFv7opLO3B3ZrQrQndmtCtCd2a8P+uCS5i/Ff6DdmTuIY="]]}; 
                 Typeset`initDone$$ = True), DynamicModuleValues :> {}, 
                Deinitialization :> None, 
                UntrackedVariables :> {Typeset`size$$}, 
                SynchronousInitialization -> True, 
                UnsavedVariables :> {Typeset`initDone$$}, 
                UndoTrackedVariables :> {
                 Typeset`show$$, Typeset`bookmarkMode$$}], "Manipulate", 
               Deployed -> True, StripOnInput -> False], TraditionalForm], 
             Manipulate`InterpretManipulate[1]], TraditionalForm]], 
          "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {"Graphics", FontFamily -> "Times"}, 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"], 
             DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement["dataformats", {}, {"minput"}]}], 
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["minput", {}, {"Plot[0.1/E^(0.1 x), {x, -180., 180.}]"}], 
       XMLElement["cell", {"compressed" -> True, "string" -> False}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             FormBox[
              StyleBox[
               
               DynamicModuleBox[{
                CalculateUtilities`GraphicsUtilities`Private`max17545$$ = 0.5,
                  CalculateUtilities`GraphicsUtilities`Private`min17544$$ = \
-0.5, CalculateUtilities`GraphicsUtilities`Private`more$$ = False, 
                 Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
                 Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, 
                 Typeset`animvar$$ = 1, Typeset`name$$ = "\"untitled\"", 
                 Typeset`specs$$ = {{
                    Hold[
                    CalculateUtilities`GraphicsUtilities`Private`more$$], {
                    False, True}}, {{
                    Hold[
                    CalculateUtilities`GraphicsUtilities`Private`min17544$$], \
-0.5, "min"}, -1, 1}, {{
                    Hold[
                    CalculateUtilities`GraphicsUtilities`Private`max17545$$], 
                    0.5, "max"}, -1, 1}, {
                    Hold[
                    Style[
                    Overlay[{
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "WABitmaps", "PodInfoBackground"]]], 
                    Pane[
                    Column[{
                    Grid[{{
                    Manipulate`Place[1], 
                    Manipulate`Place[2]}}]}], 
                    ImageMargins -> {{20, 30}, {10, 10}}]}, {1, 2}, 2, 
                    Alignment -> {Left, Top}]]], 
                    Manipulate`Dump`ThisIsNotAControl}}, Typeset`size$$ = 
                 Automatic, Typeset`update$$ = 0, Typeset`initDone$$ = False, 
                 Typeset`skipInitDone$$ = False, 
                 CalculateUtilities`GraphicsUtilities`Private`more$7940920$$ = 
                 False, 
                 CalculateUtilities`GraphicsUtilities`Private`min17544$\
7940921$$ = 0, 
                 CalculateUtilities`GraphicsUtilities`Private`max17545$\
7940922$$ = 0}, 
                DynamicBox[
                 Manipulate`ManipulateBoxes[
                 2, TraditionalForm, 
                  "Variables" :> {
                   CalculateUtilities`GraphicsUtilities`Private`max17545$$ = 
                    0.5, CalculateUtilities`GraphicsUtilities`Private`\
min17544$$ = -0.5, CalculateUtilities`GraphicsUtilities`Private`more$$ = 
                    False}, "ControllerVariables" :> {
                    Hold[
                    CalculateUtilities`GraphicsUtilities`Private`more$$, 
                    CalculateUtilities`GraphicsUtilities`Private`more$7940920$\
$, False], 
                    Hold[
                    CalculateUtilities`GraphicsUtilities`Private`min17544$$, 
                    CalculateUtilities`GraphicsUtilities`Private`min17544$\
7940921$$, 0], 
                    Hold[
                    CalculateUtilities`GraphicsUtilities`Private`max17545$$, 
                    CalculateUtilities`GraphicsUtilities`Private`max17545$\
7940922$$, 0]}, "OtherVariables" :> {
                   Typeset`show$$, Typeset`bookmarkList$$, 
                    Typeset`bookmarkMode$$, Typeset`animator$$, 
                    Typeset`animvar$$, Typeset`name$$, Typeset`specs$$, 
                    Typeset`size$$, Typeset`update$$, Typeset`initDone$$, 
                    Typeset`skipInitDone$$}, "Body" :> Quiet[
                    Function[Null, 
                    CalculateUtilities`GraphicsUtilities`Private`post$7940898[
                    Plot[
                    SlotSequence[1], AspectRatio -> If[
                    TrueQ[
                    CalculateUtilities`GraphicsUtilities`Private`aspect], 
                    Automatic, 1/GoldenRatio]]], HoldAll][
                    0.1 E^((-0.1) $CellContext`x), {$CellContext`x, 
                    If[
                    NumericQ[
                    CalculateUtilities`GraphicsUtilities`Private`min17544$$], 
                    (
                    Piecewise[{{
                    0. + 192.42809417694554` Tan[1.5040801783846716` #], # < 
                    0}}, 0. + 
                    192.42809417694554` Tan[1.5040801783846716` #]]& )[
                    CalculateUtilities`GraphicsUtilities`Private`min17544$$], \
-180.], 
                    If[
                    And[
                    NumericQ[
                    CalculateUtilities`GraphicsUtilities`Private`min17544$$], 
                    NumericQ[
                    CalculateUtilities`GraphicsUtilities`Private`max17545$$]], 
                    (
                    Piecewise[{{
                    0. + 192.42809417694554` Tan[1.5040801783846716` #], # < 
                    0}}, 0. + 
                    192.42809417694554` Tan[1.5040801783846716` #]]& )[
                    If[
                    CalculateUtilities`GraphicsUtilities`Private`min17544$$ == 
                    CalculateUtilities`GraphicsUtilities`Private`max17545$$, 
                    CalculateUtilities`GraphicsUtilities`Private`min17544$$ + 
                    0.36, CalculateUtilities`GraphicsUtilities`Private`\
max17545$$]], 180.]}, LabelStyle -> {FontFamily -> "Bitstream Charter"}, 
                    WorkingPrecision -> MachinePrecision, 
                    PlotRange -> {Full, Automatic}, LabelStyle -> {}, Ticks -> 
                    Automatic, ImageSize -> Scaled[0.4], AxesLabel -> {
                    RawBoxes[
                    FormBox["x", TraditionalForm]], 
                    RawBoxes[
                    FormBox["y", TraditionalForm]]}, AxesLabel -> {
                    RawBoxes[
                    FormBox["x", TraditionalForm]], None}]], 
                  "Specifications" :> {{
                    CalculateUtilities`GraphicsUtilities`Private`more$$, {
                    False, True}, ControlType -> None}, {{
                    CalculateUtilities`GraphicsUtilities`Private`min17544$$, \
-0.5, "min"}, -1, 1, ImageSize -> Tiny, ControlPlacement -> 1}, {{
                    CalculateUtilities`GraphicsUtilities`Private`max17545$$, 
                    0.5, "max"}, -1, 1, ImageSize -> Tiny, ControlPlacement -> 
                    2}, 
                    Style[
                    Overlay[{
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "WABitmaps", "PodInfoBackground"]]], 
                    Pane[
                    Column[{
                    Grid[{{
                    Manipulate`Place[1], 
                    Manipulate`Place[2]}}]}], 
                    ImageMargins -> {{20, 30}, {10, 10}}]}, {1, 2}, 2, 
                    Alignment -> {Left, Top}]]}, 
                  "Options" :> {
                   ControlPlacement -> Bottom, 
                    FrameMargins -> {{0, 0}, {0, 10}}, Paneled -> False, 
                    AppearanceElements -> {}, 
                    LabelStyle -> {
                    "DialogStyle", FontColor -> GrayLevel[0.25]}}, 
                  "DefaultOptions" :> {}], SingleEvaluation -> True], 
                Initialization :> ({
                   ReleaseHold[
                    Hold[
                    CalculateUtilities`GraphicsUtilities`Private`WACleanTicks[
                    Pattern[
                    CalculateUtilities`GraphicsUtilities`Private`ticks, 
                    Blank[]]] := 
                    Module[{
                    CalculateUtilities`GraphicsUtilities`Private`res, 
                    CalculateUtilities`GraphicsUtilities`Private`unitformat}, 
                    CalculateUtilities`GraphicsUtilities`Private`res = 
                    ReplaceAll[
                    ReplaceAll[
                    Part[
                    DeleteCases[
                    Replace[
                    ReplaceAll[
                    CalculateUtilities`GraphicsUtilities`Private`ticks, 
                    Alternatives[
                    Style, $CellContext`UnitNumberForm, NumberForm] -> (#& )],
                     Pattern[CalculateUtilities`GraphicsUtilities`Private`t, {
                    PatternTest[
                    BlankSequence[], NumberQ]}] :> 
                    Thread[{CalculateUtilities`GraphicsUtilities`Private`t, 
                    CalculateUtilities`GraphicsUtilities`Private`t}]], {
                    Blank[], "", 
                    BlankNullSequence[]}], All, 
                    Span[1, 2]], Superscript[
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`b, 
                    Blank[Integer]], 
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`p, 
                    Blank[Integer]]] :> 
                    CalculateUtilities`GraphicsUtilities`Private`b^
                    CalculateUtilities`GraphicsUtilities`Private`p], Row[{
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`a, 
                    BlankSequence[]]}, "\[Times]"] :> 
                    Times[CalculateUtilities`GraphicsUtilities`Private`a]]; If[
                    MatchQ[
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`res, All, 2], 
                    Condition[
                    Pattern[
                    CalculateUtilities`GraphicsUtilities`Private`quants, {
                    Alternatives[
                    BlankSequence[$CellContext`ShortQuantity], 
                    BlankSequence[Quantity]]}], Length[
                    Union[
                    
                    Map[$CellContext`UnitObjectPart, 
                    CalculateUtilities`GraphicsUtilities`Private`quants]]] == 
                    1]], CalculateUtilities`GraphicsUtilities`Private`\
unitformat = $CellContext`ToCDFQuantityFunction[
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`res, 1, 2]]; 
                    CalculateUtilities`GraphicsUtilities`Private`unitformat -> 
                    Thread[{
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`res, All, 1], 
                    $CellContext`QuantityPart[
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`res, All, 2], 
                    $CellContext`UnitObjectPart[
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`res, 1, 
                    2]]]}], 
                    CalculateUtilities`GraphicsUtilities`Private`res]]; 
                    Options[
                    CalculateUtilities`GraphicsUtilities`Private`post$7940898]\
 = {"ReturnInteractiveTypes" -> False, "Nearest" -> Automatic}; 
                    CalculateUtilities`GraphicsUtilities`Private`post$7940898[
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`g, 
                    Blank[Graphics]], 
                    OptionsPattern[]] := Check[
                    
                    Module[{
                    CalculateUtilities`GraphicsUtilities`Private`lines, 
                    CalculateUtilities`GraphicsUtilities`Private`pts, 
                    CalculateUtilities`GraphicsUtilities`Private`gg, 
                    CalculateUtilities`GraphicsUtilities`Private`type, 
                    CalculateUtilities`GraphicsUtilities`Private`b, 
                    CalculateUtilities`GraphicsUtilities`Private`l, 
                    CalculateUtilities`GraphicsUtilities`Private`t, 
                    CalculateUtilities`GraphicsUtilities`Private`r, 
                    CalculateUtilities`GraphicsUtilities`Private`oldepilog, 
                    CalculateUtilities`GraphicsUtilities`Private`range, 
                    CalculateUtilities`GraphicsUtilities`Private`gridlines, 
                    CalculateUtilities`GraphicsUtilities`Private`oldgridlines,
                     CalculateUtilities`GraphicsUtilities`Private`\
neareststyle = OptionValue["Nearest"]}, 
                    CalculateUtilities`GraphicsUtilities`Private`oldepilog = 
                    Replace[
                    ReplaceAll[Epilog, 
                    Options[CalculateUtilities`GraphicsUtilities`Private`g]], 
                    Epilog -> Sequence[]]; Switch[
                    ReplaceAll[{Frame, Axes}, 
                    Options[
                    CalculateUtilities`GraphicsUtilities`Private`g]], {True, 
                    Blank[]}, 
                    CalculateUtilities`GraphicsUtilities`Private`type = 
                    Frame; {CalculateUtilities`GraphicsUtilities`Private`b, 
                    CalculateUtilities`GraphicsUtilities`Private`l, 
                    CalculateUtilities`GraphicsUtilities`Private`t, 
                    CalculateUtilities`GraphicsUtilities`Private`r} = 
                    CalculateUtilities`GraphicsUtilities`Private`\
ScaleCoordinatesToTicks[Frame, 
                    ReplaceAll[FrameTicks, 
                    Options[
                    CalculateUtilities`GraphicsUtilities`Private`g]]], {
                    Blank[], True}, 
                    CalculateUtilities`GraphicsUtilities`Private`type = 
                    Axes; {CalculateUtilities`GraphicsUtilities`Private`b, 
                    CalculateUtilities`GraphicsUtilities`Private`l} = 
                    CalculateUtilities`GraphicsUtilities`Private`\
ScaleCoordinatesToTicks[Axes, 
                    ReplaceAll[Ticks, 
                    Options[CalculateUtilities`GraphicsUtilities`Private`g]]], 
                    Blank[], 
                    CalculateUtilities`GraphicsUtilities`Private`type = None]; 
                    If[
                    And[
                    CalculateUtilities`GraphicsUtilities`Private`type === 
                    Frame, 
                    Or[
                    Not[
                    Or[
                    CalculateUtilities`GraphicsUtilities`Private`t === None, 
                    CalculateUtilities`GraphicsUtilities`Private`b === 
                    CalculateUtilities`GraphicsUtilities`Private`t]], 
                    Not[
                    Or[
                    CalculateUtilities`GraphicsUtilities`Private`r === None, 
                    CalculateUtilities`GraphicsUtilities`Private`l === 
                    CalculateUtilities`GraphicsUtilities`Private`r]]]], 
                    CalculateUtilities`GraphicsUtilities`Private`type = None]; 
                    If[
                    TrueQ[
                    OptionValue["ReturnInteractiveTypes"]], 
                    Which[
                    Or[
                    CalculateUtilities`GraphicsUtilities`Private`type === 
                    None, CalculateUtilities`GraphicsUtilities`Private`b === 
                    None, CalculateUtilities`GraphicsUtilities`Private`l === 
                    None], {}, 
                    FreeQ[CalculateUtilities`GraphicsUtilities`Private`g, 
                    Alternatives[Line, Point]], {}, True, {
                    "Tooltips", "Coordinates"}], If[
                    FreeQ[CalculateUtilities`GraphicsUtilities`Private`g, 
                    Alternatives[Line, Point]], 
                    Return[CalculateUtilities`GraphicsUtilities`Private`g]]; 
                    CalculateUtilities`GraphicsUtilities`Private`gg = 
                    Normal[CalculateUtilities`GraphicsUtilities`Private`g]; 
                    CalculateUtilities`GraphicsUtilities`Private`pts = 
                    Partition[
                    Flatten[
                    Cases[
                    Part[CalculateUtilities`GraphicsUtilities`Private`gg, 1], 
                    Point[
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`a, 
                    Blank[]]] :> 
                    CalculateUtilities`GraphicsUtilities`Private`a, 
                    Infinity]], 2]; 
                    If[Length[
                    CalculateUtilities`GraphicsUtilities`Private`pts] < 2, 
                    CalculateUtilities`GraphicsUtilities`Private`lines = Cases[
                    Part[CalculateUtilities`GraphicsUtilities`Private`gg, 1], 
                    Blank[Line], Infinity]; 
                    If[CalculateUtilities`GraphicsUtilities`Private`lines === \
{}, 
                    Return[CalculateUtilities`GraphicsUtilities`Private`g]]; 
                    CalculateUtilities`GraphicsUtilities`Private`pts = Flatten[
                    Cases[
                    CalculateUtilities`GraphicsUtilities`Private`lines, Line[
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`a, 
                    Blank[]]] :> 
                    CalculateUtilities`GraphicsUtilities`Private`a, Infinity],
                     1]; If[
                    CalculateUtilities`GraphicsUtilities`Private`neareststyle === 
                    Automatic, If[
                    CalculateUtilities`GraphicsUtilities`Private`orderedLines[
                    CalculateUtilities`GraphicsUtilities`Private`lines], 
                    CalculateUtilities`GraphicsUtilities`Private`neareststyle = 
                    "1D", CalculateUtilities`GraphicsUtilities`Private`\
neareststyle = "2D"]; Null], 
                    If[
                    CalculateUtilities`GraphicsUtilities`Private`neareststyle === 
                    Automatic, 
                    CalculateUtilities`GraphicsUtilities`Private`neareststyle = 
                    "2D"]]; 
                    CalculateUtilities`GraphicsUtilities`Private`range = 
                    Replace[
                    ReplaceAll[PlotRange, 
                    Options[CalculateUtilities`GraphicsUtilities`Private`g]], 
                    Except[{{
                    PatternTest[
                    Blank[], NumberQ], 
                    PatternTest[
                    Blank[], NumberQ]}, {
                    PatternTest[
                    Blank[], NumberQ], 
                    PatternTest[
                    Blank[], NumberQ]}}] :> {
                    Through[
                    {Min, Max}[
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`pts, All, 
                    1]]], 
                    Through[
                    {Min, Max}[
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`pts, All, 
                    2]]]}]; CalculateUtilities`GraphicsUtilities`Private`b = 
                    CalculateUtilities`GraphicsUtilities`Private`\
RefineCoordinateFunction[CalculateUtilities`GraphicsUtilities`Private`b, 
                    First[CalculateUtilities`GraphicsUtilities`Private`range], 
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`pts, All, 
                    1]]; CalculateUtilities`GraphicsUtilities`Private`l = 
                    CalculateUtilities`GraphicsUtilities`Private`\
RefineCoordinateFunction[CalculateUtilities`GraphicsUtilities`Private`l, 
                    Last[CalculateUtilities`GraphicsUtilities`Private`range], 
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`pts, All, 
                    2]]; CalculateUtilities`GraphicsUtilities`Private`\
oldgridlines = ReplaceAll[GridLines, 
                    Options[CalculateUtilities`GraphicsUtilities`Private`g]]; 
                    CalculateUtilities`GraphicsUtilities`Private`gridlines = 
                    With[{CalculateUtilities`GraphicsUtilities`Private`gray = 
                    GrayLevel[0.7]}, 
                    Replace[
                    CalculateUtilities`GraphicsUtilities`Private`oldgridlines,\
 {Pattern[CalculateUtilities`GraphicsUtilities`Private`a, {
                    Blank[List], 
                    Blank[List]}] :> Dynamic[
                    Join[CalculateUtilities`GraphicsUtilities`Private`a, 
                    Replace[
                    MousePosition[{"Graphics", Graphics}, None], {
                    None -> {{}, {}}, {
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`x, 
                    Blank[]], 
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`y, 
                    Blank[]]} :> {{{
                    CalculateUtilities`GraphicsUtilities`Private`x, 
                    CalculateUtilities`GraphicsUtilities`Private`gray}}, {{
                    CalculateUtilities`GraphicsUtilities`Private`y, 
                    CalculateUtilities`GraphicsUtilities`Private`gray}}}}], 
                    2]], {
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`a, 
                    Blank[List]], Automatic} :> 
                    With[{CalculateUtilities`GraphicsUtilities`Private`\
divisions = {CalculateUtilities`GraphicsUtilities`Private`a, 
                    FindDivisions[
                    Last[CalculateUtilities`GraphicsUtilities`Private`range], 
                    7]}}, 
                    Dynamic[
                    Join[
                    CalculateUtilities`GraphicsUtilities`Private`divisions, 
                    Replace[
                    MousePosition[{"Graphics", Graphics}, None], {
                    None -> {{}, {}}, {
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`x, 
                    Blank[]], 
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`y, 
                    Blank[]]} :> {{{
                    CalculateUtilities`GraphicsUtilities`Private`x, 
                    CalculateUtilities`GraphicsUtilities`Private`gray}}, {{
                    CalculateUtilities`GraphicsUtilities`Private`y, 
                    CalculateUtilities`GraphicsUtilities`Private`gray}}}}], 
                    2]]], Blank[] -> Dynamic[
                    
                    Map[{{#, 
                    CalculateUtilities`GraphicsUtilities`Private`gray}}& , 
                    MousePosition[{"Graphics", Graphics}, None]]]}]]; If[
                    Or[
                    CalculateUtilities`GraphicsUtilities`Private`type === 
                    None, CalculateUtilities`GraphicsUtilities`Private`b === 
                    None, CalculateUtilities`GraphicsUtilities`Private`l === 
                    None], 
                    Show[
                    CalculateUtilities`GraphicsUtilities`Private`g, GridLines -> 
                    CalculateUtilities`GraphicsUtilities`Private`gridlines, 
                    If[
                    MatchQ[
                    CalculateUtilities`GraphicsUtilities`Private`oldgridlines, 
                    Alternatives[None, GridLines]], 
                    Method -> {"GridLinesInFront" -> True}, 
                    Apply[Sequence, {}]]], 
                    
                    With[{CalculateUtilities`GraphicsUtilities`Private`nf = 
                    If[CalculateUtilities`GraphicsUtilities`Private`\
neareststyle === "1D", 
                    
                    With[{CalculateUtilities`GraphicsUtilities`Private`n = 
                    Nearest[Part[
                    CalculateUtilities`GraphicsUtilities`Private`pts, All, 1] -> 
                    CalculateUtilities`GraphicsUtilities`Private`pts]}, 
                    CalculateUtilities`GraphicsUtilities`Private`n[
                    Part[#, 1]]& ], 
                    
                    With[{CalculateUtilities`GraphicsUtilities`Private`n = 
                    Nearest[Transpose[
                    Transpose[
                    CalculateUtilities`GraphicsUtilities`Private`pts]/Abs[
                    Apply[
                    Subtract, 
                    CalculateUtilities`GraphicsUtilities`Private`range, {
                    1}]]] -> 
                    CalculateUtilities`GraphicsUtilities`Private`pts], 
                    CalculateUtilities`GraphicsUtilities`Private`scale = Abs[
                    Apply[
                    Subtract, 
                    CalculateUtilities`GraphicsUtilities`Private`range, {
                    1}]]}, CalculateUtilities`GraphicsUtilities`Private`n[#/
                    CalculateUtilities`GraphicsUtilities`Private`scale]& ]], 
                    CalculateUtilities`GraphicsUtilities`Private`left = 
                    CalculateUtilities`GraphicsUtilities`Private`l, 
                    CalculateUtilities`GraphicsUtilities`Private`bottom = 
                    CalculateUtilities`GraphicsUtilities`Private`b}, 
                    Show[
                    CalculateUtilities`GraphicsUtilities`Private`g, GridLines -> 
                    CalculateUtilities`GraphicsUtilities`Private`gridlines, 
                    If[
                    MatchQ[
                    CalculateUtilities`GraphicsUtilities`Private`oldgridlines, 
                    Alternatives[None, GridLines]], 
                    Method -> {"GridLinesInFront" -> True}, 
                    Apply[Sequence, {}]], 
                    Epilog -> {
                    CalculateUtilities`GraphicsUtilities`Private`oldepilog, 
                    Dynamic[
                    
                    DynamicModule[{
                    CalculateUtilities`GraphicsUtilities`Private`pt = 
                    CalculateUtilities`GraphicsUtilities`Private`nf[
                    MousePosition[{"Graphics", Graphics}, {0, 0}]], 
                    CalculateUtilities`GraphicsUtilities`Private`scaled = 
                    MousePosition[{"GraphicsScaled", Graphics}, None]}, 
                    If[
                    CalculateUtilities`GraphicsUtilities`Private`scaled === 
                    None, {}, {
                    Text[
                    Style[
                    Row[{
                    CalculateUtilities`GraphicsUtilities`Private`bottom[
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`pt, 1, 1]], 
                    CalculateUtilities`GraphicsUtilities`Private`left[
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`pt, 1, 2]]}, 
                    ","], 12], 
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`pt, 1], {
                    1.5 Sign[Part[
                    CalculateUtilities`GraphicsUtilities`Private`scaled, 1] - 
                    0.5], 0}, Background -> White], 
                    AbsolutePointSize[7], 
                    Point[CalculateUtilities`GraphicsUtilities`Private`pt], 
                    White, 
                    AbsolutePointSize[5], 
                    Point[
                    CalculateUtilities`GraphicsUtilities`Private`pt]}]]]}]]]]]\
, CalculateUtilities`GraphicsUtilities`Private`g]; 
                    CalculateUtilities`GraphicsUtilities`Private`post$7940898[
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`g, 
                    Blank[]], 
                    BlankNullSequence[]] := 
                    CalculateUtilities`GraphicsUtilities`Private`g; 
                    CalculateUtilities`GraphicsUtilities`Private`orderedLines[{
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`l, 
                    BlankSequence[Line]]}] := 
                    Module[{
                    CalculateUtilities`GraphicsUtilities`Private`ordered, 
                    CalculateUtilities`GraphicsUtilities`Private`intervals}, 
                    CalculateUtilities`GraphicsUtilities`Private`ordered = 
                    Apply[And, 
                    Map[OrderedQ[
                    Part[#, 1, All, 1]]& , 
                    Hold[CalculateUtilities`GraphicsUtilities`Private`l]]]; If[
                    Not[
                    TrueQ[
                    CalculateUtilities`GraphicsUtilities`Private`ordered]], 
                    Return[False]]; 
                    CalculateUtilities`GraphicsUtilities`Private`intervals = 
                    Part[{CalculateUtilities`GraphicsUtilities`Private`l}, 
                    All, 1, {1, -1}, 1]; Length[
                    Apply[
                    Interval, 
                    CalculateUtilities`GraphicsUtilities`Private`intervals]] === 
                    Length[CalculateUtilities`GraphicsUtilities`Private`\
intervals]]; 
                    CalculateUtilities`GraphicsUtilities`Private`\
ScaleCoordinatesToTicks[Frame, 
                    Alternatives[Automatic, FrameTicks]] = {
                    Identity, Identity, Identity, Identity}; 
                    CalculateUtilities`GraphicsUtilities`Private`\
ScaleCoordinatesToTicks[Frame, {
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`b, 
                    Blank[]], 
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`l, 
                    Blank[]], 
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`t, 
                    Blank[]], 
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`r, 
                    Blank[]]}] := 
                    Map[CalculateUtilities`GraphicsUtilities`Private`\
TicksToFunction, {CalculateUtilities`GraphicsUtilities`Private`b, 
                    CalculateUtilities`GraphicsUtilities`Private`l, 
                    CalculateUtilities`GraphicsUtilities`Private`t, 
                    CalculateUtilities`GraphicsUtilities`Private`r}]; 
                    CalculateUtilities`GraphicsUtilities`Private`\
ScaleCoordinatesToTicks[Frame, {{
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`l, 
                    Blank[]], 
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`r, 
                    Blank[]]}, {
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`b, 
                    Blank[]], 
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`t, 
                    Blank[]]}}] := 
                    Map[CalculateUtilities`GraphicsUtilities`Private`\
TicksToFunction, {CalculateUtilities`GraphicsUtilities`Private`b, 
                    CalculateUtilities`GraphicsUtilities`Private`l, 
                    CalculateUtilities`GraphicsUtilities`Private`t, 
                    CalculateUtilities`GraphicsUtilities`Private`r}]; 
                    CalculateUtilities`GraphicsUtilities`Private`\
ScaleCoordinatesToTicks[Frame, 
                    Blank[]] = {None, None, None, None}; 
                    CalculateUtilities`GraphicsUtilities`Private`\
ScaleCoordinatesToTicks[Axes, 
                    Alternatives[Automatic, Ticks]] = {Identity, Identity}; 
                    CalculateUtilities`GraphicsUtilities`Private`\
ScaleCoordinatesToTicks[Axes, {
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`h, 
                    Blank[]], 
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`v, 
                    Blank[]]}] := 
                    Map[CalculateUtilities`GraphicsUtilities`Private`\
TicksToFunction, {CalculateUtilities`GraphicsUtilities`Private`h, 
                    CalculateUtilities`GraphicsUtilities`Private`v}]; 
                    CalculateUtilities`GraphicsUtilities`Private`\
ScaleCoordinatesToTicks[Axes, 
                    Blank[]] = {None, None}; 
                    CalculateUtilities`GraphicsUtilities`Private`CDFCleanTicks[
                    Pattern[
                    CalculateUtilities`GraphicsUtilities`Private`ticks, 
                    Blank[]]] := ReplaceAll[
                    ReplaceAll[
                    Part[
                    DeleteCases[
                    ReplaceAll[
                    CalculateUtilities`GraphicsUtilities`Private`ticks, 
                    Alternatives[Style, NumberForm] -> (#& )], {
                    Blank[], "", 
                    BlankNullSequence[]}], All, 
                    Span[1, 2]], Superscript[
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`b, 
                    Blank[Integer]], 
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`p, 
                    Blank[Integer]]] :> 
                    CalculateUtilities`GraphicsUtilities`Private`b^
                    CalculateUtilities`GraphicsUtilities`Private`p], Row[{
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`a, 
                    BlankSequence[]]}, "\[Times]"] :> 
                    Times[CalculateUtilities`GraphicsUtilities`Private`a]]; 
                    CalculateUtilities`GraphicsUtilities`Private`\
TicksToFunction[
                    Pattern[
                    CalculateUtilities`GraphicsUtilities`Private`ticks$, 
                    Blank[]]] := 
                    CalculateUtilities`GraphicsUtilities`Private`\
iTicksToFunction[
                    CalculateUtilities`GraphicsUtilities`Private`WACleanTicks[
                    CalculateUtilities`GraphicsUtilities`Private`ticks$]]; 
                    CalculateUtilities`GraphicsUtilities`Private`\
TicksToFunction[None] = None; 
                    CalculateUtilities`GraphicsUtilities`Private`\
TicksToFunction[False] = None; 
                    CalculateUtilities`GraphicsUtilities`Private`\
TicksToFunction[True] = None; 
                    CalculateUtilities`GraphicsUtilities`Private`\
TicksToFunction[Automatic] = Identity; 
                    CalculateUtilities`GraphicsUtilities`Private`\
TicksToFunction[All] = Identity; 
                    CalculateUtilities`GraphicsUtilities`Private`\
iTicksToFunction[Pattern[CalculateUtilities`GraphicsUtilities`Private`func, 
                    Blank[]] -> 
                    Pattern[
                    CalculateUtilities`GraphicsUtilities`Private`ticks, 
                    Blank[]]] := Replace[
                    
                    CalculateUtilities`GraphicsUtilities`Private`\
iTicksToFunction[CalculateUtilities`GraphicsUtilities`Private`ticks], 
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`f, 
                    Except[None]] :> 
                    Composition[
                    CalculateUtilities`GraphicsUtilities`Private`func, 
                    CalculateUtilities`GraphicsUtilities`Private`f]]; 
                    CalculateUtilities`GraphicsUtilities`Private`\
iTicksToFunction[{}] = None; 
                    CalculateUtilities`GraphicsUtilities`Private`\
iTicksToFunction[
                    Pattern[
                    CalculateUtilities`GraphicsUtilities`Private`ticks, {
                    Repeated[{
                    Blank[Integer], 
                    Blank[String]}]}]] := Which[
                    Quiet[
                    MatchQ[
                    Apply[SameQ, 
                    Map[Part[
                    DateList[#], 
                    Span[2, All]]& , 
                    CalculateUtilities`GraphicsUtilities`Private`ticks, {
                    2}], {1}], {
                    Repeated[True]}]], DateString, 
                    Apply[And, 
                    StringMatchQ[
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`ticks, All, 
                    2], NumberString]], 
                    
                    CalculateUtilities`GraphicsUtilities`Private`\
iTicksToFunction[
                    Transpose[{
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`ticks, All, 
                    1], 
                    ToExpression[
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`ticks, All, 
                    2]]}]], True, None]; 
                    CalculateUtilities`GraphicsUtilities`Private`\
iTicksToFunction[
                    Pattern[
                    CalculateUtilities`GraphicsUtilities`Private`ticks, {
                    Repeated[{
                    PatternTest[
                    Blank[], NumericQ], 
                    PatternTest[
                    Blank[], NumericQ]}]}]] := Which[
                    MatchQ[
                    Apply[
                    Equal, CalculateUtilities`GraphicsUtilities`Private`ticks,\
 {1}], {
                    Repeated[True]}], Identity, 
                    MatchQ[
                    
                    Apply[# == Log[#2]& , 
                    CalculateUtilities`GraphicsUtilities`Private`ticks, {1}], {
                    Repeated[True]}], Exp, 
                    TrueQ[
                    Quiet[
                    Apply[Equal, 
                    Apply[Divide, Transpose[
                    Rest[CalculateUtilities`GraphicsUtilities`Private`ticks]] - 
                    Part[CalculateUtilities`GraphicsUtilities`Private`ticks, 
                    1]]]]], 
                    
                    With[{CalculateUtilities`GraphicsUtilities`Private`slope = 
                    Apply[Divide, 
                    Apply[Subtract, 
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`ticks, {-1, 
                    1}]]]}, 
                    SetPrecision[(# - Part[
                    CalculateUtilities`GraphicsUtilities`Private`ticks, 1, 
                    1])/CalculateUtilities`GraphicsUtilities`Private`slope + 
                    Part[CalculateUtilities`GraphicsUtilities`Private`ticks, 
                    1, 2], 3]& ], True, None]; 
                    CalculateUtilities`GraphicsUtilities`Private`\
iTicksToFunction[
                    Blank[]] = None; 
                    CalculateUtilities`GraphicsUtilities`Private`\
RefineCoordinateFunction[
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`type, 
                    Blank[]], 
                    BlankNullSequence[]] := 
                    CalculateUtilities`GraphicsUtilities`Private`type; 
                    CalculateUtilities`GraphicsUtilities`Private`\
RefineCoordinateFunction[Identity, {
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`min, 
                    Blank[]], 
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`max, 
                    Blank[]]}, 
                    Blank[]] := 
                    With[{CalculateUtilities`GraphicsUtilities`Private`nf = 
                    CalculateUtilities`GraphicsUtilities`Private`numberForm, 
                    CalculateUtilities`GraphicsUtilities`Private`acc = 
                    Floor[Max[
                    Ceiling[
                    FullSimplify[Log[10, 
                    Max[
                    
                    Abs[{CalculateUtilities`GraphicsUtilities`Private`min, 
                    CalculateUtilities`GraphicsUtilities`Private`max}]]] - 
                    Log[10, (CalculateUtilities`GraphicsUtilities`Private`max - 
                    CalculateUtilities`GraphicsUtilities`Private`min)/100]]], 
                    3] - RealExponent[
                    Max[
                    
                    Abs[{CalculateUtilities`GraphicsUtilities`Private`min, 
                    CalculateUtilities`GraphicsUtilities`Private`max}]]]]}, 
                    CalculateUtilities`GraphicsUtilities`Private`nf[#, 
                    CalculateUtilities`GraphicsUtilities`Private`acc]& ]; 
                    CalculateUtilities`GraphicsUtilities`Private`\
RefineCoordinateFunction[Exp, {
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`min, 
                    Blank[]], 
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`max, 
                    Blank[]]}, 
                    Blank[]] := 
                    With[{CalculateUtilities`GraphicsUtilities`Private`prec = 
                    Max[
                    Ceiling[
                    FullSimplify[Log[10, 
                    Max[
                    
                    Abs[{CalculateUtilities`GraphicsUtilities`Private`min, 
                    CalculateUtilities`GraphicsUtilities`Private`max}]]] - 
                    Log[10, (CalculateUtilities`GraphicsUtilities`Private`max - 
                    CalculateUtilities`GraphicsUtilities`Private`min)/100]]], 
                    3]}, Quiet[
                    RawBoxes[
                    ToBoxes[
                    NumberForm[
                    Exp[#], 
                    CalculateUtilities`GraphicsUtilities`Private`prec]]]]& ]; 
                    CalculateUtilities`GraphicsUtilities`Private`\
RefineCoordinateFunction[DateString, {
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`min, 
                    Blank[]], 
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`max, 
                    Blank[]]}, 
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`pts, 
                    Blank[]]] := 
                    Module[{
                    CalculateUtilities`GraphicsUtilities`Private`dates, 
                    CalculateUtilities`GraphicsUtilities`Private`spec}, 
                    CalculateUtilities`GraphicsUtilities`Private`dates = 
                    Map[DateList, 
                    CalculateUtilities`GraphicsUtilities`Private`pts]; 
                    CalculateUtilities`GraphicsUtilities`Private`spec = Switch[
                    Map[Length, 
                    Map[Union, 
                    Transpose[
                    CalculateUtilities`GraphicsUtilities`Private`dates]]], {
                    Blank[], 1, 1, 
                    BlankSequence[]}, {"Year"}, {
                    Blank[], 
                    Blank[], 1, 
                    BlankSequence[]}, {"MonthNameShort", " ", "Year"}, 
                    Blank[], {
                    "DayShort", " ", "MonthNameShort", " ", "Year"}]; 
                    If[(CalculateUtilities`GraphicsUtilities`Private`max - 
                    CalculateUtilities`GraphicsUtilities`Private`min)/
                    31536000 > 25, 
                    CalculateUtilities`GraphicsUtilities`Private`spec = {
                    "Year"}]; 
                    With[{CalculateUtilities`GraphicsUtilities`Private`s = 
                    CalculateUtilities`GraphicsUtilities`Private`spec}, 
                    DateString[#, 
                    CalculateUtilities`GraphicsUtilities`Private`s]& ]]; 
                    CalculateUtilities`GraphicsUtilities`Private`numberForm = 
                    Function[{
                    CalculateUtilities`GraphicsUtilities`Private`a, 
                    CalculateUtilities`GraphicsUtilities`Private`acc}, 
                    Quiet[
                    RawBoxes[
                    ToBoxes[
                    NumberForm[CalculateUtilities`GraphicsUtilities`Private`a, 
                    Max[1, 
                    Ceiling[
                    RealExponent[
                    CalculateUtilities`GraphicsUtilities`Private`a] + 
                    CalculateUtilities`GraphicsUtilities`Private`acc]], 
                    ExponentFunction -> (Null& ), 
                    NumberFormat -> (StringReplace[#, StringExpression[
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`s, 
                    BlankSequence[]], ".", EndOfString] -> 
                    CalculateUtilities`GraphicsUtilities`Private`s]& )]]]]]]], 
                   ReleaseHold[
                    Uncompress[
                    "6:eJztVm1v0zAQbinv7/\
APkPiMBkyCfUACOhiTBpSkfK8XXxoL1w62sw3+PPjsJmnWrlJMB2hKP5zqS/\
P47rnnrvfoUEZpv9fr6cvWfJCcptfw9NCaoZzlshD03UmuQGsmRXoJn920JgazC5z8AOp9V615L9WM\
GH9+he8TnhScGPhqGGeGgZ7sKZJnLNG1Z6TYkf3JhMuEcPYTHr/\
Y2d7a2XrpYTCWETEGlNDP20LmmSIa0h4CXbHmLSfimz8+KI+fCs5j+\
F6ASEDfs96xItTCSEE45hN868Vm6jYmZoigRNFzp8nJc9j2Am0UE9MxzHJ842yynrYFJmqqPTd3Sm7\
WKciHfx0fyNjF5D0uaXd2BIaFccHoOy2rf87dAM+\
v28IrebyaOMzvDUfeiGFHoJfpfNK6Tp6Rqmtd9HOuzmu+bDTIs6dM/\
b90wLRZDuNZ2zBgdmhrvFp7y/DbbeFljl0/F/\
ddaz57Rwm4ajhUgvsoacHnUTRTHniJtk9X59bhMW5VfMfoDKlghRPZOMt+\
cf1xvwKvN4UYazfZgHREPQMiyMG6qON2l02ZGWZEkcQCz6/\
rl002lnUoAXe2rz0TlNkB5glZtzyh2U8X6k5Mkn35o+JWcjnVZMj7vjAwBbVW9DewPsqSK+\
hYBkYS4wVNvQZzWCU1IipY9oMSJM6JYAjJftmP++\
YfLlYCqdpTqC7lWRy40pyEJ9EvC3wAYmqy5o4dOLqC2xazieRxrbqIpenitNkc0/\
0m040bmgM9lITQkoQP9G5T6DaFv7opLO3B3ZrQrQndmtCtCd2a8P+uCS5i/Ff6DafvuMY="]]}; 
                 Typeset`initDone$$ = True), DynamicModuleValues :> {}, 
                Deinitialization :> None, 
                UntrackedVariables :> {Typeset`size$$}, 
                SynchronousInitialization -> True, 
                UnsavedVariables :> {Typeset`initDone$$}, 
                UndoTrackedVariables :> {
                 Typeset`show$$, Typeset`bookmarkMode$$}], "Manipulate", 
               Deployed -> True, StripOnInput -> False], TraditionalForm], 
             Manipulate`InterpretManipulate[1]], TraditionalForm]], 
          "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {"Graphics", FontFamily -> "Times"}, 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"], 
             DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement["dataformats", {}, {"minput"}]}], 
     XMLElement["expressiontypes", {"count" -> "2"}, {"\n  ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n "}]}], 
   Typeset`pod3$$ = XMLElement[
   "pod", {"title" -> "Alternate form assuming x is real", "scanner" -> 
     "Simplification", "id" -> "AlternateFormAssumingAllVariablesAreReal", 
     "position" -> "300", "error" -> "false", "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["minput", {}, {"ComplexExpand[0.1/E^(0.1 x)]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             RowBox[{
               RowBox[{"0.1`", " ", 
                 SuperscriptBox["\[ExponentialE]", 
                  RowBox[{
                    RowBox[{"-", "0.1`"}], " ", "x"}]]}], "+", "0"}], 
             Identity], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {"Graphics", FontFamily -> "Times"}, 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"], 
             DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,moutput,computabledata,formatteddata,formuladata"}]}\
], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  "}]}], 
   Typeset`pod4$$ = XMLElement[
   "pod", {"title" -> "Roots", "scanner" -> "Reduce", "id" -> 
     "NoSolutionsFromReduce", "position" -> "400", "error" -> "false", 
     "numsubpods" -> "1", "primary" -> "true"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["minput", {}, {"Reduce[0.1/E^(0.1 x) == 0, {x}]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            StyleBox[
             
             RowBox[{"\"(\"", "\[NoBreak]", "\"no roots exist\"", 
               "\[NoBreak]", "\")\""}], {
              GrayLevel[0.6], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
              LineIndent -> 0}], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {"Graphics", FontFamily -> "Times"}, 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"], 
             DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,moutput,computabledata,formatteddata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  "}], 
     XMLElement["states", {"count" -> "1"}, {
       XMLElement[
       "state", {
        "name" -> "Step-by-step solution", "input" -> 
         "NoSolutionsFromReduce__Step-by-step solution", "stepbystep" -> 
         "true", "buttonstyle" -> "StepByStepSolution"}, {}]}]}], 
   Typeset`pod5$$ = XMLElement[
   "pod", {"title" -> "Properties as a real function", "scanner" -> 
     "FunctionProperties", "id" -> "PropertiesAsARealFunction", "position" -> 
     "500", "error" -> "false", "numsubpods" -> "3"}, {
     XMLElement["subpod", {"title" -> "Domain"}, {
       XMLElement["minput", {}, {"FunctionDomain[D[1 - E^(-0.1 x), x], x]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            StyleBox[
             StyleBox[
              TemplateBox[{
                TemplateBox[{}, "Reals"], "\"  \"", 
                StyleBox[
                 
                 RowBox[{
                  "\"(\"", "\[NoBreak]", "\"all real numbers\"", "\[NoBreak]",
                    "\")\""}], {
                  GrayLevel[0.6], LineIndent -> 0}]}, "RowDefault"], 
              LineIndent -> 0], LinebreakAdjustments -> {1, 100, 0, 0, 100}], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {"Graphics", FontFamily -> "Times"}, 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"], 
             DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,moutput,computabledata,formatteddata"}]}], 
     XMLElement["subpod", {"title" -> "Range"}, {
       XMLElement[
       "minput", {}, {"FunctionRange[D[1 - E^(-0.1 x), x], x, y]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            StyleBox[
             StyleBox[
              TemplateBox[{
                TemplateBox[{"\"{\"", 
                  RowBox[{"y", "\[Element]", 
                    TemplateBox[{}, "Reals"]}], "\" : \"", 
                  RowBox[{"y", ">", "0"}], "\"}\""}, "RowDefault"], "\"  \"", 
                StyleBox[
                 
                 RowBox[{
                  "\"(\"", "\[NoBreak]", "\"all positive real numbers\"", 
                   "\[NoBreak]", "\")\""}], {
                  GrayLevel[0.6], LineIndent -> 0}]}, "RowDefault"], 
              LineIndent -> 0], LinebreakAdjustments -> {1, 100, 0, 0, 100}], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {"Graphics", FontFamily -> "Times"}, 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"], 
             DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,moutput,computabledata,formatteddata"}]}], 
     XMLElement["subpod", {"title" -> "Injectivity"}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TemplateBox[{"\"injective \"", 
              StyleBox[
               
               RowBox[{
                "\"(\"", "\[NoBreak]", "\"one\[Hyphen]to\[Hyphen]one\"", 
                 "\[NoBreak]", "\")\""}], {
                GrayLevel[0.6], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                LineIndent -> 0}]}, "RowDefault"], TraditionalForm]], 
          "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {"Graphics", FontFamily -> "Times"}, 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"], 
             DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {"plaintext,computabledata,formatteddata"}]}], 
     XMLElement["expressiontypes", {"count" -> "3"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  "}], 
     XMLElement["infos", {"count" -> "1"}, {
       XMLElement["info", {"text" -> "R is the set of real numbers"}, {
         XMLElement[
         "link", {
          "url" -> "http://reference.wolfram.com/language/ref/Reals.html", 
           "text" -> "Documentation", "title" -> "Documentation"}, {}], 
         XMLElement[
         "link", {
          "url" -> "http://mathworld.wolfram.com/R.html", "text" -> 
           "Definition", "title" -> "MathWorld"}, {}]}]}]}], Typeset`pod6$$ = 
   XMLElement[
   "pod", {"title" -> "Periodicity", "scanner" -> "FunctionProperties", "id" -> 
     "Periodicity", "position" -> "600", "error" -> "false", "numsubpods" -> 
     "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement[
       "minput", {}, {"FunctionPeriod[D[1 - E^(-0.1 x), x], x, Complexes]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             GridBox[{{
                TemplateBox[{"\"periodic in \"", "x", "\" with period \"", 
                  RowBox[{"20", " ", "\[ImaginaryI]", " ", "\[Pi]"}]}, 
                 "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}},
               DefaultBaseStyle -> "Column", 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
             "Column"], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {"Graphics", FontFamily -> "Times"}, 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"], 
             DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,moutput,computabledata,formatteddata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  "}], 
     XMLElement["states", {"count" -> "1"}, {
       XMLElement[
       "state", {
        "name" -> "Approximate form", "input" -> 
         "Periodicity__Approximate form"}, {}]}]}], Typeset`pod7$$ = 
   XMLElement[
   "pod", {"title" -> "Series expansion at x = 0", "scanner" -> "Series", 
     "id" -> "SeriesExpansionAtx=0", "position" -> "700", "error" -> "false", 
     "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["minput", {}, {"Series[0.1/E^(0.1 x), {x, 0, 4}]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             GridBox[{{
                TemplateBox[{
                  RowBox[{"0.1`", "-", 
                    RowBox[{"0.010000000000000002`", " ", "x"}], "+", 
                    RowBox[{"0.0005000000000000001`", " ", 
                    SuperscriptBox["x", "2"]}], "-", 
                    RowBox[{"0.00001666666666666667`", " ", 
                    SuperscriptBox["x", "3"]}], "+", 
                    RowBox[{"4.1666666666666677`*^-7", " ", 
                    SuperscriptBox["x", "4"]}], "+", 
                    InterpretationBox[
                    RowBox[{"O", "(", 
                    SuperscriptBox["x", "5"], ")"}], 
                    SeriesData[$CellContext`x, 0, {}, 0, 5, 1], Editable -> 
                    False]}], 
                  RowBox[{"SeriesData", "[", 
                    RowBox[{"x", ",", "0", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.1`", ",", 
                    RowBox[{"-", "0.010000000000000002`"}], ",", 
                    "0.0005000000000000001`", ",", 
                    RowBox[{"-", "0.00001666666666666667`"}], ",", 
                    "4.1666666666666677`*^-7"}], "}"}], ",", "0", ",", "5", 
                    ",", "1"}], "]"}]}, "SeriesData", 
                 DisplayFunction -> (#& ), InterpretationFunction -> (#2& ), 
                 SyntaxForm -> Plus]}, {
                StyleBox[
                 
                 RowBox[{
                  "\"(\"", "\[NoBreak]", "\"Taylor series\"", "\[NoBreak]", 
                   "\")\""}], {FontSize -> 10, FontFamily -> "Roboto", 
                  GrayLevel[0.5], LinebreakAdjustments -> {1, 100, 1, 0, 100},
                   LineIndent -> 0}]}}, 
              GridBoxAlignment -> {"Columns" -> {{Left}}}, 
              AllowScriptLevelChange -> False, DefaultBaseStyle -> "Column", 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
             "Column"], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {"Graphics", FontFamily -> "Times"}, 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"], 
             DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,moutput,computabledata,formatteddata,formuladata"}]}\
], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  "}], 
     XMLElement["infos", {"count" -> "1"}, {
       XMLElement["info", {}, {
         XMLElement[
         "link", {
          "url" -> "http://mathworld.wolfram.com/Big-ONotation.html", "text" -> 
           "Big\[Hyphen]O notation"}, {}]}]}]}], Typeset`pod8$$ = XMLElement[
   "pod", {"title" -> "Indefinite integral", "scanner" -> "Integral", "id" -> 
     "IndefiniteIntegral", "position" -> "800", "error" -> "false", 
     "numsubpods" -> "1", "primary" -> "true"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["minput", {}, {"Integrate[0.1/E^(0.1 x), x]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            RowBox[{
              TagBox[
               RowBox[{"\[Integral]", 
                 RowBox[{
                   TagBox[
                    TagBox[
                    RowBox[{"0.1`", " ", 
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{
                    RowBox[{"-", "0.1`"}], " ", "x"}]]}], Identity], 
                    PrecedenceForm[#, 400.]& ], 
                   RowBox[{"\[DifferentialD]", "x"}]}]}], HoldForm], 
              "\[LongEqual]", 
              TagBox[
               StyleBox[
                RowBox[{
                  StyleBox[
                   RowBox[{"-", 
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{
                    RowBox[{"-", "0.1`"}], " ", "x"}]]}], {
                    GrayLevel[0], LinebreakAdjustments -> {1, 100, 1, 0, 100},
                     LineIndent -> 0}], "+", 
                  StyleBox[
                  "\"constant\"", {
                   Magnification -> 0.9 Inherited, FontSize -> Inherited, 
                    FontFamily -> "Roboto", 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}], {
                 GrayLevel[0.6], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                 LineIndent -> 0}], Identity]}], TraditionalForm]], 
          "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {"Graphics", FontFamily -> "Times"}, 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"], 
             DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,moutput,computabledata,formatteddata,formuladata"}]}\
], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  "}], 
     XMLElement["states", {"count" -> "2"}, {
       XMLElement[
       "state", {
        "name" -> "Approximate form", "input" -> 
         "IndefiniteIntegral__Approximate form"}, {}], 
       XMLElement[
       "state", {
        "name" -> "Step-by-step solution", "input" -> 
         "IndefiniteIntegral__Step-by-step solution", "stepbystep" -> "true", 
         "buttonstyle" -> "StepByStepSolution"}, {}]}]}], Typeset`pod9$$ = 
   XMLElement[
   "pod", {"title" -> "Limit", "scanner" -> "GlobalExtrema", "id" -> "Limit", 
     "position" -> "900", "error" -> "false", "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["minput", {}, {"Limit[0.1/E^(0.1 x), x -> Infinity]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            RowBox[{
              TagBox[
               TemplateBox[{
                 RowBox[{"0.1`", " ", 
                   SuperscriptBox["\[ExponentialE]", 
                    RowBox[{
                    RowBox[{"-", "0.1`"}], " ", "x"}]]}], "x", "\[Infinity]"},
                 "Limit2Arg", SyntaxForm -> Limit, DisplayFunction -> (RowBox[{
                   TagBox[
                    UnderscriptBox[
                    StyleBox["\"lim\"", ShowStringCharacters -> False], 
                    RowBox[{#2, "\[Rule]", #3}], LimitsPositioning -> True], 
                    Identity, SyntaxForm -> "\[Limit]", Tooltip -> 
                    "Limit"], #}]& ), 
                InterpretationFunction -> (RowBox[{"Limit", "[", 
                   RowBox[{#, ",", 
                    RowBox[{#2, "->", #3}]}], "]"}]& )], HoldForm], 
              "\[LongEqual]", "0", "\[TildeTilde]", "0"}], TraditionalForm]], 
          "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {"Graphics", FontFamily -> "Times"}, 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"], 
             DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,moutput,computabledata,formatteddata,formuladata"}]}\
], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  "}]}], 
   Typeset`pod10$$, Typeset`pod11$$, Typeset`pod12$$, Typeset`pod13$$, 
   Typeset`pod14$$, Typeset`pod15$$, Typeset`pod16$$, Typeset`pod17$$, 
   Typeset`pod18$$, Typeset`pod19$$, Typeset`pod20$$, Typeset`pod21$$, 
   Typeset`pod22$$, Typeset`pod23$$, Typeset`pod24$$, Typeset`pod25$$, 
   Typeset`pod26$$, Typeset`pod27$$, Typeset`pod28$$, Typeset`pod29$$, 
   Typeset`pod30$$, Typeset`pod31$$, Typeset`pod32$$, Typeset`pod33$$, 
   Typeset`pod34$$, Typeset`pod35$$, Typeset`pod36$$, Typeset`pod37$$, 
   Typeset`pod38$$, Typeset`pod39$$, Typeset`aux1$$ = {
   True, False, {False}, True}, Typeset`aux2$$ = {
   True, False, {False, False}, True}, Typeset`aux3$$ = {
   True, False, {False}, True}, Typeset`aux4$$ = {True, False, {False}, True},
    Typeset`aux5$$ = {True, False, {False, False, False}, True}, 
   Typeset`aux6$$ = {True, False, {False}, True}, Typeset`aux7$$ = {
   True, False, {False}, True}, Typeset`aux8$$ = {True, False, {False}, True},
    Typeset`aux9$$ = {True, False, {False}, True}, Typeset`aux10$$ = {
   True, False, {False}, True}, Typeset`aux11$$ = {
   True, False, {False}, True}, Typeset`aux12$$ = {
   True, False, {False}, True}, Typeset`aux13$$ = {
   True, False, {False}, True}, Typeset`aux14$$ = {
   True, False, {False}, True}, Typeset`aux15$$ = {
   True, False, {False}, True}, Typeset`aux16$$ = {
   True, False, {False}, True}, Typeset`aux17$$ = {
   True, False, {False}, True}, Typeset`aux18$$ = {
   True, False, {False}, True}, Typeset`aux19$$ = {
   True, False, {False}, True}, Typeset`aux20$$ = {
   True, False, {False}, True}, Typeset`aux21$$ = {
   True, False, {False}, True}, Typeset`aux22$$ = {
   True, False, {False}, True}, Typeset`aux23$$ = {
   True, False, {False}, True}, Typeset`aux24$$ = {
   True, False, {False}, True}, Typeset`aux25$$ = {
   True, False, {False}, True}, Typeset`aux26$$ = {
   True, False, {False}, True}, Typeset`aux27$$ = {
   True, False, {False}, True}, Typeset`aux28$$ = {
   True, False, {False}, True}, Typeset`aux29$$ = {
   True, False, {False}, True}, Typeset`aux30$$ = {
   True, False, {False}, True}, Typeset`aux31$$ = {
   True, False, {False}, True}, Typeset`aux32$$ = {
   True, False, {False}, True}, Typeset`aux33$$ = {
   True, False, {False}, True}, Typeset`aux34$$ = {
   True, False, {False}, True}, Typeset`aux35$$ = {
   True, False, {False}, True}, Typeset`aux36$$ = {
   True, False, {False}, True}, Typeset`aux37$$ = {
   True, False, {False}, True}, Typeset`aux38$$ = {
   True, False, {False}, True}, Typeset`aux39$$ = {
   True, False, {False}, True}, Typeset`asyncpods$$ = {}, 
   Typeset`nonpods$$ = {}, Typeset`initdone$$ = 
   FrontEnd`SuppressEvaluationHash[True], 
   Typeset`queryinfo$$ = {{
    "success" -> "true", "error" -> 
     "false", {"http://www.w3.org/XML/1998/namespace", "space"} -> "preserve",
      "numpods" -> "9", "datatypes" -> "D", "timedout" -> 
     "InterestingDefiniteIntegrals,\
InterestingMultiDimensionalDefiniteIntegrals", "timedoutpods" -> "", "timing" -> 
     "3.7", "parsetiming" -> "0.385", "parsetimedout" -> "false", 
     "recalculate" -> 
     "https://www6b3.wolframalpha.com/api/v1/recalc.jsp?id=\
MSPa931412376ii5f4bii9e700002h80h91f54bh4a926430556393126808734", "id" -> 
     "MSP931512376ii5f4bii9e7000051i61d16de2giac5", "host" -> 
     "https://www6b3.wolframalpha.com", "server" -> "4", "related" -> 
     "https://www6b3.wolframalpha.com/api/v1/relatedQueries.jsp?id=\
MSPa931612376ii5f4bii9e700004350h63218ae1d256430556393126808734", "version" -> 
     "2.6", "inputstring" -> "derivative of 1- E^(-0.1*x)"}, {
    "success" -> "true", "error" -> 
     "false", {"http://www.w3.org/XML/1998/namespace", "space"} -> "preserve",
      "numpods" -> "0", "datatypes" -> "D", "timedout" -> 
     "InterestingDefiniteIntegrals,\
InterestingMultiDimensionalDefiniteIntegrals", "timedoutpods" -> "", "timing" -> 
     "5.086", "parsetimedout" -> "false", "recalculate" -> "", "id" -> "", 
     "parseidserver" -> "14", "host" -> "https://www6b3.wolframalpha.com", 
     "server" -> "14", "related" -> "", "version" -> "2.6", "inputstring" -> 
     "derivative of 1- E^(-0.1*x)"}}, Typeset`sessioninfo$$ = {
   "TimeZone" -> 1., 
    "Date" -> {2024, 3, 27, 15, 23, 27.8111404`9.196793713056563}, "Line" -> 
    14, "SessionID" -> 25561287390183991170}, Typeset`showpods$$ = {1, 2, 3, 
   4, 5, 6, 7, 8, 9}, Typeset`failedpods$$ = {10, 11, 12, 13, 14, 15, 16, 17, 
   18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36,
    37, 38, 39}, Typeset`chosen$$ = {}, Typeset`open$$ = False, 
   Typeset`newq$$ = "derivative of 1- E^(-0.1*x)"}, 
   DynamicBox[ToBoxes[
     AlphaIntegration`FormatAlphaResults[
      Dynamic[{
       2, {Typeset`pod1$$, Typeset`pod2$$, Typeset`pod3$$, Typeset`pod4$$, 
         Typeset`pod5$$, Typeset`pod6$$, Typeset`pod7$$, Typeset`pod8$$, 
         Typeset`pod9$$, Typeset`pod10$$, Typeset`pod11$$, Typeset`pod12$$, 
         Typeset`pod13$$, Typeset`pod14$$, Typeset`pod15$$, Typeset`pod16$$, 
         Typeset`pod17$$, Typeset`pod18$$, Typeset`pod19$$, Typeset`pod20$$, 
         Typeset`pod21$$, Typeset`pod22$$, Typeset`pod23$$, Typeset`pod24$$, 
         Typeset`pod25$$, Typeset`pod26$$, Typeset`pod27$$, Typeset`pod28$$, 
         Typeset`pod29$$, Typeset`pod30$$, Typeset`pod31$$, Typeset`pod32$$, 
         Typeset`pod33$$, Typeset`pod34$$, Typeset`pod35$$, Typeset`pod36$$, 
         Typeset`pod37$$, Typeset`pod38$$, Typeset`pod39$$}, {
        Typeset`aux1$$, Typeset`aux2$$, Typeset`aux3$$, Typeset`aux4$$, 
         Typeset`aux5$$, Typeset`aux6$$, Typeset`aux7$$, Typeset`aux8$$, 
         Typeset`aux9$$, Typeset`aux10$$, Typeset`aux11$$, Typeset`aux12$$, 
         Typeset`aux13$$, Typeset`aux14$$, Typeset`aux15$$, Typeset`aux16$$, 
         Typeset`aux17$$, Typeset`aux18$$, Typeset`aux19$$, Typeset`aux20$$, 
         Typeset`aux21$$, Typeset`aux22$$, Typeset`aux23$$, Typeset`aux24$$, 
         Typeset`aux25$$, Typeset`aux26$$, Typeset`aux27$$, Typeset`aux28$$, 
         Typeset`aux29$$, Typeset`aux30$$, Typeset`aux31$$, Typeset`aux32$$, 
         Typeset`aux33$$, Typeset`aux34$$, Typeset`aux35$$, Typeset`aux36$$, 
         Typeset`aux37$$, Typeset`aux38$$, Typeset`aux39$$}, Typeset`chosen$$,
         Typeset`open$$, Typeset`elements$$, Typeset`q$$, Typeset`opts$$, 
        Typeset`nonpods$$, Typeset`queryinfo$$, Typeset`sessioninfo$$, 
        Typeset`showpods$$, Typeset`failedpods$$, Typeset`newq$$}]], 
     StandardForm],
    ImageSizeCache->{1371.6, {1081.3767091105226`, 1092.2232908894775`}},
    TrackedSymbols:>{Typeset`showpods$$, Typeset`failedpods$$}],
   DynamicModuleValues:>{},
   Initialization:>If[
     And[
      Not[Typeset`initdone$$ === True], 
      Not[Typeset`initdone$$ === FrontEnd`SuppressEvaluationHash[True]]], 
     Null; AlphaIntegration`DoAsyncInitialization[
       Hold[{
        2, {Typeset`pod1$$, Typeset`pod2$$, Typeset`pod3$$, Typeset`pod4$$, 
          Typeset`pod5$$, Typeset`pod6$$, Typeset`pod7$$, Typeset`pod8$$, 
          Typeset`pod9$$, Typeset`pod10$$, Typeset`pod11$$, Typeset`pod12$$, 
          Typeset`pod13$$, Typeset`pod14$$, Typeset`pod15$$, Typeset`pod16$$, 
          Typeset`pod17$$, Typeset`pod18$$, Typeset`pod19$$, Typeset`pod20$$, 
          Typeset`pod21$$, Typeset`pod22$$, Typeset`pod23$$, Typeset`pod24$$, 
          Typeset`pod25$$, Typeset`pod26$$, Typeset`pod27$$, Typeset`pod28$$, 
          Typeset`pod29$$, Typeset`pod30$$, Typeset`pod31$$, Typeset`pod32$$, 
          Typeset`pod33$$, Typeset`pod34$$, Typeset`pod35$$, Typeset`pod36$$, 
          Typeset`pod37$$, Typeset`pod38$$, Typeset`pod39$$}, {
         Typeset`aux1$$, Typeset`aux2$$, Typeset`aux3$$, Typeset`aux4$$, 
          Typeset`aux5$$, Typeset`aux6$$, Typeset`aux7$$, Typeset`aux8$$, 
          Typeset`aux9$$, Typeset`aux10$$, Typeset`aux11$$, Typeset`aux12$$, 
          Typeset`aux13$$, Typeset`aux14$$, Typeset`aux15$$, Typeset`aux16$$, 
          Typeset`aux17$$, Typeset`aux18$$, Typeset`aux19$$, Typeset`aux20$$, 
          Typeset`aux21$$, Typeset`aux22$$, Typeset`aux23$$, Typeset`aux24$$, 
          Typeset`aux25$$, Typeset`aux26$$, Typeset`aux27$$, Typeset`aux28$$, 
          Typeset`aux29$$, Typeset`aux30$$, Typeset`aux31$$, Typeset`aux32$$, 
          Typeset`aux33$$, Typeset`aux34$$, Typeset`aux35$$, Typeset`aux36$$, 
          Typeset`aux37$$, Typeset`aux38$$, Typeset`aux39$$}, 
         Typeset`chosen$$, Typeset`open$$, Typeset`elements$$, Typeset`q$$, 
         Typeset`opts$$, Typeset`nonpods$$, Typeset`queryinfo$$, 
         Typeset`sessioninfo$$, Typeset`showpods$$, Typeset`failedpods$$, 
         Typeset`newq$$, 
         "https://www6b3.wolframalpha.com/api/v1/recalc.jsp?id=\
MSPa931412376ii5f4bii9e700002h80h91f54bh4a926430556393126808734", 
         Typeset`asyncpods$$}]]; Typeset`asyncpods$$ = {}; 
     Typeset`initdone$$ = FrontEnd`SuppressEvaluationHash[True]],
   SynchronousInitialization->False],
  BaseStyle->{Deployed -> True},
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True]], "Print", "WolframAlphaFullOutput",
 CellChangeTimes->{
  3.920538208006708*^9},ExpressionUUID->"1d200c73-5682-734a-a186-\
765f037e9039"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellMargins:>
  Dynamic[{{0.05 FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}], 0.}, {
    0.02587991718426501 FrontEnd`AbsoluteCurrentValue[{WindowSize, 2}], 0.}}],
 CellTags->
  "SlideShowHeader",ExpressionUUID->"285fb881-d3b7-4a7a-84f2-b6430a75e336"],

Cell[BoxData[
 RowBox[{
  RowBox[{"h", "[", "x_", "]"}], ":=", 
  RowBox[{"Piecewise", "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"y", "=", "0"}], ",", 
       RowBox[{"x", "<", "0"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"y", "=", 
        RowBox[{"0.1", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{"-", "0.1"}], " ", "x"}]]}]}], ",", 
       RowBox[{"x", "\[GreaterEqual]", "0"}]}], "}"}]}], "}"}], 
   "]"}]}]], "Input",
 CellMargins:>
  Dynamic[{{0.1 FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}], 0.}, {
    0.025879917184265005` FrontEnd`AbsoluteCurrentValue[{WindowSize, 2}], 
     0.025 FrontEnd`AbsoluteCurrentValue[{WindowSize, 2}]}}],
 CellChangeTimes->{{3.8550224521945267`*^9, 3.855022462917848*^9}, 
   3.8550226107255187`*^9, 3.85503456683451*^9},
 CellLabel->"In[4]:=",ExpressionUUID->"7fd410f0-d375-483f-bec0-a0ae82b18012"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"h", "[", "x", "]"}]], "Input",
 CellMargins:>
  Dynamic[{{0.1 FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}], 0.}, {
    0.02587991718426501 FrontEnd`AbsoluteCurrentValue[{WindowSize, 2}], 0.}}],
 CellChangeTimes->{{3.855022467129018*^9, 3.855022470742855*^9}},
 CellLabel->"In[5]:=",ExpressionUUID->"7d8a05fd-eadd-4f87-927d-7e87d5e3f377"],

Cell[BoxData[
 TagBox[GridBox[{
    {"\[Piecewise]", GridBox[{
       {"0", 
        RowBox[{"x", "<", "0"}]},
       {
        RowBox[{"0.1`", " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{"-", "0.1`"}], " ", "x"}]]}], 
        RowBox[{"x", "\[GreaterEqual]", "0"}]},
       {"0", 
        TagBox["True",
         "PiecewiseDefault",
         AutoDelete->True]}
      },
      AllowedDimensions->{2, Automatic},
      Editable->True,
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.84]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}},
      Selectable->True]}
   },
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[0.35]}, 
       Offset[0.27999999999999997`]}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}}],
  "Piecewise",
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True,
  Selectable->False,
  StripWrapperBoxes->True]], "Output",
 CellMargins:>
  Dynamic[{{0.1 FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}], 0.}, {
    0.02587991718426501 FrontEnd`AbsoluteCurrentValue[{WindowSize, 2}], 0.}}],
 CellChangeTimes->{3.855022471770813*^9, 3.855022618329764*^9, 
  3.8550257812213116`*^9, 3.855034537521482*^9, 3.855034569703579*^9, 
  3.855061413253478*^9, 3.85506215932708*^9, 3.8551026600487866`*^9, 
  3.8551249575005045`*^9, 3.855305543073702*^9, 3.886755467458686*^9, 
  3.9205375652480183`*^9},
 CellLabel->"Out[5]=",ExpressionUUID->"2bf3f20c-61b6-5944-a953-1363c07261ec"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"graph1", "=", 
  RowBox[{"Legended", "[", 
   RowBox[{
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{"Evaluate", "[", 
       RowBox[{"h", "[", "x", "]"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"x", ",", 
        RowBox[{"-", "10"}], ",", "50"}], "}"}], ",", 
      RowBox[{"PlotTheme", "\[Rule]", "\"\<Scientific\>\""}], " ", ",", 
      RowBox[{"ImageSize", "\[Rule]", "Medium"}]}], "]"}], ",", 
    RowBox[{"h", "[", "x", "]"}]}], "]"}]}]], "Input",
 CellMargins:>
  Dynamic[{{0.1 FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}], 0.}, {
    0.02587991718426501 FrontEnd`AbsoluteCurrentValue[{WindowSize, 2}], 0.}}],
 CellChangeTimes->{{3.825502629036959*^9, 3.8255026346921797`*^9}, {
   3.855022405871048*^9, 3.855022439813947*^9}, {3.855022482280645*^9, 
   3.855022495563529*^9}, {3.855022547443148*^9, 3.8550225569570265`*^9}, {
   3.855022633002371*^9, 3.855022635421411*^9}, 3.855023944792569*^9, {
   3.855025830809439*^9, 3.855025882897845*^9}, {3.8550259404902883`*^9, 
   3.855025943030269*^9}, {3.855025983436453*^9, 3.8550260365004597`*^9}, {
   3.855026535720405*^9, 3.855026537043108*^9}, {3.855034595028799*^9, 
   3.855034604878316*^9}, {3.855102755007597*^9, 3.855102765900735*^9}},
 CellLabel->"In[6]:=",ExpressionUUID->"de7c2c01-cfde-4b41-af30-38ddf51d3d70"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[
    InterpretationBox[{
      TagBox[{{{{}, {}, 
          TagBox[{
            Directive[
             Opacity[1.], 
             RGBColor[0.9, 0.36, 0.054], 
             CapForm["Butt"], 
             AbsoluteThickness[1.6]], 
            LineBox[CompressedData["
1:eJxTTMoPSmViYGBQA2IQXbbt5bX//5UPMEDBhmLn+5O/IfivDOY+V3+L4Met
DvjhfwvBd1+wXXLBFgRfoqs1xiETwd8dq/io4ZISnM/AGvmWcakinC8Tt0Z3
up4cnJ8vsLjnXKYkwv7JC0J/7BGB82/NKe5MCuWH833PzauXuccK5y+4zdTy
0vz7fhh/Xey2nPDn3+D8vfczQ49OQ/BvPb6gtvDrVzhf5M28kxGbv8D5nX+s
+E/ofYLzH1s9M/H1fgXnM9j7smmuegnnyzlvuc7CieBHeDdV7Tn2HM4/Ey13
QNvpKZy/tSbMm8vyAZy/hLHa8oz+fTj/Hqfnnea3d+H8YKmnip8zbsP5Ntay
ay/GX4PzpX5JtcvOPgHnr7Lceume4zE436rSX27Bi8Nw/qYP7NmuOfvg/Ev5
Nkwndu6E8z+9K5jpxb4Vzk+6tbl/vstyON9po2WN5/7ZcP4zkT1zmqZPhvMB
eu+nRw==
             "]], 
            LineBox[CompressedData["
1:eJwVjWk41AkcgGU7xGY1IXrUKmySc4wr1e83jpm/Gq1Uy0gqjBCSUljUzjM0
lSuaah2lWfdIkxwzk3K0aEmRm3RYx5aWQY5Q1n54n/fb+272POXMkpWRkXFe
4n8PKVeks2+mQNOE7BNSvBg8DYFLK8kFvmRO9+CvYlirNlKYGScEAY/d7HFK
DK/U2dFp42KwyB6d4LiI4WGq47Ba1hOYyE30zdwrhob473X3CqrB8uNMSDWI
oUCxK+nZkTrgMbOtlXXF4K90yvNpzUuQNvkfWJgVwfTlF2x3WjfAlItrW5oI
DP2X9c2H9EBwdGM/PUkEPnsoFml3ekGPIeyq4oigUz51pHu2D4KD+Qs1gSJ4
XUsuEBx6D1oPd75ZhSKooH0jbZMbgoxnDW3XBsshkuANaAWOLf3ajXmUcnid
GdqhJCcFBkntWJ1uOYRnZEoSmVIoLYi89lWjHEpuTLPjF6Tg8+jMaNSKctC7
zF932WYCVLnvrOs6ykA1aI5y8cVnYKp8uxASUQZjFgXng4a+wLza9U7tulJo
HuRE6yjIYnNs7My+oBJY93hkRByvgLZ5igIV7WJYHs6voQST8ParLWctdYRw
3t3U72v0enxMYXF4Zwuh+H39d1ssNDB7tCttwCEfJl00Kw4XaGK7pWdAKeZA
+C9MqoGBFnZq87MSM/+AAZ3rVYUcHdzqnaR8LPQuNKpXFw4o6mJ/0+END6pu
w803Y8kNgXropmF6VeiUBm/rlYZ8F/WxbcNa+bYVtyCFMFyuGGOE6vMPXK0M
eKDa9FOCcMwY8waXWce1JoMm976TuTkZLdaq1folJ0H6diuldSdMsW/wUOGu
gHh4sYFqNnmNgrXpx+uphldgt0ZNklGHGbIjA/eNK12CzSvtPtQst0DfPvHn
omgO2MhCWDHDEovIPR3dq9igvkcUkJ1ghXm0xujK5xfAM4LsMSbZgRib3ltG
j4QPFTqxPJmdmO/fzBgfCoP+YXVBsvEuZOR1vt628Rwke8SZpbjtxvaTHfOk
+2fg4vD56bEMwDQDbd/NzNMQrE/uaWEhPusl5zd2BAGMercxV1NxlbbNfqnW
SaBrqzmu4VOxszti0++qvqB38UpYjYUN7shdaS8NZIE+y6pSp8cG/3H8tMLx
nSeceOLLKTltiyYKNU2lfx6D6sw273EVO4y5V+yadOEITOctzhiV2+HP4czI
6mVuwNIRrE51tMdQjQXzjB9dYFIvxbxYao9FA2EugYcPgiRr/v0Ul4ZReRms
CZIzuNtpofUmOqrfEP/NV3GCjYGXxIZVdIwxUIziujJgvXzAA0cXAieHTepP
GztAjm1UhJRJ4KZbx18aaDkAJSrBNsWdQFLuYqtUxQGcpML2ruME9gW0PL06
TwC3Y+qLVwCBfkJqp3I9AbP8CzYRvxGo73XgTvBRAnqsU1pzBAQyblTmmvHo
4Buale5QRKDcVD+1gUuH6aJS1ichgbrqJ3xYkXQgbemaMSkjcP/R53jfiw57
5TZqPK4isFFWoTeJTIeKthzv1nYCNe1RwG2hwR5FkcG5LgJt5+WdObU06KL/
Na3WS+BEzDgjVkyDz5IRrsc7AnNXV5pk3KWBwV3jex8+EugUGuamGkKDih7q
ubh/CZRok+3tfJZ6ygfASEpg02yCX5gbDXwuhbacnSLw6iNV50mbpV5VbOr6
WQITnUQ/7LCgAXvuppdkjsCthz5+id1OAyVKvv6RrwQG+Aas6fmRBrcDJVOL
iwQOvF2kmSrT4D/no2dd
             "]]}, Annotation[#, "Charting`Private`Tag#1"]& ], {}}}, {}}, {
       "WolframDynamicHighlight", <|
        "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>}], 
      StyleBox[
       DynamicBox[
        (Charting`HighlightActionBox["DynamicHighlight", {}, 
         Slot["HighlightElements"], 
         Slot["LayoutOptions"], 
         Slot["Meta"], 
         Charting`HighlightActionFunction["DynamicHighlight", {{{{}, {}, 
             Annotation[{
               Directive[
                Opacity[1.], 
                RGBColor[0.9, 0.36, 0.054], 
                CapForm["Butt"], 
                AbsoluteThickness[1.6]], 
               Line[CompressedData["
1:eJxTTMoPSmViYGBQA2IQXbbt5bX//5UPMEDBhmLn+5O/IfivDOY+V3+L4Met
DvjhfwvBd1+wXXLBFgRfoqs1xiETwd8dq/io4ZISnM/AGvmWcakinC8Tt0Z3
up4cnJ8vsLjnXKYkwv7JC0J/7BGB82/NKe5MCuWH833PzauXuccK5y+4zdTy
0vz7fhh/Xey2nPDn3+D8vfczQ49OQ/BvPb6gtvDrVzhf5M28kxGbv8D5nX+s
+E/ofYLzH1s9M/H1fgXnM9j7smmuegnnyzlvuc7CieBHeDdV7Tn2HM4/Ey13
QNvpKZy/tSbMm8vyAZy/hLHa8oz+fTj/Hqfnnea3d+H8YKmnip8zbsP5Ntay
ay/GX4PzpX5JtcvOPgHnr7Lceume4zE436rSX27Bi8Nw/qYP7NmuOfvg/Ev5
Nkwndu6E8z+9K5jpxb4Vzk+6tbl/vstyON9po2WN5/7ZcP4zkT1zmqZPhvMB
eu+nRw==
                "]], 
               Line[CompressedData["
1:eJwVjWk41AkcgGU7xGY1IXrUKmySc4wr1e83jpm/Gq1Uy0gqjBCSUljUzjM0
lSuaah2lWfdIkxwzk3K0aEmRm3RYx5aWQY5Q1n54n/fb+272POXMkpWRkXFe
4n8PKVeks2+mQNOE7BNSvBg8DYFLK8kFvmRO9+CvYlirNlKYGScEAY/d7HFK
DK/U2dFp42KwyB6d4LiI4WGq47Ba1hOYyE30zdwrhob473X3CqrB8uNMSDWI
oUCxK+nZkTrgMbOtlXXF4K90yvNpzUuQNvkfWJgVwfTlF2x3WjfAlItrW5oI
DP2X9c2H9EBwdGM/PUkEPnsoFml3ekGPIeyq4oigUz51pHu2D4KD+Qs1gSJ4
XUsuEBx6D1oPd75ZhSKooH0jbZMbgoxnDW3XBsshkuANaAWOLf3ajXmUcnid
GdqhJCcFBkntWJ1uOYRnZEoSmVIoLYi89lWjHEpuTLPjF6Tg8+jMaNSKctC7
zF932WYCVLnvrOs6ykA1aI5y8cVnYKp8uxASUQZjFgXng4a+wLza9U7tulJo
HuRE6yjIYnNs7My+oBJY93hkRByvgLZ5igIV7WJYHs6voQST8ParLWctdYRw
3t3U72v0enxMYXF4Zwuh+H39d1ssNDB7tCttwCEfJl00Kw4XaGK7pWdAKeZA
+C9MqoGBFnZq87MSM/+AAZ3rVYUcHdzqnaR8LPQuNKpXFw4o6mJ/0+END6pu
w803Y8kNgXropmF6VeiUBm/rlYZ8F/WxbcNa+bYVtyCFMFyuGGOE6vMPXK0M
eKDa9FOCcMwY8waXWce1JoMm976TuTkZLdaq1folJ0H6diuldSdMsW/wUOGu
gHh4sYFqNnmNgrXpx+uphldgt0ZNklGHGbIjA/eNK12CzSvtPtQst0DfPvHn
omgO2MhCWDHDEovIPR3dq9igvkcUkJ1ghXm0xujK5xfAM4LsMSbZgRib3ltG
j4QPFTqxPJmdmO/fzBgfCoP+YXVBsvEuZOR1vt628Rwke8SZpbjtxvaTHfOk
+2fg4vD56bEMwDQDbd/NzNMQrE/uaWEhPusl5zd2BAGMercxV1NxlbbNfqnW
SaBrqzmu4VOxszti0++qvqB38UpYjYUN7shdaS8NZIE+y6pSp8cG/3H8tMLx
nSeceOLLKTltiyYKNU2lfx6D6sw273EVO4y5V+yadOEITOctzhiV2+HP4czI
6mVuwNIRrE51tMdQjQXzjB9dYFIvxbxYao9FA2EugYcPgiRr/v0Ul4ZReRms
CZIzuNtpofUmOqrfEP/NV3GCjYGXxIZVdIwxUIziujJgvXzAA0cXAieHTepP
GztAjm1UhJRJ4KZbx18aaDkAJSrBNsWdQFLuYqtUxQGcpML2ruME9gW0PL06
TwC3Y+qLVwCBfkJqp3I9AbP8CzYRvxGo73XgTvBRAnqsU1pzBAQyblTmmvHo
4Buale5QRKDcVD+1gUuH6aJS1ichgbrqJ3xYkXQgbemaMSkjcP/R53jfiw57
5TZqPK4isFFWoTeJTIeKthzv1nYCNe1RwG2hwR5FkcG5LgJt5+WdObU06KL/
Na3WS+BEzDgjVkyDz5IRrsc7AnNXV5pk3KWBwV3jex8+EugUGuamGkKDih7q
ubh/CZRok+3tfJZ6ygfASEpg02yCX5gbDXwuhbacnSLw6iNV50mbpV5VbOr6
WQITnUQ/7LCgAXvuppdkjsCthz5+id1OAyVKvv6RrwQG+Aas6fmRBrcDJVOL
iwQOvF2kmSrT4D/no2dd
                "]]}, "Charting`Private`Tag#1"], {}}}, {}}, <|
          "HighlightElements" -> <|
            "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
           "LayoutOptions" -> <|
            "PanelPlotLayout" -> <||>, 
             "PlotRange" -> {{-10, 50}, {0., 0.09980885638192234}}, 
             "Frame" -> {{True, True}, {True, True}}, "AxesOrigin" -> {0, 0}, 
             "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {False, False}, 
             "LabelStyle" -> {FontFamily -> "Times"}, "AspectRatio" -> 
             GoldenRatio^(-1), "DefaultStyle" -> {
               Directive[
                Opacity[1.], 
                RGBColor[0.9, 0.36, 0.054], 
                CapForm["Butt"], 
                AbsoluteThickness[1.6]]}, 
             "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
                 Identity[
                  Part[#, 1]], 
                 Identity[
                  Part[#, 2]]}& ), 
               "ScalingFunctions" -> {{Identity, Identity}, {
                 Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
             False|>, 
           "Meta" -> <|
            "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, 
             "Function" -> Plot, "GroupHighlight" -> False|>|>]]& )[<|
         "HighlightElements" -> <|
           "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
          "LayoutOptions" -> <|
           "PanelPlotLayout" -> <||>, 
            "PlotRange" -> {{-10, 50}, {0., 0.09980885638192234}}, 
            "Frame" -> {{True, True}, {True, True}}, "AxesOrigin" -> {0, 0}, 
            "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {False, False}, 
            "LabelStyle" -> {FontFamily -> "Times"}, "AspectRatio" -> 
            GoldenRatio^(-1), "DefaultStyle" -> {
              Directive[
               Opacity[1.], 
               RGBColor[0.9, 0.36, 0.054], 
               CapForm["Butt"], 
               AbsoluteThickness[1.6]]}, 
            "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
                Identity[
                 Part[#, 1]], 
                Identity[
                 Part[#, 2]]}& ), 
              "ScalingFunctions" -> {{Identity, Identity}, {
                Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
            False|>, 
          "Meta" -> <|
           "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
            Plot, "GroupHighlight" -> False|>|>]], Selectable -> False]}, 
     Annotation[{{{{}, {}, 
         Annotation[{
           Directive[
            Opacity[1.], 
            RGBColor[0.9, 0.36, 0.054], 
            CapForm["Butt"], 
            AbsoluteThickness[1.6]], 
           Line[CompressedData["
1:eJxTTMoPSmViYGBQA2IQXbbt5bX//5UPMEDBhmLn+5O/IfivDOY+V3+L4Met
DvjhfwvBd1+wXXLBFgRfoqs1xiETwd8dq/io4ZISnM/AGvmWcakinC8Tt0Z3
up4cnJ8vsLjnXKYkwv7JC0J/7BGB82/NKe5MCuWH833PzauXuccK5y+4zdTy
0vz7fhh/Xey2nPDn3+D8vfczQ49OQ/BvPb6gtvDrVzhf5M28kxGbv8D5nX+s
+E/ofYLzH1s9M/H1fgXnM9j7smmuegnnyzlvuc7CieBHeDdV7Tn2HM4/Ey13
QNvpKZy/tSbMm8vyAZy/hLHa8oz+fTj/Hqfnnea3d+H8YKmnip8zbsP5Ntay
ay/GX4PzpX5JtcvOPgHnr7Lceume4zE436rSX27Bi8Nw/qYP7NmuOfvg/Ev5
Nkwndu6E8z+9K5jpxb4Vzk+6tbl/vstyON9po2WN5/7ZcP4zkT1zmqZPhvMB
eu+nRw==
            "]], 
           Line[CompressedData["
1:eJwVjWk41AkcgGU7xGY1IXrUKmySc4wr1e83jpm/Gq1Uy0gqjBCSUljUzjM0
lSuaah2lWfdIkxwzk3K0aEmRm3RYx5aWQY5Q1n54n/fb+272POXMkpWRkXFe
4n8PKVeks2+mQNOE7BNSvBg8DYFLK8kFvmRO9+CvYlirNlKYGScEAY/d7HFK
DK/U2dFp42KwyB6d4LiI4WGq47Ba1hOYyE30zdwrhob473X3CqrB8uNMSDWI
oUCxK+nZkTrgMbOtlXXF4K90yvNpzUuQNvkfWJgVwfTlF2x3WjfAlItrW5oI
DP2X9c2H9EBwdGM/PUkEPnsoFml3ekGPIeyq4oigUz51pHu2D4KD+Qs1gSJ4
XUsuEBx6D1oPd75ZhSKooH0jbZMbgoxnDW3XBsshkuANaAWOLf3ajXmUcnid
GdqhJCcFBkntWJ1uOYRnZEoSmVIoLYi89lWjHEpuTLPjF6Tg8+jMaNSKctC7
zF932WYCVLnvrOs6ykA1aI5y8cVnYKp8uxASUQZjFgXng4a+wLza9U7tulJo
HuRE6yjIYnNs7My+oBJY93hkRByvgLZ5igIV7WJYHs6voQST8ParLWctdYRw
3t3U72v0enxMYXF4Zwuh+H39d1ssNDB7tCttwCEfJl00Kw4XaGK7pWdAKeZA
+C9MqoGBFnZq87MSM/+AAZ3rVYUcHdzqnaR8LPQuNKpXFw4o6mJ/0+END6pu
w803Y8kNgXropmF6VeiUBm/rlYZ8F/WxbcNa+bYVtyCFMFyuGGOE6vMPXK0M
eKDa9FOCcMwY8waXWce1JoMm976TuTkZLdaq1folJ0H6diuldSdMsW/wUOGu
gHh4sYFqNnmNgrXpx+uphldgt0ZNklGHGbIjA/eNK12CzSvtPtQst0DfPvHn
omgO2MhCWDHDEovIPR3dq9igvkcUkJ1ghXm0xujK5xfAM4LsMSbZgRib3ltG
j4QPFTqxPJmdmO/fzBgfCoP+YXVBsvEuZOR1vt628Rwke8SZpbjtxvaTHfOk
+2fg4vD56bEMwDQDbd/NzNMQrE/uaWEhPusl5zd2BAGMercxV1NxlbbNfqnW
SaBrqzmu4VOxszti0++qvqB38UpYjYUN7shdaS8NZIE+y6pSp8cG/3H8tMLx
nSeceOLLKTltiyYKNU2lfx6D6sw273EVO4y5V+yadOEITOctzhiV2+HP4czI
6mVuwNIRrE51tMdQjQXzjB9dYFIvxbxYao9FA2EugYcPgiRr/v0Ul4ZReRms
CZIzuNtpofUmOqrfEP/NV3GCjYGXxIZVdIwxUIziujJgvXzAA0cXAieHTepP
GztAjm1UhJRJ4KZbx18aaDkAJSrBNsWdQFLuYqtUxQGcpML2ruME9gW0PL06
TwC3Y+qLVwCBfkJqp3I9AbP8CzYRvxGo73XgTvBRAnqsU1pzBAQyblTmmvHo
4Buale5QRKDcVD+1gUuH6aJS1ichgbrqJ3xYkXQgbemaMSkjcP/R53jfiw57
5TZqPK4isFFWoTeJTIeKthzv1nYCNe1RwG2hwR5FkcG5LgJt5+WdObU06KL/
Na3WS+BEzDgjVkyDz5IRrsc7AnNXV5pk3KWBwV3jex8+EugUGuamGkKDih7q
ubh/CZRok+3tfJZ6ygfASEpg02yCX5gbDXwuhbacnSLw6iNV50mbpV5VbOr6
WQITnUQ/7LCgAXvuppdkjsCthz5+id1OAyVKvv6RrwQG+Aas6fmRBrcDJVOL
iwQOvF2kmSrT4D/no2dd
            "]]}, "Charting`Private`Tag#1"], {}}}, {}}, <|
      "HighlightElements" -> <|
        "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
       "LayoutOptions" -> <|
        "PanelPlotLayout" -> <||>, 
         "PlotRange" -> {{-10, 50}, {0., 0.09980885638192234}}, 
         "Frame" -> {{True, True}, {True, True}}, "AxesOrigin" -> {0, 0}, 
         "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {False, False}, 
         "LabelStyle" -> {FontFamily -> "Times"}, "AspectRatio" -> 
         GoldenRatio^(-1), "DefaultStyle" -> {
           Directive[
            Opacity[1.], 
            RGBColor[0.9, 0.36, 0.054], 
            CapForm["Butt"], 
            AbsoluteThickness[1.6]]}, 
         "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
             Identity[
              Part[#, 1]], 
             Identity[
              Part[#, 2]]}& ), 
           "ScalingFunctions" -> {{Identity, Identity}, {
             Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> False|>, 
       "Meta" -> <|
        "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
         Plot, "GroupHighlight" -> False|>|>, "DynamicHighlight"]], {
    DisplayFunction -> Identity, DisplayFunction -> Identity, 
     Ticks -> {Automatic, Automatic}, AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {{0}, {0}}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> Automatic, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {{0}, {0}}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> Medium, 
     LabelStyle -> {FontFamily -> "Times"}, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{-10, 50}, {0., 0.09980885638192234}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TagBox[
      GridBox[{{"\[Piecewise]", 
         GridBox[{{"0", 
            RowBox[{"x", "<", "0"}]}, {
            RowBox[{"0.1`", " ", 
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{
                 RowBox[{"-", "0.1`"}], " ", "x"}]]}], 
            RowBox[{"x", "\[GreaterEqual]", "0"}]}}, 
          ColumnAlignments -> {Left}, ColumnSpacings -> 1.2, ColumnWidths -> 
          Automatic, AllowedDimensions -> {2, Automatic}, Selectable -> True, 
          Editable -> True]}}, ColumnAlignments -> {Left}, ColumnSpacings -> 
       0.5, ColumnWidths -> Automatic], "Piecewise", SyntaxForm -> Equal, 
      SelectWithContents -> True, StripWrapperBoxes -> True, Selectable -> 
      False, Editable -> False, DeleteWithContents -> True], TraditionalForm],
     TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellMargins:>
  Dynamic[{{0.1 FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}], 0.}, {
    0.02587991718426501 FrontEnd`AbsoluteCurrentValue[{WindowSize, 2}], 0.}}],
 CellChangeTimes->{
  3.855022637022247*^9, 3.855023946771826*^9, 3.855025831980867*^9, 
   3.855025865099308*^9, 3.855025899866776*^9, 3.855025950613398*^9, {
   3.85502601264002*^9, 3.855026037448982*^9}, 3.8550265378579807`*^9, 
   3.8550346058078065`*^9, 3.855061415720854*^9, 3.855062161262679*^9, 
   3.855102668048386*^9, 3.855102768905772*^9, {3.85512496921873*^9, 
   3.8551249753143272`*^9}, 3.855305551653254*^9, 3.8867554737331896`*^9, 
   3.920537568323559*^9},
 CellLabel->"Out[6]=",ExpressionUUID->"57989956-b38d-994b-b880-e8f1818babaa"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"869baab5-339c-4341-a92d-71d8c04683f5"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{
  3.855026548253081*^9},ExpressionUUID->"32797948-1d41-4e3c-8ca8-\
ab7181508c04"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"graph2", "=", 
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"Evaluate", "[", 
      RowBox[{"h", "[", "x", "]"}], "]"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "3", ",", "10"}], "}"}], ",", 
    RowBox[{"PlotTheme", "\[Rule]", "\"\<Scientific\>\""}], " ", ",", 
    RowBox[{"ImageSize", "\[Rule]", "Medium"}], ",", 
    RowBox[{"Filling", "\[Rule]", "Axis"}], ",", 
    RowBox[{"AxesOrigin", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0"}], "}"}]}], ",", " ", 
    RowBox[{"PlotRange", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "10"}], ",", "80"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0.10"}], "}"}]}], "}"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{
  3.855024033841407*^9, {3.855027344129878*^9, 3.855027367057677*^9}, {
   3.855034845118958*^9, 3.85503485144377*^9}, {3.855034990439457*^9, 
   3.855034992187362*^9}, {3.85506188009912*^9, 3.855061916336636*^9}, {
   3.8550621440623627`*^9, 3.855062207853668*^9}, {3.855062333807275*^9, 
   3.855062382866357*^9}, {3.85506241429364*^9, 3.855062430680935*^9}, {
   3.855062482463343*^9, 3.8550625781225204`*^9}, {3.8550626760018196`*^9, 
   3.855062687865124*^9}, {3.855062883857497*^9, 3.855062978693514*^9}, {
   3.8550630203728867`*^9, 3.855063102015316*^9}, {3.855063136643927*^9, 
   3.855063145965217*^9}, {3.855063209573595*^9, 3.8550633603335285`*^9}, {
   3.8551026889983397`*^9, 3.855102689935113*^9}, {3.855102777675832*^9, 
   3.855102785684229*^9}},
 CellLabel->"In[7]:=",ExpressionUUID->"4b89b9e5-9a28-40ac-be05-4ab3de28f20b"],

Cell[BoxData[
 GraphicsBox[
  InterpretationBox[{
    TagBox[{GraphicsComplexBox[CompressedData["
1:eJw1lHtUzHkYxifXETXdRmKaqflGF6MhYtWu96W2kktkS7HRZaeLSGKTaLrZ
pEO2UqxdyW90ny7zq61QW7urVLqgCxlTiyRFKBRNWXvOes55znM+/z7POY+h
935n0RQGg+H02f9lRbxAm8Fgopvp4bIZozQcblwcJdKbhaHP2gR1pTTUZlpu
C3VURfGxyt1j+2h4uorb4uQ3GzeE5PzdLKChxvDtg2TxHATRTU7jSxmYZbZv
ii5Qw9erB3m+eTIQ9aT4f1WvjjtENqq+e2UgLPF4fuEjC0d9rpWamclgx35V
cUmKBr5c3h6vN1AMcZ4u8gmeJp40Nd5oXlQMR9IzB/UrNJGnnB1lEVwMHaue
OvHttJBqCrv69cpiUI9YELHzjhY61zwJ9VYWAYu13WOPvzbGnBd5hx8vgjBl
dJLHO21sjdv0cMncIshdSYctStTB1mVbHJ0zCqGC02ViZMTG8podvK3mhSDc
9Uowo5iNT1Wt3CNqCyDohWpvlf1cZBkL03xdCoDdyX7l3jEXxx7Xim2HpHB8
zqKCW0G66FIbq6EfJYU7Q4IVIdPnocWNrfwzbCnECQhrImkeikatqxNL8mFq
Ofeih5ke2v41f7TVMR/6f5sVSVXoYdQzxsWAgTzINx805djOx3rt8QMWp/PA
Uu3uiUD5fIwPTfCMNM0DE/uc1Zf8F+A5lfiFN5tz4XFzbHqOCgd1Ryf7GgJz
IZzh2tR3joN9rxdnMNRy4Wii7uZZRvq41FwzofP3HLAJ6I5RqdTHu9YZGVlu
OXDo0tnZ3eu5SFsuLeubkgMx0Ws9XrVzMc6hdoOyKBvcike8OgN52BvLd7Df
ng1pVqnXLo/xsIj46BRNz4YWJtfnsoMBSoN6TCIKs2A6/7lW7xkDXHiwuNl6
VxYsThIa/9lhgBwLRW+GRhaUZo3pnDQ0RN8ZnmclVZkwHHBVYONviFop3B6H
A5mQ0qbU7y81RHHgpsCrvEwgKdcPGjP4+OvEedf221fAjxEy4mbHx5b1zJPf
xl8Blk7+xh+T+Xh6WJpQZnUF9nbIW2O7+MjtsTvuOiKB8hcnygU8glPW/bHE
uVACvnllYTV7CLJUIvvFP0igga3wsZMRfC7s/y7VQAJ3FSvGP30iqG61Nq27
g4LzptIG+hQT5VXBWxo6aGj5EC+U3Ce47qHUgj1OgYn73iB3OybqjFSVevbR
0DSzpOHtDYJHOFNVm9QkcHtwV+rWFwTXsOsqg/speB3cVCMgTPR15T2SDdHQ
qF6fpn+doIw82m2uK4HW4YPe4Y8JzmyWSmveUHCnd329yXuC4qRyz4U9FLQf
UwakaTKRJUvulA/T4JjsPLGsjGCs0U67RwsksDl0sj5RQdDvVO33e95TsMW/
3fybNwQn2/yONT6hwNmr2ktnnGCmy76A6AcU1MWcXXOLycS6n5ebvnlLg2r7
uaWVJQS3Xb9gYs2VgHqFjXKenKBE8ZGqHqNAI0/P++YQwZRS5WH9Pgq0JNNS
08cInl6WgG0PKUjmhZsnTBA8oeImF96noPqnf3JE05jYlh7VP/6OhoFDVo7R
NEFiEmnpz5PAkFsfu7uLIFUm8Rr48Lkfx8qjp14SvG1rpWn/jIJhm+xCn1GC
lmvF9koFBSE1HAcnJcHtjut+ceuigBbf06mdJKjYWSCceY+CL3/G+F9f9vzC
/wIdQDzo
       "], {{{}, 
         {RGBColor[0.9, 0.36, 0.054], Opacity[0.3], EdgeForm[None], 
          GraphicsGroupBox[
           PolygonBox[{{1, 78, 79, 50, 77, 70, 76, 64, 69, 75, 59, 63, 68, 74,
             55, 58, 62, 67, 73, 52, 54, 57, 61, 66, 72, 49, 48, 47, 46, 45, 
            44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 
            28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 
            12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 51, 53, 56, 60, 65, 
            71}}]]}, {}, {}}, {{}, {}, 
         TagBox[
          {RGBColor[0.9, 0.36, 0.054], AbsoluteThickness[1.6], Opacity[1.], 
           CapForm["Butt"], 
           LineBox[{1, 71, 65, 60, 56, 53, 51, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
             12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 
            28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 
            44, 45, 46, 47, 48, 49, 72, 66, 61, 57, 54, 52, 73, 67, 62, 58, 
            55, 74, 68, 63, 59, 75, 69, 64, 76, 70, 77, 50}]},
          Annotation[#, "Charting`Private`Tag#1"]& ]}}], {}},
     {"WolframDynamicHighlight", <|
      "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>}], 
    StyleBox[
     DynamicBox[(Charting`HighlightActionBox["DynamicHighlight", {}, 
       Slot["HighlightElements"], 
       Slot["LayoutOptions"], 
       Slot["Meta"], 
       Charting`HighlightActionFunction["DynamicHighlight", {
         GraphicsComplex[CompressedData["
1:eJw1lHtUzHkYxifXETXdRmKaqflGF6MhYtWu96W2kktkS7HRZaeLSGKTaLrZ
pEO2UqxdyW90ny7zq61QW7urVLqgCxlTiyRFKBRNWXvOes55znM+/z7POY+h
935n0RQGg+H02f9lRbxAm8Fgopvp4bIZozQcblwcJdKbhaHP2gR1pTTUZlpu
C3VURfGxyt1j+2h4uorb4uQ3GzeE5PzdLKChxvDtg2TxHATRTU7jSxmYZbZv
ii5Qw9erB3m+eTIQ9aT4f1WvjjtENqq+e2UgLPF4fuEjC0d9rpWamclgx35V
cUmKBr5c3h6vN1AMcZ4u8gmeJp40Nd5oXlQMR9IzB/UrNJGnnB1lEVwMHaue
OvHttJBqCrv69cpiUI9YELHzjhY61zwJ9VYWAYu13WOPvzbGnBd5hx8vgjBl
dJLHO21sjdv0cMncIshdSYctStTB1mVbHJ0zCqGC02ViZMTG8podvK3mhSDc
9Uowo5iNT1Wt3CNqCyDohWpvlf1cZBkL03xdCoDdyX7l3jEXxx7Xim2HpHB8
zqKCW0G66FIbq6EfJYU7Q4IVIdPnocWNrfwzbCnECQhrImkeikatqxNL8mFq
Ofeih5ke2v41f7TVMR/6f5sVSVXoYdQzxsWAgTzINx805djOx3rt8QMWp/PA
Uu3uiUD5fIwPTfCMNM0DE/uc1Zf8F+A5lfiFN5tz4XFzbHqOCgd1Ryf7GgJz
IZzh2tR3joN9rxdnMNRy4Wii7uZZRvq41FwzofP3HLAJ6I5RqdTHu9YZGVlu
OXDo0tnZ3eu5SFsuLeubkgMx0Ws9XrVzMc6hdoOyKBvcike8OgN52BvLd7Df
ng1pVqnXLo/xsIj46BRNz4YWJtfnsoMBSoN6TCIKs2A6/7lW7xkDXHiwuNl6
VxYsThIa/9lhgBwLRW+GRhaUZo3pnDQ0RN8ZnmclVZkwHHBVYONviFop3B6H
A5mQ0qbU7y81RHHgpsCrvEwgKdcPGjP4+OvEedf221fAjxEy4mbHx5b1zJPf
xl8Blk7+xh+T+Xh6WJpQZnUF9nbIW2O7+MjtsTvuOiKB8hcnygU8glPW/bHE
uVACvnllYTV7CLJUIvvFP0igga3wsZMRfC7s/y7VQAJ3FSvGP30iqG61Nq27
g4LzptIG+hQT5VXBWxo6aGj5EC+U3Ce47qHUgj1OgYn73iB3OybqjFSVevbR
0DSzpOHtDYJHOFNVm9QkcHtwV+rWFwTXsOsqg/speB3cVCMgTPR15T2SDdHQ
qF6fpn+doIw82m2uK4HW4YPe4Y8JzmyWSmveUHCnd329yXuC4qRyz4U9FLQf
UwakaTKRJUvulA/T4JjsPLGsjGCs0U67RwsksDl0sj5RQdDvVO33e95TsMW/
3fybNwQn2/yONT6hwNmr2ktnnGCmy76A6AcU1MWcXXOLycS6n5ebvnlLg2r7
uaWVJQS3Xb9gYs2VgHqFjXKenKBE8ZGqHqNAI0/P++YQwZRS5WH9Pgq0JNNS
08cInl6WgG0PKUjmhZsnTBA8oeImF96noPqnf3JE05jYlh7VP/6OhoFDVo7R
NEFiEmnpz5PAkFsfu7uLIFUm8Rr48Lkfx8qjp14SvG1rpWn/jIJhm+xCn1GC
lmvF9koFBSE1HAcnJcHtjut+ceuigBbf06mdJKjYWSCceY+CL3/G+F9f9vzC
/wIdQDzo
          "], {{{}, {
             EdgeForm[], 
             Directive[
              RGBColor[0.9, 0.36, 0.054], 
              Opacity[0.3]], 
             GraphicsGroup[{
               
               Polygon[{{1, 78, 79, 50, 77, 70, 76, 64, 69, 75, 59, 63, 68, 
                74, 55, 58, 62, 67, 73, 52, 54, 57, 61, 66, 72, 49, 48, 47, 
                46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 
                31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 
                16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 51, 53, 
                56, 60, 65, 71}}]}]}, {}, {}}, {{}, {}, 
            Annotation[{
              Directive[
               Opacity[1.], 
               RGBColor[0.9, 0.36, 0.054], 
               CapForm["Butt"], 
               AbsoluteThickness[1.6]], 
              
              Line[{1, 71, 65, 60, 56, 53, 51, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
                12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 
               27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42,
                43, 44, 45, 46, 47, 48, 49, 72, 66, 61, 57, 54, 52, 73, 67, 
               62, 58, 55, 74, 68, 63, 59, 75, 69, 64, 76, 70, 77, 50}]}, 
             "Charting`Private`Tag#1"]}}], {}}, <|
        "HighlightElements" -> <|
          "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
         "LayoutOptions" -> <|
          "PanelPlotLayout" -> <||>, "PlotRange" -> {{-10., 80.}, {0., 0.1}}, 
           "Frame" -> {{True, True}, {True, True}}, "AxesOrigin" -> {0., 0.}, 
           "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {False, False}, 
           "LabelStyle" -> {FontFamily -> "Times"}, "AspectRatio" -> 
           GoldenRatio^(-1), "DefaultStyle" -> {
             Directive[
              Opacity[1.], 
              RGBColor[0.9, 0.36, 0.054], 
              CapForm["Butt"], 
              AbsoluteThickness[1.6]]}, 
           "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
               Identity[
                Part[#, 1]], 
               Identity[
                Part[#, 2]]}& ), 
             "ScalingFunctions" -> {{Identity, Identity}, {
               Identity, Identity}}|>, "Primitives" -> {{{{}, {
                EdgeForm[], 
                Directive[
                 RGBColor[0.9, 0.36, 0.054], 
                 Opacity[0.3]], 
                GraphicsGroup[{{
                   Polygon[CompressedData["
1:eJxlh3s0lHkYgEfXSTFuk9SYYX7KpWmmlNrY3fctFumitEStctlxSUlqJWXc
WskpLaK23aRvwmBc5mNRsexuhFwql5KwlSRKoqIM7e45u3/tc85znvMYeh1w
Ek9jMBiOf/tPy+IE2gwGE11Nj5TMGqPhv2f8y72uVROfPpH/vbrlutTuNgpo
yX2d6imCXbvyRLPvU5DECxPGTxI8qeLaKXpAQXAVx95RSXCHw/ofXTsocPKs
9NSZIJjhvN8/6iEFWtIZKWnjBM+siMeWRxSMWGfle48RtFgnsVN2UXC3d0Ot
yXuCksRSj8U9FGz1axV+8YbgVIvv8fqnFGjk6HndGiKYXKw8ot9HwbBD+bHT
rwjesbHUtHtOwZ3B3SnbXhL8kl1THtRPQfPIIa+wJwRnN8rlVW8o2BIyVZvQ
RdD3dPU3e99ToF5mrVzQSVDa9ZGqHKdgyLWP3d1BkCqReg58oKDpQ5xI+oDg
+kdyc/YEBQ2zi+re3iR4lDNdtUFNCvXqtan6NwgqyOM9Ql0pOCQ5Ta4oIRhj
tMv28SIpqLaeX15eRHD7jYsmVlwpDBy2dIiiCRKTCAs/nhTq2F3etgqCL0T9
X6cYSMEnpyS0ai9BlkpEv+RbKZS+PFkq4BGctv7XZU75UtjX1tkc08FHbo/t
CZdRKbB0cjd9l8THMyPy+BLLq+DLCB51teVj0wbmqa/irgJJvnHImMHHnyYv
uLTeuQrJLUr9/mJDlARsDrjGy4AR/2sCaz9D1Erm9tgfzIDizHGdU4aG6DPL
45y0IgOWJoqMf2szQI55V2+6RibM5L/Q6j1rgIsPFTZa7c6EJibX+4q9AcoD
e0zC8zMh1TLl+pVxHhYQb52CmVngWjjq2R7Aw94Yvr3djiyIjlrn/rqVi7H2
1RuVBVlw+PK5ud0buEhbLC/pmyYDa//uaJVyfbxnlZ6e6SqDYwm6W+YY6eNy
oWZ8+y8yCGO4NPSd52Df8NJ0hlo2PGmMSZOpcFB3bKqvLiAbTOxkay/7LcLz
KnGLbzVmg4XavZMBnQsxLiTeI8I0B3KFg6Ycm4VYqz1x0PxMDvT/PCeCKtPD
yOeMS/4DOTC9lHvJ3UwPbX5fONbskAuxAsKaTFyA4jGryoSiXLg7JFgVPHMB
mt/cxj/LlsOJeUvybgfqonN1jIZ+pBzY7ezXbm3zcfxJtcRmSA6BL1V7K+zm
I8tYlOrjnAei3a8FswrZ+EzV0i28Og/KOB0mRkZsLK3aydsmzIfs1XTokgQd
bF6x1cEpPR9ClVGJ7u+0sTl286Nl8wuAxdrhvtdPG6MviL3CThSAevii8F13
tdCp6mmIl7IA2tY8c+TbaiHVEHrt89WFcDQtY1C/TBN5yrmR5kGFEOvh3DnJ
08RTpsabhAWFsPOAqqQoWQNfrWyN0xsoBFGR+4uLH1k45n292MxMAeKeZL/P
atVxp9ha1WefAswyWjdH5anh8NpBnk+OAqoM3z5MksxDEN/i1L9SwLM13CZH
37m4MVj2R6OAhuoMi+0hDqooOV6+Z3w/DUfql0aK9eZgyPMWQU0xDRdM5XX0
aSZ2VgRtrWujwcRtX6CbLRN1RiuKPfpoGA5qqBIQJvq48B4rhmhoPa70T9Vk
IkuR1N45QkNN9LkvbzOZWPPDStM3b2mo/P5PmXgGE1vSIvsn3tHwFyHUPOg=

                    "]]}}]}, {}, {}}, {{}, {}, 
               Annotation[{
                 Directive[
                  Opacity[1.], 
                  RGBColor[0.9, 0.36, 0.054], 
                  CapForm["Butt"], 
                  AbsoluteThickness[1.6]], 
                 Line[CompressedData["
1:eJwVxX081HccAPDT46U4T5fUueO+ykOXK6UWW59PMaT0oBE15WHnISWpScp5
nORVGqLWlvS7zuN5uB9DxdgWIQ+Vh5KwSpcoiYpytO2P9+tt6H3YWTSDwWA4
/ef/KxIE2gwGE91Mj5fNGaeh+qd/ckSzmNiWETUw+YGGupgLG+4ymVj382rT
d+9paD+lDEjXZCJLntLZPUrDSHBTjYAw0deV91Q+TIOJ+8Egdzsm6oxVlXoq
aLhkKmugzzKxuyp4R0MHDccbl0eJ9OZh6Ms2QV0pDbVSy12hjqooPlW5f+IQ
DS/WcVu2+83HLSE5fzcLaKgxfP84RbwAQXSH0/hGDmbSdqfoAjUcWT/E882T
g6gv1f+renXcI7JR9T0oB2GJx6vLn1k47nOz1MxMDnsOq4pLUjXwzer2BL3B
Yoj3dOme4mniGVPjreZFxXAiQzqkX6GJPOX8KIvgYuhY92I7304LqaawG1+v
LQb1iCURe+9roXPN81BvZRGwWLs9DvhrY8wlkXd4XBGEKaOTPT5oY2u805MV
C4sgdy0dtixJB1tX7XB0ziyECk6XiZERG8tr9vB2mheCcN9bwZxiNr5QtXKP
qC2AoNeq/VX2C5FlLEz3dSkAdif7rXvHQpx4Viu2HZZB3IJlBXeDdNGlNlZD
P0oG94cFa0JmL0KL2zv559kyiBcQ1lTyIhSNW1cnleTDzHLuFQ8zPbT9a/F4
q2M+DPw2L5Kq0MOol4wrAYN5kG8+ZMqxXYz12pNHLM7lgaXag9OB3YsxITTR
M9I0D0zsc9Zf9V+CF1USlt5pzoVnzbEZOSoc1B2fVjQE5kI4w7VJcZGDipHl
mQy1XDiZpLttnpE+rjTXTOz8PQdsAnpjVCr18YF1ZmaWWw4cu3phfu9mLtKW
K8sUM3IgJnqjx9t2LsY71G5RFmWDW/GYV2cgD/tj+Q72u7Mh3Srt5rUJHhYR
H52i2dnQwuT6XHMwQFlQn0lEYRbM5r/S6j9vgEuPFjdb78uC5clC4z87DJBj
0dOfqZEFpVkTOmcMDdF3jucFSZUURgNuCGz8DVErldvncEQKqW1K/YFSQxQH
OgXe4EmBpN46aszg469Tl1zb710HP0bImJsdH1s2M898m3AdWDr5W39M4eO5
UVlimdV1ONjR3RrbxUdun12c65gEyl+fLhfwCM7Y9McK50IJ+OaVhdUcIMhS
iRwQ/yCBBnaPj52c4CvhwHdpBhIYPGblGE0TJCaRlv48Cai2X1xZWUJw163L
JtZcCTimOE+tKiMYa7TX7ukSCTSq16fr3yIoJ0/3m+tKoGluScP72wRPcGaq
NqlJoOVTglDyiOCmJzIL9iQFw24Kdm8XQapM4jX4iQL1Chvlom6Ckp7PVPUE
BdtCp+uTegj6na39/sBHClpHj3qHPyM4t1kmq3lHwb2hfWk7XxPcwK6rDB6g
YMSx8uTZNwTv2Vpp2r+kQCNPz/vOMMHUUuVxfQUFO/zbzb95R3C6ze9U43MK
7vdvrjf5SFCcXO65tI+CUZvsQp9xgpYbxfbKHgq0JLPSMiYInluViG1PKHD2
qvbSmSQodTkUEP2YgpAajsN2JcHdjpt+ceuiIIUXbp44RfC0ilu38BEFtPih
Tu00wZ69BcK5Dyl40LNm8ssXgupWG9N7Oyj4F54eNeA=
                  "]]}, "Charting`Private`Tag#1"]}}, {}}, "GCFlag" -> True|>, 
         "Meta" -> <|
          "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
           Plot, "GroupHighlight" -> False|>|>]]& )[<|
       "HighlightElements" -> <|
         "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
        "LayoutOptions" -> <|
         "PanelPlotLayout" -> <||>, "PlotRange" -> {{-10., 80.}, {0., 0.1}}, 
          "Frame" -> {{True, True}, {True, True}}, "AxesOrigin" -> {0., 0.}, 
          "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {False, False}, 
          "LabelStyle" -> {FontFamily -> "Times"}, "AspectRatio" -> 
          GoldenRatio^(-1), "DefaultStyle" -> {
            Directive[
             Opacity[1.], 
             RGBColor[0.9, 0.36, 0.054], 
             CapForm["Butt"], 
             AbsoluteThickness[1.6]]}, 
          "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
              Identity[
               Part[#, 1]], 
              Identity[
               Part[#, 2]]}& ), 
            "ScalingFunctions" -> {{Identity, Identity}, {
              Identity, Identity}}|>, "Primitives" -> {{{{}, {
               EdgeForm[], 
               Directive[
                RGBColor[0.9, 0.36, 0.054], 
                Opacity[0.3]], 
               GraphicsGroup[{{
                  Polygon[CompressedData["
1:eJxlh3s0lHkYgEfXSTFuk9SYYX7KpWmmlNrY3fctFumitEStctlxSUlqJWXc
WskpLaK23aRvwmBc5mNRsexuhFwql5KwlSRKoqIM7e45u3/tc85znvMYeh1w
Ek9jMBiOf/tPy+IE2gwGE11Nj5TMGqPhv2f8y72uVROfPpH/vbrlutTuNgpo
yX2d6imCXbvyRLPvU5DECxPGTxI8qeLaKXpAQXAVx95RSXCHw/ofXTsocPKs
9NSZIJjhvN8/6iEFWtIZKWnjBM+siMeWRxSMWGfle48RtFgnsVN2UXC3d0Ot
yXuCksRSj8U9FGz1axV+8YbgVIvv8fqnFGjk6HndGiKYXKw8ot9HwbBD+bHT
rwjesbHUtHtOwZ3B3SnbXhL8kl1THtRPQfPIIa+wJwRnN8rlVW8o2BIyVZvQ
RdD3dPU3e99ToF5mrVzQSVDa9ZGqHKdgyLWP3d1BkCqReg58oKDpQ5xI+oDg
+kdyc/YEBQ2zi+re3iR4lDNdtUFNCvXqtan6NwgqyOM9Ql0pOCQ5Ta4oIRhj
tMv28SIpqLaeX15eRHD7jYsmVlwpDBy2dIiiCRKTCAs/nhTq2F3etgqCL0T9
X6cYSMEnpyS0ai9BlkpEv+RbKZS+PFkq4BGctv7XZU75UtjX1tkc08FHbo/t
CZdRKbB0cjd9l8THMyPy+BLLq+DLCB51teVj0wbmqa/irgJJvnHImMHHnyYv
uLTeuQrJLUr9/mJDlARsDrjGy4AR/2sCaz9D1Erm9tgfzIDizHGdU4aG6DPL
45y0IgOWJoqMf2szQI55V2+6RibM5L/Q6j1rgIsPFTZa7c6EJibX+4q9AcoD
e0zC8zMh1TLl+pVxHhYQb52CmVngWjjq2R7Aw94Yvr3djiyIjlrn/rqVi7H2
1RuVBVlw+PK5ud0buEhbLC/pmyYDa//uaJVyfbxnlZ6e6SqDYwm6W+YY6eNy
oWZ8+y8yCGO4NPSd52Df8NJ0hlo2PGmMSZOpcFB3bKqvLiAbTOxkay/7LcLz
KnGLbzVmg4XavZMBnQsxLiTeI8I0B3KFg6Ycm4VYqz1x0PxMDvT/PCeCKtPD
yOeMS/4DOTC9lHvJ3UwPbX5fONbskAuxAsKaTFyA4jGryoSiXLg7JFgVPHMB
mt/cxj/LlsOJeUvybgfqonN1jIZ+pBzY7ezXbm3zcfxJtcRmSA6BL1V7K+zm
I8tYlOrjnAei3a8FswrZ+EzV0i28Og/KOB0mRkZsLK3aydsmzIfs1XTokgQd
bF6x1cEpPR9ClVGJ7u+0sTl286Nl8wuAxdrhvtdPG6MviL3CThSAevii8F13
tdCp6mmIl7IA2tY8c+TbaiHVEHrt89WFcDQtY1C/TBN5yrmR5kGFEOvh3DnJ
08RTpsabhAWFsPOAqqQoWQNfrWyN0xsoBFGR+4uLH1k45n292MxMAeKeZL/P
atVxp9ha1WefAswyWjdH5anh8NpBnk+OAqoM3z5MksxDEN/i1L9SwLM13CZH
37m4MVj2R6OAhuoMi+0hDqooOV6+Z3w/DUfql0aK9eZgyPMWQU0xDRdM5XX0
aSZ2VgRtrWujwcRtX6CbLRN1RiuKPfpoGA5qqBIQJvq48B4rhmhoPa70T9Vk
IkuR1N45QkNN9LkvbzOZWPPDStM3b2mo/P5PmXgGE1vSIvsn3tHwFyHUPOg=

                   "]]}}]}, {}, {}}, {{}, {}, 
              Annotation[{
                Directive[
                 Opacity[1.], 
                 RGBColor[0.9, 0.36, 0.054], 
                 CapForm["Butt"], 
                 AbsoluteThickness[1.6]], 
                Line[CompressedData["
1:eJwVxX081HccAPDT46U4T5fUueO+ykOXK6UWW59PMaT0oBE15WHnISWpScp5
nORVGqLWlvS7zuN5uB9DxdgWIQ+Vh5KwSpcoiYpytO2P9+tt6H3YWTSDwWA4
/ef/KxIE2gwGE91Mj5fNGaeh+qd/ckSzmNiWETUw+YGGupgLG+4ymVj382rT
d+9paD+lDEjXZCJLntLZPUrDSHBTjYAw0deV91Q+TIOJ+8Egdzsm6oxVlXoq
aLhkKmugzzKxuyp4R0MHDccbl0eJ9OZh6Ms2QV0pDbVSy12hjqooPlW5f+IQ
DS/WcVu2+83HLSE5fzcLaKgxfP84RbwAQXSH0/hGDmbSdqfoAjUcWT/E882T
g6gv1f+renXcI7JR9T0oB2GJx6vLn1k47nOz1MxMDnsOq4pLUjXwzer2BL3B
Yoj3dOme4mniGVPjreZFxXAiQzqkX6GJPOX8KIvgYuhY92I7304LqaawG1+v
LQb1iCURe+9roXPN81BvZRGwWLs9DvhrY8wlkXd4XBGEKaOTPT5oY2u805MV
C4sgdy0dtixJB1tX7XB0ziyECk6XiZERG8tr9vB2mheCcN9bwZxiNr5QtXKP
qC2AoNeq/VX2C5FlLEz3dSkAdif7rXvHQpx4Viu2HZZB3IJlBXeDdNGlNlZD
P0oG94cFa0JmL0KL2zv559kyiBcQ1lTyIhSNW1cnleTDzHLuFQ8zPbT9a/F4
q2M+DPw2L5Kq0MOol4wrAYN5kG8+ZMqxXYz12pNHLM7lgaXag9OB3YsxITTR
M9I0D0zsc9Zf9V+CF1USlt5pzoVnzbEZOSoc1B2fVjQE5kI4w7VJcZGDipHl
mQy1XDiZpLttnpE+rjTXTOz8PQdsAnpjVCr18YF1ZmaWWw4cu3phfu9mLtKW
K8sUM3IgJnqjx9t2LsY71G5RFmWDW/GYV2cgD/tj+Q72u7Mh3Srt5rUJHhYR
H52i2dnQwuT6XHMwQFlQn0lEYRbM5r/S6j9vgEuPFjdb78uC5clC4z87DJBj
0dOfqZEFpVkTOmcMDdF3jucFSZUURgNuCGz8DVErldvncEQKqW1K/YFSQxQH
OgXe4EmBpN46aszg469Tl1zb710HP0bImJsdH1s2M898m3AdWDr5W39M4eO5
UVlimdV1ONjR3RrbxUdun12c65gEyl+fLhfwCM7Y9McK50IJ+OaVhdUcIMhS
iRwQ/yCBBnaPj52c4CvhwHdpBhIYPGblGE0TJCaRlv48Cai2X1xZWUJw163L
JtZcCTimOE+tKiMYa7TX7ukSCTSq16fr3yIoJ0/3m+tKoGluScP72wRPcGaq
NqlJoOVTglDyiOCmJzIL9iQFw24Kdm8XQapM4jX4iQL1Chvlom6Ckp7PVPUE
BdtCp+uTegj6na39/sBHClpHj3qHPyM4t1kmq3lHwb2hfWk7XxPcwK6rDB6g
YMSx8uTZNwTv2Vpp2r+kQCNPz/vOMMHUUuVxfQUFO/zbzb95R3C6ze9U43MK
7vdvrjf5SFCcXO65tI+CUZvsQp9xgpYbxfbKHgq0JLPSMiYInluViG1PKHD2
qvbSmSQodTkUEP2YgpAajsN2JcHdjpt+ceuiIIUXbp44RfC0ilu38BEFtPih
Tu00wZ69BcK5Dyl40LNm8ssXgupWG9N7Oyj4F54eNeA=
                 "]]}, "Charting`Private`Tag#1"]}}, {}}, "GCFlag" -> True|>, 
        "Meta" -> <|
         "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
          Plot, "GroupHighlight" -> False|>|>],
      ImageSizeCache->{{4.503599627370496*^15, -4.503599627370496*^15}, {
       4.503599627370496*^15, -4.503599627370496*^15}}],
     Selectable->False]},
   Annotation[{
     GraphicsComplex[CompressedData["
1:eJw1lHtUzHkYxifXETXdRmKaqflGF6MhYtWu96W2kktkS7HRZaeLSGKTaLrZ
pEO2UqxdyW90ny7zq61QW7urVLqgCxlTiyRFKBRNWXvOes55znM+/z7POY+h
935n0RQGg+H02f9lRbxAm8Fgopvp4bIZozQcblwcJdKbhaHP2gR1pTTUZlpu
C3VURfGxyt1j+2h4uorb4uQ3GzeE5PzdLKChxvDtg2TxHATRTU7jSxmYZbZv
ii5Qw9erB3m+eTIQ9aT4f1WvjjtENqq+e2UgLPF4fuEjC0d9rpWamclgx35V
cUmKBr5c3h6vN1AMcZ4u8gmeJp40Nd5oXlQMR9IzB/UrNJGnnB1lEVwMHaue
OvHttJBqCrv69cpiUI9YELHzjhY61zwJ9VYWAYu13WOPvzbGnBd5hx8vgjBl
dJLHO21sjdv0cMncIshdSYctStTB1mVbHJ0zCqGC02ViZMTG8podvK3mhSDc
9Uowo5iNT1Wt3CNqCyDohWpvlf1cZBkL03xdCoDdyX7l3jEXxx7Xim2HpHB8
zqKCW0G66FIbq6EfJYU7Q4IVIdPnocWNrfwzbCnECQhrImkeikatqxNL8mFq
Ofeih5ke2v41f7TVMR/6f5sVSVXoYdQzxsWAgTzINx805djOx3rt8QMWp/PA
Uu3uiUD5fIwPTfCMNM0DE/uc1Zf8F+A5lfiFN5tz4XFzbHqOCgd1Ryf7GgJz
IZzh2tR3joN9rxdnMNRy4Wii7uZZRvq41FwzofP3HLAJ6I5RqdTHu9YZGVlu
OXDo0tnZ3eu5SFsuLeubkgMx0Ws9XrVzMc6hdoOyKBvcike8OgN52BvLd7Df
ng1pVqnXLo/xsIj46BRNz4YWJtfnsoMBSoN6TCIKs2A6/7lW7xkDXHiwuNl6
VxYsThIa/9lhgBwLRW+GRhaUZo3pnDQ0RN8ZnmclVZkwHHBVYONviFop3B6H
A5mQ0qbU7y81RHHgpsCrvEwgKdcPGjP4+OvEedf221fAjxEy4mbHx5b1zJPf
xl8Blk7+xh+T+Xh6WJpQZnUF9nbIW2O7+MjtsTvuOiKB8hcnygU8glPW/bHE
uVACvnllYTV7CLJUIvvFP0igga3wsZMRfC7s/y7VQAJ3FSvGP30iqG61Nq27
g4LzptIG+hQT5VXBWxo6aGj5EC+U3Ce47qHUgj1OgYn73iB3OybqjFSVevbR
0DSzpOHtDYJHOFNVm9QkcHtwV+rWFwTXsOsqg/speB3cVCMgTPR15T2SDdHQ
qF6fpn+doIw82m2uK4HW4YPe4Y8JzmyWSmveUHCnd329yXuC4qRyz4U9FLQf
UwakaTKRJUvulA/T4JjsPLGsjGCs0U67RwsksDl0sj5RQdDvVO33e95TsMW/
3fybNwQn2/yONT6hwNmr2ktnnGCmy76A6AcU1MWcXXOLycS6n5ebvnlLg2r7
uaWVJQS3Xb9gYs2VgHqFjXKenKBE8ZGqHqNAI0/P++YQwZRS5WH9Pgq0JNNS
08cInl6WgG0PKUjmhZsnTBA8oeImF96noPqnf3JE05jYlh7VP/6OhoFDVo7R
NEFiEmnpz5PAkFsfu7uLIFUm8Rr48Lkfx8qjp14SvG1rpWn/jIJhm+xCn1GC
lmvF9koFBSE1HAcnJcHtjut+ceuigBbf06mdJKjYWSCceY+CL3/G+F9f9vzC
/wIdQDzo
      "], {{{}, {
         EdgeForm[], 
         Directive[
          RGBColor[0.9, 0.36, 0.054], 
          Opacity[0.3]], 
         GraphicsGroup[{
           
           Polygon[{{1, 78, 79, 50, 77, 70, 76, 64, 69, 75, 59, 63, 68, 74, 
            55, 58, 62, 67, 73, 52, 54, 57, 61, 66, 72, 49, 48, 47, 46, 45, 
            44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 
            28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 
            12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 51, 53, 56, 60, 65, 
            71}}]}]}, {}, {}}, {{}, {}, 
        Annotation[{
          Directive[
           Opacity[1.], 
           RGBColor[0.9, 0.36, 0.054], 
           CapForm["Butt"], 
           AbsoluteThickness[1.6]], 
          
          Line[{1, 71, 65, 60, 56, 53, 51, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12,
            13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 
           29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45,
            46, 47, 48, 49, 72, 66, 61, 57, 54, 52, 73, 67, 62, 58, 55, 74, 
           68, 63, 59, 75, 69, 64, 76, 70, 77, 50}]}, 
         "Charting`Private`Tag#1"]}}], {}}, <|
    "HighlightElements" -> <|
      "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
     "LayoutOptions" -> <|
      "PanelPlotLayout" -> <||>, "PlotRange" -> {{-10., 80.}, {0., 0.1}}, 
       "Frame" -> {{True, True}, {True, True}}, "AxesOrigin" -> {0., 0.}, 
       "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {False, False}, 
       "LabelStyle" -> {FontFamily -> "Times"}, "AspectRatio" -> 
       GoldenRatio^(-1), "DefaultStyle" -> {
         Directive[
          Opacity[1.], 
          RGBColor[0.9, 0.36, 0.054], 
          CapForm["Butt"], 
          AbsoluteThickness[1.6]]}, 
       "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& ), 
         "ScalingFunctions" -> {{Identity, Identity}, {Identity, Identity}}|>,
        "Primitives" -> {{{{}, {
            EdgeForm[], 
            Directive[
             RGBColor[0.9, 0.36, 0.054], 
             Opacity[0.3]], 
            GraphicsGroup[{{
               Polygon[CompressedData["
1:eJxlh3s0lHkYgEfXSTFuk9SYYX7KpWmmlNrY3fctFumitEStctlxSUlqJWXc
WskpLaK23aRvwmBc5mNRsexuhFwql5KwlSRKoqIM7e45u3/tc85znvMYeh1w
Ek9jMBiOf/tPy+IE2gwGE11Nj5TMGqPhv2f8y72uVROfPpH/vbrlutTuNgpo
yX2d6imCXbvyRLPvU5DECxPGTxI8qeLaKXpAQXAVx95RSXCHw/ofXTsocPKs
9NSZIJjhvN8/6iEFWtIZKWnjBM+siMeWRxSMWGfle48RtFgnsVN2UXC3d0Ot
yXuCksRSj8U9FGz1axV+8YbgVIvv8fqnFGjk6HndGiKYXKw8ot9HwbBD+bHT
rwjesbHUtHtOwZ3B3SnbXhL8kl1THtRPQfPIIa+wJwRnN8rlVW8o2BIyVZvQ
RdD3dPU3e99ToF5mrVzQSVDa9ZGqHKdgyLWP3d1BkCqReg58oKDpQ5xI+oDg
+kdyc/YEBQ2zi+re3iR4lDNdtUFNCvXqtan6NwgqyOM9Ql0pOCQ5Ta4oIRhj
tMv28SIpqLaeX15eRHD7jYsmVlwpDBy2dIiiCRKTCAs/nhTq2F3etgqCL0T9
X6cYSMEnpyS0ai9BlkpEv+RbKZS+PFkq4BGctv7XZU75UtjX1tkc08FHbo/t
CZdRKbB0cjd9l8THMyPy+BLLq+DLCB51teVj0wbmqa/irgJJvnHImMHHnyYv
uLTeuQrJLUr9/mJDlARsDrjGy4AR/2sCaz9D1Erm9tgfzIDizHGdU4aG6DPL
45y0IgOWJoqMf2szQI55V2+6RibM5L/Q6j1rgIsPFTZa7c6EJibX+4q9AcoD
e0zC8zMh1TLl+pVxHhYQb52CmVngWjjq2R7Aw94Yvr3djiyIjlrn/rqVi7H2
1RuVBVlw+PK5ud0buEhbLC/pmyYDa//uaJVyfbxnlZ6e6SqDYwm6W+YY6eNy
oWZ8+y8yCGO4NPSd52Df8NJ0hlo2PGmMSZOpcFB3bKqvLiAbTOxkay/7LcLz
KnGLbzVmg4XavZMBnQsxLiTeI8I0B3KFg6Ycm4VYqz1x0PxMDvT/PCeCKtPD
yOeMS/4DOTC9lHvJ3UwPbX5fONbskAuxAsKaTFyA4jGryoSiXLg7JFgVPHMB
mt/cxj/LlsOJeUvybgfqonN1jIZ+pBzY7ezXbm3zcfxJtcRmSA6BL1V7K+zm
I8tYlOrjnAei3a8FswrZ+EzV0i28Og/KOB0mRkZsLK3aydsmzIfs1XTokgQd
bF6x1cEpPR9ClVGJ7u+0sTl286Nl8wuAxdrhvtdPG6MviL3CThSAevii8F13
tdCp6mmIl7IA2tY8c+TbaiHVEHrt89WFcDQtY1C/TBN5yrmR5kGFEOvh3DnJ
08RTpsabhAWFsPOAqqQoWQNfrWyN0xsoBFGR+4uLH1k45n292MxMAeKeZL/P
atVxp9ha1WefAswyWjdH5anh8NpBnk+OAqoM3z5MksxDEN/i1L9SwLM13CZH
37m4MVj2R6OAhuoMi+0hDqooOV6+Z3w/DUfql0aK9eZgyPMWQU0xDRdM5XX0
aSZ2VgRtrWujwcRtX6CbLRN1RiuKPfpoGA5qqBIQJvq48B4rhmhoPa70T9Vk
IkuR1N45QkNN9LkvbzOZWPPDStM3b2mo/P5PmXgGE1vSIvsn3tHwFyHUPOg=

                "]]}}]}, {}, {}}, {{}, {}, 
           Annotation[{
             Directive[
              Opacity[1.], 
              RGBColor[0.9, 0.36, 0.054], 
              CapForm["Butt"], 
              AbsoluteThickness[1.6]], 
             Line[CompressedData["
1:eJwVxX081HccAPDT46U4T5fUueO+ykOXK6UWW59PMaT0oBE15WHnISWpScp5
nORVGqLWlvS7zuN5uB9DxdgWIQ+Vh5KwSpcoiYpytO2P9+tt6H3YWTSDwWA4
/ef/KxIE2gwGE91Mj5fNGaeh+qd/ckSzmNiWETUw+YGGupgLG+4ymVj382rT
d+9paD+lDEjXZCJLntLZPUrDSHBTjYAw0deV91Q+TIOJ+8Egdzsm6oxVlXoq
aLhkKmugzzKxuyp4R0MHDccbl0eJ9OZh6Ms2QV0pDbVSy12hjqooPlW5f+IQ
DS/WcVu2+83HLSE5fzcLaKgxfP84RbwAQXSH0/hGDmbSdqfoAjUcWT/E882T
g6gv1f+renXcI7JR9T0oB2GJx6vLn1k47nOz1MxMDnsOq4pLUjXwzer2BL3B
Yoj3dOme4mniGVPjreZFxXAiQzqkX6GJPOX8KIvgYuhY92I7304LqaawG1+v
LQb1iCURe+9roXPN81BvZRGwWLs9DvhrY8wlkXd4XBGEKaOTPT5oY2u805MV
C4sgdy0dtixJB1tX7XB0ziyECk6XiZERG8tr9vB2mheCcN9bwZxiNr5QtXKP
qC2AoNeq/VX2C5FlLEz3dSkAdif7rXvHQpx4Viu2HZZB3IJlBXeDdNGlNlZD
P0oG94cFa0JmL0KL2zv559kyiBcQ1lTyIhSNW1cnleTDzHLuFQ8zPbT9a/F4
q2M+DPw2L5Kq0MOol4wrAYN5kG8+ZMqxXYz12pNHLM7lgaXag9OB3YsxITTR
M9I0D0zsc9Zf9V+CF1USlt5pzoVnzbEZOSoc1B2fVjQE5kI4w7VJcZGDipHl
mQy1XDiZpLttnpE+rjTXTOz8PQdsAnpjVCr18YF1ZmaWWw4cu3phfu9mLtKW
K8sUM3IgJnqjx9t2LsY71G5RFmWDW/GYV2cgD/tj+Q72u7Mh3Srt5rUJHhYR
H52i2dnQwuT6XHMwQFlQn0lEYRbM5r/S6j9vgEuPFjdb78uC5clC4z87DJBj
0dOfqZEFpVkTOmcMDdF3jucFSZUURgNuCGz8DVErldvncEQKqW1K/YFSQxQH
OgXe4EmBpN46aszg469Tl1zb710HP0bImJsdH1s2M898m3AdWDr5W39M4eO5
UVlimdV1ONjR3RrbxUdun12c65gEyl+fLhfwCM7Y9McK50IJ+OaVhdUcIMhS
iRwQ/yCBBnaPj52c4CvhwHdpBhIYPGblGE0TJCaRlv48Cai2X1xZWUJw163L
JtZcCTimOE+tKiMYa7TX7ukSCTSq16fr3yIoJ0/3m+tKoGluScP72wRPcGaq
NqlJoOVTglDyiOCmJzIL9iQFw24Kdm8XQapM4jX4iQL1Chvlom6Ckp7PVPUE
BdtCp+uTegj6na39/sBHClpHj3qHPyM4t1kmq3lHwb2hfWk7XxPcwK6rDB6g
YMSx8uTZNwTv2Vpp2r+kQCNPz/vOMMHUUuVxfQUFO/zbzb95R3C6ze9U43MK
7vdvrjf5SFCcXO65tI+CUZvsQp9xgpYbxfbKHgq0JLPSMiYInluViG1PKHD2
qvbSmSQodTkUEP2YgpAajsN2JcHdjpt+ceuiIIUXbp44RfC0ilu38BEFtPih
Tu00wZ69BcK5Dyl40LNm8ssXgupWG9N7Oyj4F54eNeA=
              "]]}, "Charting`Private`Tag#1"]}}, {}}, "GCFlag" -> True|>, 
     "Meta" -> <|
      "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
       Plot, "GroupHighlight" -> False|>|>, "DynamicHighlight"]],
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{False, False},
  AxesLabel->{None, None},
  AxesOrigin->{0., 0.},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{None, None}, {None, None}},
  FrameStyle->Automatic,
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{{0}, {0}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  ImageSize->Medium,
  LabelStyle->{FontFamily -> "Times"},
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}, "AxesInFront" -> True},
  PlotRange->{{-10., 80.}, {0., 0.1}},
  PlotRangeClipping->True,
  PlotRangePadding->{{0, 0}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.85506253574396*^9, {3.8550625725128827`*^9, 3.8550625786699195`*^9}, {
   3.8550626622729464`*^9, 3.855062677298919*^9}, 3.8550627455300503`*^9, {
   3.855062888711159*^9, 3.855062907625535*^9}, {3.85506294505997*^9, 
   3.8550629792939773`*^9}, 3.8550630664903865`*^9, 3.855063242535149*^9, 
   3.855063292788136*^9, {3.855063327930697*^9, 3.855063361084708*^9}, 
   3.855102691154592*^9, 3.8551027864694004`*^9, 3.855124978705263*^9, 
   3.9205375779907303`*^9},
 CellLabel->"Out[7]=",ExpressionUUID->"128f92d3-4140-8e4b-91b4-156e71996c03"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"a830c7bb-63ed-4a40-a15b-e4d7dcbd6227"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"graph3", "=", 
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"Evaluate", "[", 
      RowBox[{"h", "[", "x", "]"}], "]"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "0", ",", "10"}], "}"}], ",", 
    RowBox[{"PlotTheme", "\[Rule]", "\"\<Scientific\>\""}], " ", ",", 
    RowBox[{"ImageSize", "\[Rule]", "Medium"}], ",", 
    RowBox[{"Filling", "\[Rule]", "Axis"}], ",", 
    RowBox[{"AxesOrigin", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0"}], "}"}]}], ",", " ", 
    RowBox[{"PlotRange", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "10"}], ",", "80"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0.10"}], "}"}]}], "}"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8551032632803836`*^9, 3.855103271491054*^9}},
 CellLabel->"In[8]:=",ExpressionUUID->"2a8f9213-da61-4dc5-a3d3-97540236c246"],

Cell[BoxData[
 GraphicsBox[
  InterpretationBox[{
    TagBox[{GraphicsComplexBox[CompressedData["
1:eJw1VHs0lAkcJUOLqR2xIczDpxQNYye1hN+vOGdV0iq2TU9TYUuKY3pIkhRy
ZCrl0ZF8n0fIsxlMRVKR17RYerCSMWu92oQyIdueU/ece+65/9577uUIDm/e
P0dFRWXTF/6vaeECDZt9cU5vSttFKSlSyGhIDxpi1cNib1eXVYukUFgU2xlg
9QpCVq/MGrhcAX7QkjIcLIf3TyOMluhXQKBimVxcOAAx9hfWcG+WgxYnyvz1
T+9gur97vIxTDhcZjRYZe8ZgRLvcWK+wDASdng/Umj6AZZfSehO/DIKeRAkO
m38Cof5hmnulBEqO0LcYrJsB+vC+ziMeEsg4eXCQt1UFq4flDzu6xRCZPu0x
PqyKZbqVv2kcFYNKWw/eD1XDlWe0Wlx0xLAkxPe4p4U6rphJTSKy70DfRNKv
2pUauKNPnmDjcgfWKw6cuhz0HfL5j7y5XaXg3ieyZDK1cPRvS98fj5fC4CNB
xNMCbSy+wbBuNS4FK50OE+fd83B2XneO5F4JaMGET9fYfJxl24f0C0rg5xHv
j6ZeDAwYXalJ0UrgRc0+Ve/lOjg/vnTj3LxikMQ83sWe0EHNtHW6/K3F4Ksu
7JHJFmBfYMjegM9FsDf4pISeqotz7IWyozuLwNrPUubmo4e83e2J92sK4dmC
5dpCux/wMunyPTIL4V5h5PXlagvxlGPdxlfRBXBS1eKXpr8WoiK8d+myf26D
Vleoa6BYH5/kvjyd534bFNmcxPQwA4w3HDmzqyYfEpca0qRehpiQUFi/npsP
olTfOh/2IpzhLvAYz8wD78SdMnr/InQYYvEUnDyYdMlSplcZof1QRHn0tVyQ
K9Yer4k2RkZP4A2mfi6QjjZGzT4mmPR5Urcp4RYUnBPq+HGZ2OS2mq6mdwui
vfZuUJtgYsUK2iAtLQdsuzJyo5tZaPDUiRvHzIHkZdcLmjew8XmxqlNfXjac
ro5P3iBlY1hcKN2Elw0bjbyyGsw4yAr1rDa8mwVrAuu268Ry8KikosrOPQvS
jQVmTRMclDNCE290ZoLZo5xr7ttN0YnS2tYUnAkibo1Fa5UpDptpMTTnZ4Lv
GK2l3oLASVK7rZ+kQFDynh2bQKCj5yrlOFJQNbZEOTtL4JUoXnJ3OwlzO3vN
R1hSmB3N8UveJgVRKz3+cR2B/Kl1Z5naFLRN+Se+Y+WCw7YdvVEnpKB8ONuR
nU9gFeXf+mExBeZyQ+deOYGMO80dB9+REOAoPPSRlQK2nR+tL8R+2Zedciop
jcA3tufNg/gUdHnr+re1ExgXph5WPUNC8EE2c3SUQOMYejxbTkJadTxLnR0L
VvyUNNElKcRMCC+KrhG4M8Wnx8aegrKFok+NMgLDr05vDqRR4GaeVjwwSOBQ
WL/GkwESkououMlJAssbDviHd5EwW1t1ls0+AUd8jtUmXpWCcIv4Of0KgRF/
PGBfcaSACpE5uzYSKHUdYtXOpcD+XKdyfz+BHnS6mcEICefm9f4ZMkGg3U0O
79lrEvI99q8NmybwdUuzrdVLEh63sd22sn+HyX9D9JOSpBAQuWV6/SUCTSo/
KJ2BglTqkP/5egLpUw1OwZoU8MShzEwFgXrJ5YMP35IQ5nBGWTpGoOfbt43H
3pBARtD87n4iUC4Jdeh4RYLYtNbE6TOBt1/s8Tz//Es+X/9M5Su+9fnN/wc3
X0nc
       "], {{{}, 
         {RGBColor[0.9, 0.36, 0.054], Opacity[0.3], EdgeForm[None], 
          GraphicsGroupBox[
           PolygonBox[{{1, 78, 79, 50, 77, 70, 76, 64, 69, 75, 59, 63, 68, 74,
             55, 58, 62, 67, 73, 52, 54, 57, 61, 66, 72, 49, 48, 47, 46, 45, 
            44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 
            28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 
            12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 51, 53, 56, 60, 65, 
            71}}]]}, {}, {}}, {{}, {}, 
         TagBox[
          {RGBColor[0.9, 0.36, 0.054], AbsoluteThickness[1.6], Opacity[1.], 
           CapForm["Butt"], 
           LineBox[{1, 71, 65, 60, 56, 53, 51, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
             12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 
            28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 
            44, 45, 46, 47, 48, 49, 72, 66, 61, 57, 54, 52, 73, 67, 62, 58, 
            55, 74, 68, 63, 59, 75, 69, 64, 76, 70, 77, 50}]},
          Annotation[#, "Charting`Private`Tag#1"]& ]}}], {}},
     {"WolframDynamicHighlight", <|
      "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>}], 
    StyleBox[
     DynamicBox[(Charting`HighlightActionBox["DynamicHighlight", {}, 
       Slot["HighlightElements"], 
       Slot["LayoutOptions"], 
       Slot["Meta"], 
       Charting`HighlightActionFunction["DynamicHighlight", {
         GraphicsComplex[CompressedData["
1:eJw1VHs0lAkcJUOLqR2xIczDpxQNYye1hN+vOGdV0iq2TU9TYUuKY3pIkhRy
ZCrl0ZF8n0fIsxlMRVKR17RYerCSMWu92oQyIdueU/ece+65/9577uUIDm/e
P0dFRWXTF/6vaeECDZt9cU5vSttFKSlSyGhIDxpi1cNib1eXVYukUFgU2xlg
9QpCVq/MGrhcAX7QkjIcLIf3TyOMluhXQKBimVxcOAAx9hfWcG+WgxYnyvz1
T+9gur97vIxTDhcZjRYZe8ZgRLvcWK+wDASdng/Umj6AZZfSehO/DIKeRAkO
m38Cof5hmnulBEqO0LcYrJsB+vC+ziMeEsg4eXCQt1UFq4flDzu6xRCZPu0x
PqyKZbqVv2kcFYNKWw/eD1XDlWe0Wlx0xLAkxPe4p4U6rphJTSKy70DfRNKv
2pUauKNPnmDjcgfWKw6cuhz0HfL5j7y5XaXg3ieyZDK1cPRvS98fj5fC4CNB
xNMCbSy+wbBuNS4FK50OE+fd83B2XneO5F4JaMGET9fYfJxl24f0C0rg5xHv
j6ZeDAwYXalJ0UrgRc0+Ve/lOjg/vnTj3LxikMQ83sWe0EHNtHW6/K3F4Ksu
7JHJFmBfYMjegM9FsDf4pISeqotz7IWyozuLwNrPUubmo4e83e2J92sK4dmC
5dpCux/wMunyPTIL4V5h5PXlagvxlGPdxlfRBXBS1eKXpr8WoiK8d+myf26D
Vleoa6BYH5/kvjyd534bFNmcxPQwA4w3HDmzqyYfEpca0qRehpiQUFi/npsP
olTfOh/2IpzhLvAYz8wD78SdMnr/InQYYvEUnDyYdMlSplcZof1QRHn0tVyQ
K9Yer4k2RkZP4A2mfi6QjjZGzT4mmPR5Urcp4RYUnBPq+HGZ2OS2mq6mdwui
vfZuUJtgYsUK2iAtLQdsuzJyo5tZaPDUiRvHzIHkZdcLmjew8XmxqlNfXjac
ro5P3iBlY1hcKN2Elw0bjbyyGsw4yAr1rDa8mwVrAuu268Ry8KikosrOPQvS
jQVmTRMclDNCE290ZoLZo5xr7ttN0YnS2tYUnAkibo1Fa5UpDptpMTTnZ4Lv
GK2l3oLASVK7rZ+kQFDynh2bQKCj5yrlOFJQNbZEOTtL4JUoXnJ3OwlzO3vN
R1hSmB3N8UveJgVRKz3+cR2B/Kl1Z5naFLRN+Se+Y+WCw7YdvVEnpKB8ONuR
nU9gFeXf+mExBeZyQ+deOYGMO80dB9+REOAoPPSRlQK2nR+tL8R+2Zedciop
jcA3tufNg/gUdHnr+re1ExgXph5WPUNC8EE2c3SUQOMYejxbTkJadTxLnR0L
VvyUNNElKcRMCC+KrhG4M8Wnx8aegrKFok+NMgLDr05vDqRR4GaeVjwwSOBQ
WL/GkwESkououMlJAssbDviHd5EwW1t1ls0+AUd8jtUmXpWCcIv4Of0KgRF/
PGBfcaSACpE5uzYSKHUdYtXOpcD+XKdyfz+BHnS6mcEICefm9f4ZMkGg3U0O
79lrEvI99q8NmybwdUuzrdVLEh63sd22sn+HyX9D9JOSpBAQuWV6/SUCTSo/
KJ2BglTqkP/5egLpUw1OwZoU8MShzEwFgXrJ5YMP35IQ5nBGWTpGoOfbt43H
3pBARtD87n4iUC4Jdeh4RYLYtNbE6TOBt1/s8Tz//Es+X/9M5Su+9fnN/wc3
X0nc
          "], {{{}, {
             EdgeForm[], 
             Directive[
              RGBColor[0.9, 0.36, 0.054], 
              Opacity[0.3]], 
             GraphicsGroup[{
               
               Polygon[{{1, 78, 79, 50, 77, 70, 76, 64, 69, 75, 59, 63, 68, 
                74, 55, 58, 62, 67, 73, 52, 54, 57, 61, 66, 72, 49, 48, 47, 
                46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 
                31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 
                16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 51, 53, 
                56, 60, 65, 71}}]}]}, {}, {}}, {{}, {}, 
            Annotation[{
              Directive[
               Opacity[1.], 
               RGBColor[0.9, 0.36, 0.054], 
               CapForm["Butt"], 
               AbsoluteThickness[1.6]], 
              
              Line[{1, 71, 65, 60, 56, 53, 51, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
                12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 
               27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42,
                43, 44, 45, 46, 47, 48, 49, 72, 66, 61, 57, 54, 52, 73, 67, 
               62, 58, 55, 74, 68, 63, 59, 75, 69, 64, 76, 70, 77, 50}]}, 
             "Charting`Private`Tag#1"]}}], {}}, <|
        "HighlightElements" -> <|
          "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
         "LayoutOptions" -> <|
          "PanelPlotLayout" -> <||>, "PlotRange" -> {{-10., 80.}, {0., 0.1}}, 
           "Frame" -> {{True, True}, {True, True}}, "AxesOrigin" -> {0., 0.}, 
           "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {False, False}, 
           "LabelStyle" -> {FontFamily -> "Times"}, "AspectRatio" -> 
           GoldenRatio^(-1), "DefaultStyle" -> {
             Directive[
              Opacity[1.], 
              RGBColor[0.9, 0.36, 0.054], 
              CapForm["Butt"], 
              AbsoluteThickness[1.6]]}, 
           "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
               Identity[
                Part[#, 1]], 
               Identity[
                Part[#, 2]]}& ), 
             "ScalingFunctions" -> {{Identity, Identity}, {
               Identity, Identity}}|>, "Primitives" -> {{{{}, {
                EdgeForm[], 
                Directive[
                 RGBColor[0.9, 0.36, 0.054], 
                 Opacity[0.3]], 
                GraphicsGroup[{{
                   Polygon[CompressedData["
1:eJxdlGs0lAkcxsnQYmqJDWEuXqVoGCu1hP+/OGdV0iq2TVdTYUuKY7pMkkoh
R6aaculI3tclZFwal6lIKnKbFksXVjJmrVubUCZk7Tnbl33Oec5zfh+e83x7
2LzDm/fPUVFR2TTrfzM1gqdhuy/O5W1xmzA5WQpfWeU/VY4uUc7MEPh/vhrF
TepqI0FiVmPq8oXAOy/3eF94QUKe1/614VMEvmlusrd+RQIZSQu495lAeYnA
qf01CUkFVNzEBIFl9QcCIzpJOD+v5/ewcQIdbrG5z9+QEO50Rlk8SqD3u3cN
x96SEHqQxRgZIdAkhh7PkpPgYZFa2D9A4GB4n8bTfhIcz3co9/cR6EWnmxsO
k8CVCBgZCgL1k8oGHr0jwUJu5NojJ1DnblP7wfckdPrqBba2ERgXrh5eNU1C
6ULh5wYZgRHXpjYH0yigwmSu7g0ESt0HmTVzKUihDgVeqCOQPlnvEqpJgbCF
Hv+klkC7yXXnGNoUKB/NtGflEVhJBbZ8XEyB2EE5mZhK4Fv7CxYhdhTEjPMv
Ca8TuDPZr9vWkQL+FskL+lUCI397yLrqTEHQ2S1T6y8TaFrxUekKFPCKPrBi
Ewh09l6lHEMK/EdpzXWWBE6Q2q195Ow+p9qypdIMh8y1dDTnZ4D54+zrntvN
0IXS2tYYmgFpJjzzxnE2ynUEopsdGbAmuHa7biwbj5aUVzp4ZsJGY5/MenM2
MgXeVUb3MuF0VXzSBikLw+MEdFNuFiQtu5HftIGFLwpVXXpzs8C+Mz0nuomJ
hs9cOHGMbIj22btBbZyB5StoA7TUbMg/z9cN4DCw0WM1XU3/NpDOtsZNfqaY
+GVCrzHhNsgVa49XR5ugTnfwTYZBDky4ZSrTKo3RcTCyLPp6DviKdsrofYvQ
aZDJVbBzQZjiX+vHWoTTnAVeYxm5IFpqRJP6GGFCgrhuPScPFFlsUVq4IcYb
DZ/ZVZ0HWp0C92CJAT7NeXU61/MOnFS1/Knxj4WoiOhZuuyvO3BffPbGcrWF
eMq5duPr6Hx4vmC5Nt/hO7xCun2LDDHYBFjJPPz0kbu7TfSgWgx7Q0+W0FP0
cI4jX3Z0ZwH4q/O7ZbIF2BsctjfoSwGUxDzZxRrXRc3UdXp2WwvhZfU+Vd/l
ujg/vnjj3NxC+HHY95OZjw4GjazUpGhFoAXjfp2j83GG5RjWxysCa912U9fd
83BmXld2yf0iGHjMi3yWr42FN3VsWkyKwbNXaMVgaOHIn1b+3x8vhvWKA6eu
hHyDdnaPfTmdxdA7nvizdoUG7uiVJ9i63YUlYf7HvS3VccV0SiKRdRdUWrvx
gUANV57RanbTlcDZtCmvsSFVLNWr+EXjqATSTx4c4G5Vwaoh+aP2LgkUHaFv
MVw3DfShfR1HvEog5GkU77DFZ+AbHKZ5VpQAr8P7oVrjR7DqVNpssiuFSzoN
lul7RmFYu8xEX1wKWuwoizc/vIepvq6xUnYZBCuWySXifohxvLiGc6sMAqA5
eShUDh+eRRovMSgHcUFsR5D1awhbvTKz/0o5pNenhQwy62Cxr7vbqkVSmNvR
YzHMlMLMSHZA0jYptE4Git4zc8Bp246eqBNSCHLmH/rETAb7jk82F2Nn/6oq
nqnOigVru+RU4eXZXk3lORbrBBzxO1YjuiaFJ60sj62sX2Hi7zCDxEQp/AO0
+knc
                    "]]}}]}, {}, {}}, {{}, {}, 
               Annotation[{
                 Directive[
                  Opacity[1.], 
                  RGBColor[0.9, 0.36, 0.054], 
                  CapForm["Butt"], 
                  AbsoluteThickness[1.6]], 
                 Line[CompressedData["
1:eJwVzGs0lAkYwHEytMZUxIYwF69SNIyVWsLzFOesCruKbdPVVNiS4pguk6RS
yJGpplw6kvd1CRmXxmUqkopcWyxdZlYyrHVrE8qEbPvhf37f/hz+kS0H5qmp
qXl963/To/hadvsTXN+VdopSU2XwtIPtuY39O0z9G2GYnCyDubrq82z2STga
cLxOfF0G6TWJLE12PNjYp6aLrsggxEVw+DMrFRzkn20vxcugYzpY/IGVB87b
d/bGnJTBfHmv5Sjr22csNyhluwwyGzPChlkNsMzfw33tUhlIiuLlITZvIGLd
muzBq5UQBG2pI+FK+Pg82mS5YSWE9q9USiWDEOd0aT33dgXQOTGWb3/8ADMD
3RPlnAq4rNtklbl3HEZ1KkwNJOXAl/s+0mj+BNYKle3P9uUQ9iyGf8TyCwgM
j9C8q8qg5Chjq9HGWWCM7Jcf9SmDzFOHhnjb1LBmRPm4q1sK5zJmfCZG1LFc
v+o3rWNSUOvowYdCDVxzlt7mrieF5RGBJ3ytNHH1bFoykXMP+iaTf9Wp0sKd
fcokO/d7sKn/4OmrYd+hvf0Tf66iFLz7RNZMJh3H/rYO/OFEKQw94Uc/L9TB
4lu6tu2mpWCj12XmtmcBzi3ozi17UAJ0mAxQjC/EObZTxAC/BH4a9f9s7qeL
IWNrtClaCbyq3a/uv0oPFyaWes3PL4ayuKe72ZN6qJ2+Ud9+WzEEagp6WlsX
Y19oxL6Qr0WwL/xUGSNNH+c5CVqP7SoC2yDrVs8AA+Tt6RQ/rJXAi8WrdASO
3+NV0n0RMiXwQHLu5iqNJXjapd7rTWwhnFK3+qX5ryXYH9W7YuU/d4GuEHqE
Sg3xWd7rM/ned6E/hyPOiDTCROPRs7trC0C8wpgm8zPGpCRJwyZuAYjSAusD
2EtxlrvYZyIrH/zFu1oZA0vReZjF6+fkw5R7tiqj2gSdhqMrYm/kgbJ/w4na
WFPU7Qm9xTTMA9LFzqQlwAyTv07pNyfdgcILAr0gLhObPdcxNAzuQKzfvs0a
k0ysXE0boqXngoMiMy+2hYVGz125CcxcSFl5s7BlMxtfFqu79uXnwJmaxJTN
MjZGJggZZrwc8DLxy2604CBL6FtjfD8b1ofW79CL5+CxsspqR+9syDDlWzRP
clCpKxTfkmeBxZPcG947zNGVom9vDs8CEbfWqr3aHEcs6LraC7MgcJzW1mBF
4BSp0zFAUsAv+ciOTyLQxXetagIpCDm3dWbTFQLNqj6p3IACwVbpS8Y1AqP/
eMS+5kJB3KTgsugGgbtSA3rsnCiQOKqmk9MJfOdw0TLMngLV47munAICq6ng
9k/LKBC1MxKf1hNoP73xPFOHgjTqcPDFBgIZ042u4doUUBGtbh5NBMo8hll1
8ykoXyL60tRKYNT1mS2hNAoU/vrBHZ0EJkRqRtbMkmCpNHbrVRKoe6+l69AH
EnhSITOrn0CDlIqhx+9JcLogVx0YINCHwbAwGiXB0zK9eHCIwOHIAa1ngySE
H2Izx8YINI1jJLKVJEQ6n1WVjhPo+/590/F3JFxY0PtnxCSBjrc5vBdvSUgp
ohKmpgisaDwYHKUggYymBd3/QqCyTOjc9YaEAp8DGyJnCHzb1uJg85oEqXmd
metXAu++2ut78SUJ1ePLVXNzBF6L4aV0d5LwH09CQcg=
                  "]]}, "Charting`Private`Tag#1"]}}, {}}, "GCFlag" -> True|>, 
         "Meta" -> <|
          "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
           Plot, "GroupHighlight" -> False|>|>]]& )[<|
       "HighlightElements" -> <|
         "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
        "LayoutOptions" -> <|
         "PanelPlotLayout" -> <||>, "PlotRange" -> {{-10., 80.}, {0., 0.1}}, 
          "Frame" -> {{True, True}, {True, True}}, "AxesOrigin" -> {0., 0.}, 
          "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {False, False}, 
          "LabelStyle" -> {FontFamily -> "Times"}, "AspectRatio" -> 
          GoldenRatio^(-1), "DefaultStyle" -> {
            Directive[
             Opacity[1.], 
             RGBColor[0.9, 0.36, 0.054], 
             CapForm["Butt"], 
             AbsoluteThickness[1.6]]}, 
          "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
              Identity[
               Part[#, 1]], 
              Identity[
               Part[#, 2]]}& ), 
            "ScalingFunctions" -> {{Identity, Identity}, {
              Identity, Identity}}|>, "Primitives" -> {{{{}, {
               EdgeForm[], 
               Directive[
                RGBColor[0.9, 0.36, 0.054], 
                Opacity[0.3]], 
               GraphicsGroup[{{
                  Polygon[CompressedData["
1:eJxdlGs0lAkcxsnQYmqJDWEuXqVoGCu1hP+/OGdV0iq2TVdTYUuKY7pMkkoh
R6aaculI3tclZFwal6lIKnKbFksXVjJmrVubUCZk7Tnbl33Oec5zfh+e83x7
2LzDm/fPUVFR2TTrfzM1gqdhuy/O5W1xmzA5WQpfWeU/VY4uUc7MEPh/vhrF
TepqI0FiVmPq8oXAOy/3eF94QUKe1/614VMEvmlusrd+RQIZSQu495lAeYnA
qf01CUkFVNzEBIFl9QcCIzpJOD+v5/ewcQIdbrG5z9+QEO50Rlk8SqD3u3cN
x96SEHqQxRgZIdAkhh7PkpPgYZFa2D9A4GB4n8bTfhIcz3co9/cR6EWnmxsO
k8CVCBgZCgL1k8oGHr0jwUJu5NojJ1DnblP7wfckdPrqBba2ERgXrh5eNU1C
6ULh5wYZgRHXpjYH0yigwmSu7g0ESt0HmTVzKUihDgVeqCOQPlnvEqpJgbCF
Hv+klkC7yXXnGNoUKB/NtGflEVhJBbZ8XEyB2EE5mZhK4Fv7CxYhdhTEjPMv
Ca8TuDPZr9vWkQL+FskL+lUCI397yLrqTEHQ2S1T6y8TaFrxUekKFPCKPrBi
Ewh09l6lHEMK/EdpzXWWBE6Q2q195Ow+p9qypdIMh8y1dDTnZ4D54+zrntvN
0IXS2tYYmgFpJjzzxnE2ynUEopsdGbAmuHa7biwbj5aUVzp4ZsJGY5/MenM2
MgXeVUb3MuF0VXzSBikLw+MEdFNuFiQtu5HftIGFLwpVXXpzs8C+Mz0nuomJ
hs9cOHGMbIj22btBbZyB5StoA7TUbMg/z9cN4DCw0WM1XU3/NpDOtsZNfqaY
+GVCrzHhNsgVa49XR5ugTnfwTYZBDky4ZSrTKo3RcTCyLPp6DviKdsrofYvQ
aZDJVbBzQZjiX+vHWoTTnAVeYxm5IFpqRJP6GGFCgrhuPScPFFlsUVq4IcYb
DZ/ZVZ0HWp0C92CJAT7NeXU61/MOnFS1/Knxj4WoiOhZuuyvO3BffPbGcrWF
eMq5duPr6Hx4vmC5Nt/hO7xCun2LDDHYBFjJPPz0kbu7TfSgWgx7Q0+W0FP0
cI4jX3Z0ZwH4q/O7ZbIF2BsctjfoSwGUxDzZxRrXRc3UdXp2WwvhZfU+Vd/l
ujg/vnjj3NxC+HHY95OZjw4GjazUpGhFoAXjfp2j83GG5RjWxysCa912U9fd
83BmXld2yf0iGHjMi3yWr42FN3VsWkyKwbNXaMVgaOHIn1b+3x8vhvWKA6eu
hHyDdnaPfTmdxdA7nvizdoUG7uiVJ9i63YUlYf7HvS3VccV0SiKRdRdUWrvx
gUANV57RanbTlcDZtCmvsSFVLNWr+EXjqATSTx4c4G5Vwaoh+aP2LgkUHaFv
MVw3DfShfR1HvEog5GkU77DFZ+AbHKZ5VpQAr8P7oVrjR7DqVNpssiuFSzoN
lul7RmFYu8xEX1wKWuwoizc/vIepvq6xUnYZBCuWySXifohxvLiGc6sMAqA5
eShUDh+eRRovMSgHcUFsR5D1awhbvTKz/0o5pNenhQwy62Cxr7vbqkVSmNvR
YzHMlMLMSHZA0jYptE4Git4zc8Bp246eqBNSCHLmH/rETAb7jk82F2Nn/6oq
nqnOigVru+RU4eXZXk3lORbrBBzxO1YjuiaFJ60sj62sX2Hi7zCDxEQp/AO0
+knc
                   "]]}}]}, {}, {}}, {{}, {}, 
              Annotation[{
                Directive[
                 Opacity[1.], 
                 RGBColor[0.9, 0.36, 0.054], 
                 CapForm["Butt"], 
                 AbsoluteThickness[1.6]], 
                Line[CompressedData["
1:eJwVzGs0lAkYwHEytMZUxIYwF69SNIyVWsLzFOesCruKbdPVVNiS4pguk6RS
yJGpplw6kvd1CRmXxmUqkopcWyxdZlYyrHVrE8qEbPvhf37f/hz+kS0H5qmp
qXl963/To/hadvsTXN+VdopSU2XwtIPtuY39O0z9G2GYnCyDubrq82z2STga
cLxOfF0G6TWJLE12PNjYp6aLrsggxEVw+DMrFRzkn20vxcugYzpY/IGVB87b
d/bGnJTBfHmv5Sjr22csNyhluwwyGzPChlkNsMzfw33tUhlIiuLlITZvIGLd
muzBq5UQBG2pI+FK+Pg82mS5YSWE9q9USiWDEOd0aT33dgXQOTGWb3/8ADMD
3RPlnAq4rNtklbl3HEZ1KkwNJOXAl/s+0mj+BNYKle3P9uUQ9iyGf8TyCwgM
j9C8q8qg5Chjq9HGWWCM7Jcf9SmDzFOHhnjb1LBmRPm4q1sK5zJmfCZG1LFc
v+o3rWNSUOvowYdCDVxzlt7mrieF5RGBJ3ytNHH1bFoykXMP+iaTf9Wp0sKd
fcokO/d7sKn/4OmrYd+hvf0Tf66iFLz7RNZMJh3H/rYO/OFEKQw94Uc/L9TB
4lu6tu2mpWCj12XmtmcBzi3ozi17UAJ0mAxQjC/EObZTxAC/BH4a9f9s7qeL
IWNrtClaCbyq3a/uv0oPFyaWes3PL4ayuKe72ZN6qJ2+Ud9+WzEEagp6WlsX
Y19oxL6Qr0WwL/xUGSNNH+c5CVqP7SoC2yDrVs8AA+Tt6RQ/rJXAi8WrdASO
3+NV0n0RMiXwQHLu5iqNJXjapd7rTWwhnFK3+qX5ryXYH9W7YuU/d4GuEHqE
Sg3xWd7rM/ned6E/hyPOiDTCROPRs7trC0C8wpgm8zPGpCRJwyZuAYjSAusD
2EtxlrvYZyIrH/zFu1oZA0vReZjF6+fkw5R7tiqj2gSdhqMrYm/kgbJ/w4na
WFPU7Qm9xTTMA9LFzqQlwAyTv07pNyfdgcILAr0gLhObPdcxNAzuQKzfvs0a
k0ysXE0boqXngoMiMy+2hYVGz125CcxcSFl5s7BlMxtfFqu79uXnwJmaxJTN
MjZGJggZZrwc8DLxy2604CBL6FtjfD8b1ofW79CL5+CxsspqR+9syDDlWzRP
clCpKxTfkmeBxZPcG947zNGVom9vDs8CEbfWqr3aHEcs6LraC7MgcJzW1mBF
4BSp0zFAUsAv+ciOTyLQxXetagIpCDm3dWbTFQLNqj6p3IACwVbpS8Y1AqP/
eMS+5kJB3KTgsugGgbtSA3rsnCiQOKqmk9MJfOdw0TLMngLV47munAICq6ng
9k/LKBC1MxKf1hNoP73xPFOHgjTqcPDFBgIZ042u4doUUBGtbh5NBMo8hll1
8ykoXyL60tRKYNT1mS2hNAoU/vrBHZ0EJkRqRtbMkmCpNHbrVRKoe6+l69AH
EnhSITOrn0CDlIqhx+9JcLogVx0YINCHwbAwGiXB0zK9eHCIwOHIAa1ngySE
H2Izx8YINI1jJLKVJEQ6n1WVjhPo+/590/F3JFxY0PtnxCSBjrc5vBdvSUgp
ohKmpgisaDwYHKUggYymBd3/QqCyTOjc9YaEAp8DGyJnCHzb1uJg85oEqXmd
metXAu++2ut78SUJ1ePLVXNzBF6L4aV0d5LwH09CQcg=
                 "]]}, "Charting`Private`Tag#1"]}}, {}}, "GCFlag" -> True|>, 
        "Meta" -> <|
         "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
          Plot, "GroupHighlight" -> False|>|>],
      ImageSizeCache->{{4.503599627370496*^15, -4.503599627370496*^15}, {
       4.503599627370496*^15, -4.503599627370496*^15}}],
     Selectable->False]},
   Annotation[{
     GraphicsComplex[CompressedData["
1:eJw1VHs0lAkcJUOLqR2xIczDpxQNYye1hN+vOGdV0iq2TU9TYUuKY3pIkhRy
ZCrl0ZF8n0fIsxlMRVKR17RYerCSMWu92oQyIdueU/ece+65/9577uUIDm/e
P0dFRWXTF/6vaeECDZt9cU5vSttFKSlSyGhIDxpi1cNib1eXVYukUFgU2xlg
9QpCVq/MGrhcAX7QkjIcLIf3TyOMluhXQKBimVxcOAAx9hfWcG+WgxYnyvz1
T+9gur97vIxTDhcZjRYZe8ZgRLvcWK+wDASdng/Umj6AZZfSehO/DIKeRAkO
m38Cof5hmnulBEqO0LcYrJsB+vC+ziMeEsg4eXCQt1UFq4flDzu6xRCZPu0x
PqyKZbqVv2kcFYNKWw/eD1XDlWe0Wlx0xLAkxPe4p4U6rphJTSKy70DfRNKv
2pUauKNPnmDjcgfWKw6cuhz0HfL5j7y5XaXg3ieyZDK1cPRvS98fj5fC4CNB
xNMCbSy+wbBuNS4FK50OE+fd83B2XneO5F4JaMGET9fYfJxl24f0C0rg5xHv
j6ZeDAwYXalJ0UrgRc0+Ve/lOjg/vnTj3LxikMQ83sWe0EHNtHW6/K3F4Ksu
7JHJFmBfYMjegM9FsDf4pISeqotz7IWyozuLwNrPUubmo4e83e2J92sK4dmC
5dpCux/wMunyPTIL4V5h5PXlagvxlGPdxlfRBXBS1eKXpr8WoiK8d+myf26D
Vleoa6BYH5/kvjyd534bFNmcxPQwA4w3HDmzqyYfEpca0qRehpiQUFi/npsP
olTfOh/2IpzhLvAYz8wD78SdMnr/InQYYvEUnDyYdMlSplcZof1QRHn0tVyQ
K9Yer4k2RkZP4A2mfi6QjjZGzT4mmPR5Urcp4RYUnBPq+HGZ2OS2mq6mdwui
vfZuUJtgYsUK2iAtLQdsuzJyo5tZaPDUiRvHzIHkZdcLmjew8XmxqlNfXjac
ro5P3iBlY1hcKN2Elw0bjbyyGsw4yAr1rDa8mwVrAuu268Ry8KikosrOPQvS
jQVmTRMclDNCE290ZoLZo5xr7ttN0YnS2tYUnAkibo1Fa5UpDptpMTTnZ4Lv
GK2l3oLASVK7rZ+kQFDynh2bQKCj5yrlOFJQNbZEOTtL4JUoXnJ3OwlzO3vN
R1hSmB3N8UveJgVRKz3+cR2B/Kl1Z5naFLRN+Se+Y+WCw7YdvVEnpKB8ONuR
nU9gFeXf+mExBeZyQ+deOYGMO80dB9+REOAoPPSRlQK2nR+tL8R+2Zedciop
jcA3tufNg/gUdHnr+re1ExgXph5WPUNC8EE2c3SUQOMYejxbTkJadTxLnR0L
VvyUNNElKcRMCC+KrhG4M8Wnx8aegrKFok+NMgLDr05vDqRR4GaeVjwwSOBQ
WL/GkwESkououMlJAssbDviHd5EwW1t1ls0+AUd8jtUmXpWCcIv4Of0KgRF/
PGBfcaSACpE5uzYSKHUdYtXOpcD+XKdyfz+BHnS6mcEICefm9f4ZMkGg3U0O
79lrEvI99q8NmybwdUuzrdVLEh63sd22sn+HyX9D9JOSpBAQuWV6/SUCTSo/
KJ2BglTqkP/5egLpUw1OwZoU8MShzEwFgXrJ5YMP35IQ5nBGWTpGoOfbt43H
3pBARtD87n4iUC4Jdeh4RYLYtNbE6TOBt1/s8Tz//Es+X/9M5Su+9fnN/wc3
X0nc
      "], {{{}, {
         EdgeForm[], 
         Directive[
          RGBColor[0.9, 0.36, 0.054], 
          Opacity[0.3]], 
         GraphicsGroup[{
           
           Polygon[{{1, 78, 79, 50, 77, 70, 76, 64, 69, 75, 59, 63, 68, 74, 
            55, 58, 62, 67, 73, 52, 54, 57, 61, 66, 72, 49, 48, 47, 46, 45, 
            44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 
            28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 
            12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 51, 53, 56, 60, 65, 
            71}}]}]}, {}, {}}, {{}, {}, 
        Annotation[{
          Directive[
           Opacity[1.], 
           RGBColor[0.9, 0.36, 0.054], 
           CapForm["Butt"], 
           AbsoluteThickness[1.6]], 
          
          Line[{1, 71, 65, 60, 56, 53, 51, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12,
            13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 
           29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45,
            46, 47, 48, 49, 72, 66, 61, 57, 54, 52, 73, 67, 62, 58, 55, 74, 
           68, 63, 59, 75, 69, 64, 76, 70, 77, 50}]}, 
         "Charting`Private`Tag#1"]}}], {}}, <|
    "HighlightElements" -> <|
      "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
     "LayoutOptions" -> <|
      "PanelPlotLayout" -> <||>, "PlotRange" -> {{-10., 80.}, {0., 0.1}}, 
       "Frame" -> {{True, True}, {True, True}}, "AxesOrigin" -> {0., 0.}, 
       "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {False, False}, 
       "LabelStyle" -> {FontFamily -> "Times"}, "AspectRatio" -> 
       GoldenRatio^(-1), "DefaultStyle" -> {
         Directive[
          Opacity[1.], 
          RGBColor[0.9, 0.36, 0.054], 
          CapForm["Butt"], 
          AbsoluteThickness[1.6]]}, 
       "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& ), 
         "ScalingFunctions" -> {{Identity, Identity}, {Identity, Identity}}|>,
        "Primitives" -> {{{{}, {
            EdgeForm[], 
            Directive[
             RGBColor[0.9, 0.36, 0.054], 
             Opacity[0.3]], 
            GraphicsGroup[{{
               Polygon[CompressedData["
1:eJxdlGs0lAkcxsnQYmqJDWEuXqVoGCu1hP+/OGdV0iq2TVdTYUuKY7pMkkoh
R6aaculI3tclZFwal6lIKnKbFksXVjJmrVubUCZk7Tnbl33Oec5zfh+e83x7
2LzDm/fPUVFR2TTrfzM1gqdhuy/O5W1xmzA5WQpfWeU/VY4uUc7MEPh/vhrF
TepqI0FiVmPq8oXAOy/3eF94QUKe1/614VMEvmlusrd+RQIZSQu495lAeYnA
qf01CUkFVNzEBIFl9QcCIzpJOD+v5/ewcQIdbrG5z9+QEO50Rlk8SqD3u3cN
x96SEHqQxRgZIdAkhh7PkpPgYZFa2D9A4GB4n8bTfhIcz3co9/cR6EWnmxsO
k8CVCBgZCgL1k8oGHr0jwUJu5NojJ1DnblP7wfckdPrqBba2ERgXrh5eNU1C
6ULh5wYZgRHXpjYH0yigwmSu7g0ESt0HmTVzKUihDgVeqCOQPlnvEqpJgbCF
Hv+klkC7yXXnGNoUKB/NtGflEVhJBbZ8XEyB2EE5mZhK4Fv7CxYhdhTEjPMv
Ca8TuDPZr9vWkQL+FskL+lUCI397yLrqTEHQ2S1T6y8TaFrxUekKFPCKPrBi
Ewh09l6lHEMK/EdpzXWWBE6Q2q195Ow+p9qypdIMh8y1dDTnZ4D54+zrntvN
0IXS2tYYmgFpJjzzxnE2ynUEopsdGbAmuHa7biwbj5aUVzp4ZsJGY5/MenM2
MgXeVUb3MuF0VXzSBikLw+MEdFNuFiQtu5HftIGFLwpVXXpzs8C+Mz0nuomJ
hs9cOHGMbIj22btBbZyB5StoA7TUbMg/z9cN4DCw0WM1XU3/NpDOtsZNfqaY
+GVCrzHhNsgVa49XR5ugTnfwTYZBDky4ZSrTKo3RcTCyLPp6DviKdsrofYvQ
aZDJVbBzQZjiX+vHWoTTnAVeYxm5IFpqRJP6GGFCgrhuPScPFFlsUVq4IcYb
DZ/ZVZ0HWp0C92CJAT7NeXU61/MOnFS1/Knxj4WoiOhZuuyvO3BffPbGcrWF
eMq5duPr6Hx4vmC5Nt/hO7xCun2LDDHYBFjJPPz0kbu7TfSgWgx7Q0+W0FP0
cI4jX3Z0ZwH4q/O7ZbIF2BsctjfoSwGUxDzZxRrXRc3UdXp2WwvhZfU+Vd/l
ujg/vnjj3NxC+HHY95OZjw4GjazUpGhFoAXjfp2j83GG5RjWxysCa912U9fd
83BmXld2yf0iGHjMi3yWr42FN3VsWkyKwbNXaMVgaOHIn1b+3x8vhvWKA6eu
hHyDdnaPfTmdxdA7nvizdoUG7uiVJ9i63YUlYf7HvS3VccV0SiKRdRdUWrvx
gUANV57RanbTlcDZtCmvsSFVLNWr+EXjqATSTx4c4G5Vwaoh+aP2LgkUHaFv
MVw3DfShfR1HvEog5GkU77DFZ+AbHKZ5VpQAr8P7oVrjR7DqVNpssiuFSzoN
lul7RmFYu8xEX1wKWuwoizc/vIepvq6xUnYZBCuWySXifohxvLiGc6sMAqA5
eShUDh+eRRovMSgHcUFsR5D1awhbvTKz/0o5pNenhQwy62Cxr7vbqkVSmNvR
YzHMlMLMSHZA0jYptE4Git4zc8Bp246eqBNSCHLmH/rETAb7jk82F2Nn/6oq
nqnOigVru+RU4eXZXk3lORbrBBzxO1YjuiaFJ60sj62sX2Hi7zCDxEQp/AO0
+knc
                "]]}}]}, {}, {}}, {{}, {}, 
           Annotation[{
             Directive[
              Opacity[1.], 
              RGBColor[0.9, 0.36, 0.054], 
              CapForm["Butt"], 
              AbsoluteThickness[1.6]], 
             Line[CompressedData["
1:eJwVzGs0lAkYwHEytMZUxIYwF69SNIyVWsLzFOesCruKbdPVVNiS4pguk6RS
yJGpplw6kvd1CRmXxmUqkopcWyxdZlYyrHVrE8qEbPvhf37f/hz+kS0H5qmp
qXl963/To/hadvsTXN+VdopSU2XwtIPtuY39O0z9G2GYnCyDubrq82z2STga
cLxOfF0G6TWJLE12PNjYp6aLrsggxEVw+DMrFRzkn20vxcugYzpY/IGVB87b
d/bGnJTBfHmv5Sjr22csNyhluwwyGzPChlkNsMzfw33tUhlIiuLlITZvIGLd
muzBq5UQBG2pI+FK+Pg82mS5YSWE9q9USiWDEOd0aT33dgXQOTGWb3/8ADMD
3RPlnAq4rNtklbl3HEZ1KkwNJOXAl/s+0mj+BNYKle3P9uUQ9iyGf8TyCwgM
j9C8q8qg5Chjq9HGWWCM7Jcf9SmDzFOHhnjb1LBmRPm4q1sK5zJmfCZG1LFc
v+o3rWNSUOvowYdCDVxzlt7mrieF5RGBJ3ytNHH1bFoykXMP+iaTf9Wp0sKd
fcokO/d7sKn/4OmrYd+hvf0Tf66iFLz7RNZMJh3H/rYO/OFEKQw94Uc/L9TB
4lu6tu2mpWCj12XmtmcBzi3ozi17UAJ0mAxQjC/EObZTxAC/BH4a9f9s7qeL
IWNrtClaCbyq3a/uv0oPFyaWes3PL4ayuKe72ZN6qJ2+Ud9+WzEEagp6WlsX
Y19oxL6Qr0WwL/xUGSNNH+c5CVqP7SoC2yDrVs8AA+Tt6RQ/rJXAi8WrdASO
3+NV0n0RMiXwQHLu5iqNJXjapd7rTWwhnFK3+qX5ryXYH9W7YuU/d4GuEHqE
Sg3xWd7rM/ned6E/hyPOiDTCROPRs7trC0C8wpgm8zPGpCRJwyZuAYjSAusD
2EtxlrvYZyIrH/zFu1oZA0vReZjF6+fkw5R7tiqj2gSdhqMrYm/kgbJ/w4na
WFPU7Qm9xTTMA9LFzqQlwAyTv07pNyfdgcILAr0gLhObPdcxNAzuQKzfvs0a
k0ysXE0boqXngoMiMy+2hYVGz125CcxcSFl5s7BlMxtfFqu79uXnwJmaxJTN
MjZGJggZZrwc8DLxy2604CBL6FtjfD8b1ofW79CL5+CxsspqR+9syDDlWzRP
clCpKxTfkmeBxZPcG947zNGVom9vDs8CEbfWqr3aHEcs6LraC7MgcJzW1mBF
4BSp0zFAUsAv+ciOTyLQxXetagIpCDm3dWbTFQLNqj6p3IACwVbpS8Y1AqP/
eMS+5kJB3KTgsugGgbtSA3rsnCiQOKqmk9MJfOdw0TLMngLV47munAICq6ng
9k/LKBC1MxKf1hNoP73xPFOHgjTqcPDFBgIZ042u4doUUBGtbh5NBMo8hll1
8ykoXyL60tRKYNT1mS2hNAoU/vrBHZ0EJkRqRtbMkmCpNHbrVRKoe6+l69AH
EnhSITOrn0CDlIqhx+9JcLogVx0YINCHwbAwGiXB0zK9eHCIwOHIAa1ngySE
H2Izx8YINI1jJLKVJEQ6n1WVjhPo+/590/F3JFxY0PtnxCSBjrc5vBdvSUgp
ohKmpgisaDwYHKUggYymBd3/QqCyTOjc9YaEAp8DGyJnCHzb1uJg85oEqXmd
metXAu++2ut78SUJ1ePLVXNzBF6L4aV0d5LwH09CQcg=
              "]]}, "Charting`Private`Tag#1"]}}, {}}, "GCFlag" -> True|>, 
     "Meta" -> <|
      "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
       Plot, "GroupHighlight" -> False|>|>, "DynamicHighlight"]],
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{False, False},
  AxesLabel->{None, None},
  AxesOrigin->{0., 0.},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{None, None}, {None, None}},
  FrameStyle->Automatic,
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{{0}, {0}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  ImageSize->Medium,
  LabelStyle->{FontFamily -> "Times"},
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}, "AxesInFront" -> True},
  PlotRange->{{-10., 80.}, {0., 0.1}},
  PlotRangeClipping->True,
  PlotRangePadding->{{0, 0}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.8551032738505893`*^9, 3.855124981885212*^9, 
  3.9205375860942783`*^9},
 CellLabel->"Out[8]=",ExpressionUUID->"fc4f845c-5d2a-ca40-bd2d-7f786a8bd8bf"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"648e7d59-8b07-4d6a-b039-be4bec6ed396"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{"graph1", ",", "graph2", ",", " ", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]], "Input",
 CellMargins:>
  Dynamic[{{
    0.135 FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}], 
     0.029999999999999992` FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]}, {
    0.009772909496402879 FrontEnd`AbsoluteCurrentValue[{WindowSize, 2}], 
     0.06832418684480987 FrontEnd`AbsoluteCurrentValue[{WindowSize, 2}]}}],
 CellChangeTimes->{{3.855102792519685*^9, 3.8551028787687063`*^9}, {
  3.8551029374632425`*^9, 3.855102941982263*^9}, {3.855103064910186*^9, 
  3.855103092033289*^9}},
 CellLabel->"In[9]:=",ExpressionUUID->"812268f4-fe2e-4003-8cc4-235cc91cab17"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{
     InterpretationBox[{
       TagBox[{{{}, {}, 
          TagBox[{
            RGBColor[0.9, 0.36, 0.054], 
            AbsoluteThickness[1.6], 
            Opacity[1.], 
            CapForm["Butt"], 
            LineBox[CompressedData["
1:eJxTTMoPSmViYGBQA2IQXbbt5bX//5UPMEDBhmLn+5O/IfivDOY+V3+L4Met
DvjhfwvBd1+wXXLBFgRfoqs1xiETwd8dq/io4ZISnM/AGvmWcakinC8Tt0Z3
up4cnJ8vsLjnXKYkwv7JC0J/7BGB82/NKe5MCuWH833PzauXuccK5y+4zdTy
0vz7fhh/Xey2nPDn3+D8vfczQ49OQ/BvPb6gtvDrVzhf5M28kxGbv8D5nX+s
+E/ofYLzH1s9M/H1fgXnM9j7smmuegnnyzlvuc7CieBHeDdV7Tn2HM4/Ey13
QNvpKZy/tSbMm8vyAZy/hLHa8oz+fTj/Hqfnnea3d+H8YKmnip8zbsP5Ntay
ay/GX4PzpX5JtcvOPgHnr7Lceume4zE436rSX27Bi8Nw/qYP7NmuOfvg/Ev5
Nkwndu6E8z+9K5jpxb4Vzk+6tbl/vstyON9po2WN5/7ZcP4zkT1zmqZPhvMB
eu+nRw==
             "]], 
            LineBox[CompressedData["
1:eJwVjWk41AkcgGU7xGY1IXrUKmySc4wr1e83jpm/Gq1Uy0gqjBCSUljUzjM0
lSuaah2lWfdIkxwzk3K0aEmRm3RYx5aWQY5Q1n54n/fb+272POXMkpWRkXFe
4n8PKVeks2+mQNOE7BNSvBg8DYFLK8kFvmRO9+CvYlirNlKYGScEAY/d7HFK
DK/U2dFp42KwyB6d4LiI4WGq47Ba1hOYyE30zdwrhob473X3CqrB8uNMSDWI
oUCxK+nZkTrgMbOtlXXF4K90yvNpzUuQNvkfWJgVwfTlF2x3WjfAlItrW5oI
DP2X9c2H9EBwdGM/PUkEPnsoFml3ekGPIeyq4oigUz51pHu2D4KD+Qs1gSJ4
XUsuEBx6D1oPd75ZhSKooH0jbZMbgoxnDW3XBsshkuANaAWOLf3ajXmUcnid
GdqhJCcFBkntWJ1uOYRnZEoSmVIoLYi89lWjHEpuTLPjF6Tg8+jMaNSKctC7
zF932WYCVLnvrOs6ykA1aI5y8cVnYKp8uxASUQZjFgXng4a+wLza9U7tulJo
HuRE6yjIYnNs7My+oBJY93hkRByvgLZ5igIV7WJYHs6voQST8ParLWctdYRw
3t3U72v0enxMYXF4Zwuh+H39d1ssNDB7tCttwCEfJl00Kw4XaGK7pWdAKeZA
+C9MqoGBFnZq87MSM/+AAZ3rVYUcHdzqnaR8LPQuNKpXFw4o6mJ/0+END6pu
w803Y8kNgXropmF6VeiUBm/rlYZ8F/WxbcNa+bYVtyCFMFyuGGOE6vMPXK0M
eKDa9FOCcMwY8waXWce1JoMm976TuTkZLdaq1folJ0H6diuldSdMsW/wUOGu
gHh4sYFqNnmNgrXpx+uphldgt0ZNklGHGbIjA/eNK12CzSvtPtQst0DfPvHn
omgO2MhCWDHDEovIPR3dq9igvkcUkJ1ghXm0xujK5xfAM4LsMSbZgRib3ltG
j4QPFTqxPJmdmO/fzBgfCoP+YXVBsvEuZOR1vt628Rwke8SZpbjtxvaTHfOk
+2fg4vD56bEMwDQDbd/NzNMQrE/uaWEhPusl5zd2BAGMercxV1NxlbbNfqnW
SaBrqzmu4VOxszti0++qvqB38UpYjYUN7shdaS8NZIE+y6pSp8cG/3H8tMLx
nSeceOLLKTltiyYKNU2lfx6D6sw273EVO4y5V+yadOEITOctzhiV2+HP4czI
6mVuwNIRrE51tMdQjQXzjB9dYFIvxbxYao9FA2EugYcPgiRr/v0Ul4ZReRms
CZIzuNtpofUmOqrfEP/NV3GCjYGXxIZVdIwxUIziujJgvXzAA0cXAieHTepP
GztAjm1UhJRJ4KZbx18aaDkAJSrBNsWdQFLuYqtUxQGcpML2ruME9gW0PL06
TwC3Y+qLVwCBfkJqp3I9AbP8CzYRvxGo73XgTvBRAnqsU1pzBAQyblTmmvHo
4Buale5QRKDcVD+1gUuH6aJS1ichgbrqJ3xYkXQgbemaMSkjcP/R53jfiw57
5TZqPK4isFFWoTeJTIeKthzv1nYCNe1RwG2hwR5FkcG5LgJt5+WdObU06KL/
Na3WS+BEzDgjVkyDz5IRrsc7AnNXV5pk3KWBwV3jex8+EugUGuamGkKDih7q
ubh/CZRok+3tfJZ6ygfASEpg02yCX5gbDXwuhbacnSLw6iNV50mbpV5VbOr6
WQITnUQ/7LCgAXvuppdkjsCthz5+id1OAyVKvv6RrwQG+Aas6fmRBrcDJVOL
iwQOvF2kmSrT4D/no2dd
             "]]}, Annotation[#, "Charting`Private`Tag#1"]& ], {}}, {}}, {
        "WolframDynamicHighlight", <|
         "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>}], 
       StyleBox[
        DynamicBox[
         (Charting`HighlightActionBox["DynamicHighlight", {}, 
          Slot["HighlightElements"], 
          Slot["LayoutOptions"], 
          Slot["Meta"], 
          Charting`HighlightActionFunction["DynamicHighlight", {{{{}, {}, 
              Annotation[{
                Directive[
                 Opacity[1.], 
                 RGBColor[0.9, 0.36, 0.054], 
                 CapForm["Butt"], 
                 AbsoluteThickness[1.6]], 
                Line[CompressedData["
1:eJxTTMoPSmViYGBQA2IQXbbt5bX//5UPMEDBhmLn+5O/IfivDOY+V3+L4Met
DvjhfwvBd1+wXXLBFgRfoqs1xiETwd8dq/io4ZISnM/AGvmWcakinC8Tt0Z3
up4cnJ8vsLjnXKYkwv7JC0J/7BGB82/NKe5MCuWH833PzauXuccK5y+4zdTy
0vz7fhh/Xey2nPDn3+D8vfczQ49OQ/BvPb6gtvDrVzhf5M28kxGbv8D5nX+s
+E/ofYLzH1s9M/H1fgXnM9j7smmuegnnyzlvuc7CieBHeDdV7Tn2HM4/Ey13
QNvpKZy/tSbMm8vyAZy/hLHa8oz+fTj/Hqfnnea3d+H8YKmnip8zbsP5Ntay
ay/GX4PzpX5JtcvOPgHnr7Lceume4zE436rSX27Bi8Nw/qYP7NmuOfvg/Ev5
Nkwndu6E8z+9K5jpxb4Vzk+6tbl/vstyON9po2WN5/7ZcP4zkT1zmqZPhvMB
eu+nRw==
                 "]], 
                Line[CompressedData["
1:eJwVjWk41AkcgGU7xGY1IXrUKmySc4wr1e83jpm/Gq1Uy0gqjBCSUljUzjM0
lSuaah2lWfdIkxwzk3K0aEmRm3RYx5aWQY5Q1n54n/fb+272POXMkpWRkXFe
4n8PKVeks2+mQNOE7BNSvBg8DYFLK8kFvmRO9+CvYlirNlKYGScEAY/d7HFK
DK/U2dFp42KwyB6d4LiI4WGq47Ba1hOYyE30zdwrhob473X3CqrB8uNMSDWI
oUCxK+nZkTrgMbOtlXXF4K90yvNpzUuQNvkfWJgVwfTlF2x3WjfAlItrW5oI
DP2X9c2H9EBwdGM/PUkEPnsoFml3ekGPIeyq4oigUz51pHu2D4KD+Qs1gSJ4
XUsuEBx6D1oPd75ZhSKooH0jbZMbgoxnDW3XBsshkuANaAWOLf3ajXmUcnid
GdqhJCcFBkntWJ1uOYRnZEoSmVIoLYi89lWjHEpuTLPjF6Tg8+jMaNSKctC7
zF932WYCVLnvrOs6ykA1aI5y8cVnYKp8uxASUQZjFgXng4a+wLza9U7tulJo
HuRE6yjIYnNs7My+oBJY93hkRByvgLZ5igIV7WJYHs6voQST8ParLWctdYRw
3t3U72v0enxMYXF4Zwuh+H39d1ssNDB7tCttwCEfJl00Kw4XaGK7pWdAKeZA
+C9MqoGBFnZq87MSM/+AAZ3rVYUcHdzqnaR8LPQuNKpXFw4o6mJ/0+END6pu
w803Y8kNgXropmF6VeiUBm/rlYZ8F/WxbcNa+bYVtyCFMFyuGGOE6vMPXK0M
eKDa9FOCcMwY8waXWce1JoMm976TuTkZLdaq1folJ0H6diuldSdMsW/wUOGu
gHh4sYFqNnmNgrXpx+uphldgt0ZNklGHGbIjA/eNK12CzSvtPtQst0DfPvHn
omgO2MhCWDHDEovIPR3dq9igvkcUkJ1ghXm0xujK5xfAM4LsMSbZgRib3ltG
j4QPFTqxPJmdmO/fzBgfCoP+YXVBsvEuZOR1vt628Rwke8SZpbjtxvaTHfOk
+2fg4vD56bEMwDQDbd/NzNMQrE/uaWEhPusl5zd2BAGMercxV1NxlbbNfqnW
SaBrqzmu4VOxszti0++qvqB38UpYjYUN7shdaS8NZIE+y6pSp8cG/3H8tMLx
nSeceOLLKTltiyYKNU2lfx6D6sw273EVO4y5V+yadOEITOctzhiV2+HP4czI
6mVuwNIRrE51tMdQjQXzjB9dYFIvxbxYao9FA2EugYcPgiRr/v0Ul4ZReRms
CZIzuNtpofUmOqrfEP/NV3GCjYGXxIZVdIwxUIziujJgvXzAA0cXAieHTepP
GztAjm1UhJRJ4KZbx18aaDkAJSrBNsWdQFLuYqtUxQGcpML2ruME9gW0PL06
TwC3Y+qLVwCBfkJqp3I9AbP8CzYRvxGo73XgTvBRAnqsU1pzBAQyblTmmvHo
4Buale5QRKDcVD+1gUuH6aJS1ichgbrqJ3xYkXQgbemaMSkjcP/R53jfiw57
5TZqPK4isFFWoTeJTIeKthzv1nYCNe1RwG2hwR5FkcG5LgJt5+WdObU06KL/
Na3WS+BEzDgjVkyDz5IRrsc7AnNXV5pk3KWBwV3jex8+EugUGuamGkKDih7q
ubh/CZRok+3tfJZ6ygfASEpg02yCX5gbDXwuhbacnSLw6iNV50mbpV5VbOr6
WQITnUQ/7LCgAXvuppdkjsCthz5+id1OAyVKvv6RrwQG+Aas6fmRBrcDJVOL
iwQOvF2kmSrT4D/no2dd
                 "]]}, "Charting`Private`Tag#1"], {}}}, {}}, <|
           "HighlightElements" -> <|
             "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
            "LayoutOptions" -> <|
             "PanelPlotLayout" -> <||>, 
              "PlotRange" -> {{-10, 50}, {0., 0.09980885638192234}}, 
              "Frame" -> {{True, True}, {True, True}}, "AxesOrigin" -> {0, 0},
               "ImageSize" -> {360, 360/GoldenRatio}, 
              "Axes" -> {False, False}, 
              "LabelStyle" -> {FontFamily -> "Times"}, "AspectRatio" -> 
              GoldenRatio^(-1), "DefaultStyle" -> {
                Directive[
                 Opacity[1.], 
                 RGBColor[0.9, 0.36, 0.054], 
                 CapForm["Butt"], 
                 AbsoluteThickness[1.6]]}, 
              "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
                  Identity[
                   Part[#, 1]], 
                  Identity[
                   Part[#, 2]]}& ), 
                "ScalingFunctions" -> {{Identity, Identity}, {
                  Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
              False|>, 
            "Meta" -> <|
             "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, 
              "Function" -> Plot, "GroupHighlight" -> False|>|>]]& )[<|
          "HighlightElements" -> <|
            "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
           "LayoutOptions" -> <|
            "PanelPlotLayout" -> <||>, 
             "PlotRange" -> {{-10, 50}, {0., 0.09980885638192234}}, 
             "Frame" -> {{True, True}, {True, True}}, "AxesOrigin" -> {0, 0}, 
             "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {False, False}, 
             "LabelStyle" -> {FontFamily -> "Times"}, "AspectRatio" -> 
             GoldenRatio^(-1), "DefaultStyle" -> {
               Directive[
                Opacity[1.], 
                RGBColor[0.9, 0.36, 0.054], 
                CapForm["Butt"], 
                AbsoluteThickness[1.6]]}, 
             "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
                 Identity[
                  Part[#, 1]], 
                 Identity[
                  Part[#, 2]]}& ), 
               "ScalingFunctions" -> {{Identity, Identity}, {
                 Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
             False|>, 
           "Meta" -> <|
            "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, 
             "Function" -> Plot, "GroupHighlight" -> False|>|>], 
         ImageSizeCache -> {{4.503599627370496*^15, -4.503599627370496*^15}, {
          4.503599627370496*^15, -4.503599627370496*^15}}], Selectable -> 
        False]}, 
      Annotation[{{{{}, {}, 
          Annotation[{
            Directive[
             Opacity[1.], 
             RGBColor[0.9, 0.36, 0.054], 
             CapForm["Butt"], 
             AbsoluteThickness[1.6]], 
            Line[CompressedData["
1:eJxTTMoPSmViYGBQA2IQXbbt5bX//5UPMEDBhmLn+5O/IfivDOY+V3+L4Met
DvjhfwvBd1+wXXLBFgRfoqs1xiETwd8dq/io4ZISnM/AGvmWcakinC8Tt0Z3
up4cnJ8vsLjnXKYkwv7JC0J/7BGB82/NKe5MCuWH833PzauXuccK5y+4zdTy
0vz7fhh/Xey2nPDn3+D8vfczQ49OQ/BvPb6gtvDrVzhf5M28kxGbv8D5nX+s
+E/ofYLzH1s9M/H1fgXnM9j7smmuegnnyzlvuc7CieBHeDdV7Tn2HM4/Ey13
QNvpKZy/tSbMm8vyAZy/hLHa8oz+fTj/Hqfnnea3d+H8YKmnip8zbsP5Ntay
ay/GX4PzpX5JtcvOPgHnr7Lceume4zE436rSX27Bi8Nw/qYP7NmuOfvg/Ev5
Nkwndu6E8z+9K5jpxb4Vzk+6tbl/vstyON9po2WN5/7ZcP4zkT1zmqZPhvMB
eu+nRw==
             "]], 
            Line[CompressedData["
1:eJwVjWk41AkcgGU7xGY1IXrUKmySc4wr1e83jpm/Gq1Uy0gqjBCSUljUzjM0
lSuaah2lWfdIkxwzk3K0aEmRm3RYx5aWQY5Q1n54n/fb+272POXMkpWRkXFe
4n8PKVeks2+mQNOE7BNSvBg8DYFLK8kFvmRO9+CvYlirNlKYGScEAY/d7HFK
DK/U2dFp42KwyB6d4LiI4WGq47Ba1hOYyE30zdwrhob473X3CqrB8uNMSDWI
oUCxK+nZkTrgMbOtlXXF4K90yvNpzUuQNvkfWJgVwfTlF2x3WjfAlItrW5oI
DP2X9c2H9EBwdGM/PUkEPnsoFml3ekGPIeyq4oigUz51pHu2D4KD+Qs1gSJ4
XUsuEBx6D1oPd75ZhSKooH0jbZMbgoxnDW3XBsshkuANaAWOLf3ajXmUcnid
GdqhJCcFBkntWJ1uOYRnZEoSmVIoLYi89lWjHEpuTLPjF6Tg8+jMaNSKctC7
zF932WYCVLnvrOs6ykA1aI5y8cVnYKp8uxASUQZjFgXng4a+wLza9U7tulJo
HuRE6yjIYnNs7My+oBJY93hkRByvgLZ5igIV7WJYHs6voQST8ParLWctdYRw
3t3U72v0enxMYXF4Zwuh+H39d1ssNDB7tCttwCEfJl00Kw4XaGK7pWdAKeZA
+C9MqoGBFnZq87MSM/+AAZ3rVYUcHdzqnaR8LPQuNKpXFw4o6mJ/0+END6pu
w803Y8kNgXropmF6VeiUBm/rlYZ8F/WxbcNa+bYVtyCFMFyuGGOE6vMPXK0M
eKDa9FOCcMwY8waXWce1JoMm976TuTkZLdaq1folJ0H6diuldSdMsW/wUOGu
gHh4sYFqNnmNgrXpx+uphldgt0ZNklGHGbIjA/eNK12CzSvtPtQst0DfPvHn
omgO2MhCWDHDEovIPR3dq9igvkcUkJ1ghXm0xujK5xfAM4LsMSbZgRib3ltG
j4QPFTqxPJmdmO/fzBgfCoP+YXVBsvEuZOR1vt628Rwke8SZpbjtxvaTHfOk
+2fg4vD56bEMwDQDbd/NzNMQrE/uaWEhPusl5zd2BAGMercxV1NxlbbNfqnW
SaBrqzmu4VOxszti0++qvqB38UpYjYUN7shdaS8NZIE+y6pSp8cG/3H8tMLx
nSeceOLLKTltiyYKNU2lfx6D6sw273EVO4y5V+yadOEITOctzhiV2+HP4czI
6mVuwNIRrE51tMdQjQXzjB9dYFIvxbxYao9FA2EugYcPgiRr/v0Ul4ZReRms
CZIzuNtpofUmOqrfEP/NV3GCjYGXxIZVdIwxUIziujJgvXzAA0cXAieHTepP
GztAjm1UhJRJ4KZbx18aaDkAJSrBNsWdQFLuYqtUxQGcpML2ruME9gW0PL06
TwC3Y+qLVwCBfkJqp3I9AbP8CzYRvxGo73XgTvBRAnqsU1pzBAQyblTmmvHo
4Buale5QRKDcVD+1gUuH6aJS1ichgbrqJ3xYkXQgbemaMSkjcP/R53jfiw57
5TZqPK4isFFWoTeJTIeKthzv1nYCNe1RwG2hwR5FkcG5LgJt5+WdObU06KL/
Na3WS+BEzDgjVkyDz5IRrsc7AnNXV5pk3KWBwV3jex8+EugUGuamGkKDih7q
ubh/CZRok+3tfJZ6ygfASEpg02yCX5gbDXwuhbacnSLw6iNV50mbpV5VbOr6
WQITnUQ/7LCgAXvuppdkjsCthz5+id1OAyVKvv6RrwQG+Aas6fmRBrcDJVOL
iwQOvF2kmSrT4D/no2dd
             "]]}, "Charting`Private`Tag#1"], {}}}, {}}, <|
       "HighlightElements" -> <|
         "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
        "LayoutOptions" -> <|
         "PanelPlotLayout" -> <||>, 
          "PlotRange" -> {{-10, 50}, {0., 0.09980885638192234}}, 
          "Frame" -> {{True, True}, {True, True}}, "AxesOrigin" -> {0, 0}, 
          "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {False, False}, 
          "LabelStyle" -> {FontFamily -> "Times"}, "AspectRatio" -> 
          GoldenRatio^(-1), "DefaultStyle" -> {
            Directive[
             Opacity[1.], 
             RGBColor[0.9, 0.36, 0.054], 
             CapForm["Butt"], 
             AbsoluteThickness[1.6]]}, 
          "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
              Identity[
               Part[#, 1]], 
              Identity[
               Part[#, 2]]}& ), 
            "ScalingFunctions" -> {{Identity, Identity}, {
              Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> False|>,
         "Meta" -> <|
         "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
          Plot, "GroupHighlight" -> False|>|>, "DynamicHighlight"]], 
     InterpretationBox[{
       TagBox[{
         GraphicsComplexBox[CompressedData["
1:eJw1lHtUzHkYxifXETXdRmKaqflGF6MhYtWu96W2kktkS7HRZaeLSGKTaLrZ
pEO2UqxdyW90ny7zq61QW7urVLqgCxlTiyRFKBRNWXvOes55znM+/z7POY+h
935n0RQGg+H02f9lRbxAm8Fgopvp4bIZozQcblwcJdKbhaHP2gR1pTTUZlpu
C3VURfGxyt1j+2h4uorb4uQ3GzeE5PzdLKChxvDtg2TxHATRTU7jSxmYZbZv
ii5Qw9erB3m+eTIQ9aT4f1WvjjtENqq+e2UgLPF4fuEjC0d9rpWamclgx35V
cUmKBr5c3h6vN1AMcZ4u8gmeJp40Nd5oXlQMR9IzB/UrNJGnnB1lEVwMHaue
OvHttJBqCrv69cpiUI9YELHzjhY61zwJ9VYWAYu13WOPvzbGnBd5hx8vgjBl
dJLHO21sjdv0cMncIshdSYctStTB1mVbHJ0zCqGC02ViZMTG8podvK3mhSDc
9Uowo5iNT1Wt3CNqCyDohWpvlf1cZBkL03xdCoDdyX7l3jEXxx7Xim2HpHB8
zqKCW0G66FIbq6EfJYU7Q4IVIdPnocWNrfwzbCnECQhrImkeikatqxNL8mFq
Ofeih5ke2v41f7TVMR/6f5sVSVXoYdQzxsWAgTzINx805djOx3rt8QMWp/PA
Uu3uiUD5fIwPTfCMNM0DE/uc1Zf8F+A5lfiFN5tz4XFzbHqOCgd1Ryf7GgJz
IZzh2tR3joN9rxdnMNRy4Wii7uZZRvq41FwzofP3HLAJ6I5RqdTHu9YZGVlu
OXDo0tnZ3eu5SFsuLeubkgMx0Ws9XrVzMc6hdoOyKBvcike8OgN52BvLd7Df
ng1pVqnXLo/xsIj46BRNz4YWJtfnsoMBSoN6TCIKs2A6/7lW7xkDXHiwuNl6
VxYsThIa/9lhgBwLRW+GRhaUZo3pnDQ0RN8ZnmclVZkwHHBVYONviFop3B6H
A5mQ0qbU7y81RHHgpsCrvEwgKdcPGjP4+OvEedf221fAjxEy4mbHx5b1zJPf
xl8Blk7+xh+T+Xh6WJpQZnUF9nbIW2O7+MjtsTvuOiKB8hcnygU8glPW/bHE
uVACvnllYTV7CLJUIvvFP0igga3wsZMRfC7s/y7VQAJ3FSvGP30iqG61Nq27
g4LzptIG+hQT5VXBWxo6aGj5EC+U3Ce47qHUgj1OgYn73iB3OybqjFSVevbR
0DSzpOHtDYJHOFNVm9QkcHtwV+rWFwTXsOsqg/speB3cVCMgTPR15T2SDdHQ
qF6fpn+doIw82m2uK4HW4YPe4Y8JzmyWSmveUHCnd329yXuC4qRyz4U9FLQf
UwakaTKRJUvulA/T4JjsPLGsjGCs0U67RwsksDl0sj5RQdDvVO33e95TsMW/
3fybNwQn2/yONT6hwNmr2ktnnGCmy76A6AcU1MWcXXOLycS6n5ebvnlLg2r7
uaWVJQS3Xb9gYs2VgHqFjXKenKBE8ZGqHqNAI0/P++YQwZRS5WH9Pgq0JNNS
08cInl6WgG0PKUjmhZsnTBA8oeImF96noPqnf3JE05jYlh7VP/6OhoFDVo7R
NEFiEmnpz5PAkFsfu7uLIFUm8Rr48Lkfx8qjp14SvG1rpWn/jIJhm+xCn1GC
lmvF9koFBSE1HAcnJcHtjut+ceuigBbf06mdJKjYWSCceY+CL3/G+F9f9vzC
/wIdQDzo
          "], {{{}, {
             RGBColor[0.9, 0.36, 0.054], 
             Opacity[0.3], 
             EdgeForm[None], 
             GraphicsGroupBox[
              
              PolygonBox[{{1, 78, 79, 50, 77, 70, 76, 64, 69, 75, 59, 63, 68, 
               74, 55, 58, 62, 67, 73, 52, 54, 57, 61, 66, 72, 49, 48, 47, 46,
                45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 
               30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15,
                14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 51, 53, 56, 60, 
               65, 71}}]]}, {}, {}}, {{}, {}, 
            TagBox[{
              RGBColor[0.9, 0.36, 0.054], 
              AbsoluteThickness[1.6], 
              Opacity[1.], 
              CapForm["Butt"], 
              
              LineBox[{1, 71, 65, 60, 56, 53, 51, 2, 3, 4, 5, 6, 7, 8, 9, 10, 
               11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26,
                27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 
               42, 43, 44, 45, 46, 47, 48, 49, 72, 66, 61, 57, 54, 52, 73, 67,
                62, 58, 55, 74, 68, 63, 59, 75, 69, 64, 76, 70, 77, 50}]}, 
             Annotation[#, "Charting`Private`Tag#1"]& ]}}], {}}, {
        "WolframDynamicHighlight", <|
         "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>}], 
       StyleBox[
        DynamicBox[
         (Charting`HighlightActionBox["DynamicHighlight", {}, 
          Slot["HighlightElements"], 
          Slot["LayoutOptions"], 
          Slot["Meta"], 
          Charting`HighlightActionFunction["DynamicHighlight", {
            GraphicsComplex[CompressedData["
1:eJw1lHtUzHkYxifXETXdRmKaqflGF6MhYtWu96W2kktkS7HRZaeLSGKTaLrZ
pEO2UqxdyW90ny7zq61QW7urVLqgCxlTiyRFKBRNWXvOes55znM+/z7POY+h
935n0RQGg+H02f9lRbxAm8Fgopvp4bIZozQcblwcJdKbhaHP2gR1pTTUZlpu
C3VURfGxyt1j+2h4uorb4uQ3GzeE5PzdLKChxvDtg2TxHATRTU7jSxmYZbZv
ii5Qw9erB3m+eTIQ9aT4f1WvjjtENqq+e2UgLPF4fuEjC0d9rpWamclgx35V
cUmKBr5c3h6vN1AMcZ4u8gmeJp40Nd5oXlQMR9IzB/UrNJGnnB1lEVwMHaue
OvHttJBqCrv69cpiUI9YELHzjhY61zwJ9VYWAYu13WOPvzbGnBd5hx8vgjBl
dJLHO21sjdv0cMncIshdSYctStTB1mVbHJ0zCqGC02ViZMTG8podvK3mhSDc
9Uowo5iNT1Wt3CNqCyDohWpvlf1cZBkL03xdCoDdyX7l3jEXxx7Xim2HpHB8
zqKCW0G66FIbq6EfJYU7Q4IVIdPnocWNrfwzbCnECQhrImkeikatqxNL8mFq
Ofeih5ke2v41f7TVMR/6f5sVSVXoYdQzxsWAgTzINx805djOx3rt8QMWp/PA
Uu3uiUD5fIwPTfCMNM0DE/uc1Zf8F+A5lfiFN5tz4XFzbHqOCgd1Ryf7GgJz
IZzh2tR3joN9rxdnMNRy4Wii7uZZRvq41FwzofP3HLAJ6I5RqdTHu9YZGVlu
OXDo0tnZ3eu5SFsuLeubkgMx0Ws9XrVzMc6hdoOyKBvcike8OgN52BvLd7Df
ng1pVqnXLo/xsIj46BRNz4YWJtfnsoMBSoN6TCIKs2A6/7lW7xkDXHiwuNl6
VxYsThIa/9lhgBwLRW+GRhaUZo3pnDQ0RN8ZnmclVZkwHHBVYONviFop3B6H
A5mQ0qbU7y81RHHgpsCrvEwgKdcPGjP4+OvEedf221fAjxEy4mbHx5b1zJPf
xl8Blk7+xh+T+Xh6WJpQZnUF9nbIW2O7+MjtsTvuOiKB8hcnygU8glPW/bHE
uVACvnllYTV7CLJUIvvFP0igga3wsZMRfC7s/y7VQAJ3FSvGP30iqG61Nq27
g4LzptIG+hQT5VXBWxo6aGj5EC+U3Ce47qHUgj1OgYn73iB3OybqjFSVevbR
0DSzpOHtDYJHOFNVm9QkcHtwV+rWFwTXsOsqg/speB3cVCMgTPR15T2SDdHQ
qF6fpn+doIw82m2uK4HW4YPe4Y8JzmyWSmveUHCnd329yXuC4qRyz4U9FLQf
UwakaTKRJUvulA/T4JjsPLGsjGCs0U67RwsksDl0sj5RQdDvVO33e95TsMW/
3fybNwQn2/yONT6hwNmr2ktnnGCmy76A6AcU1MWcXXOLycS6n5ebvnlLg2r7
uaWVJQS3Xb9gYs2VgHqFjXKenKBE8ZGqHqNAI0/P++YQwZRS5WH9Pgq0JNNS
08cInl6WgG0PKUjmhZsnTBA8oeImF96noPqnf3JE05jYlh7VP/6OhoFDVo7R
NEFiEmnpz5PAkFsfu7uLIFUm8Rr48Lkfx8qjp14SvG1rpWn/jIJhm+xCn1GC
lmvF9koFBSE1HAcnJcHtjut+ceuigBbf06mdJKjYWSCceY+CL3/G+F9f9vzC
/wIdQDzo
             "], {{{}, {
                EdgeForm[], 
                Directive[
                 RGBColor[0.9, 0.36, 0.054], 
                 Opacity[0.3]], 
                GraphicsGroup[{
                  
                  Polygon[{{1, 78, 79, 50, 77, 70, 76, 64, 69, 75, 59, 63, 68,
                    74, 55, 58, 62, 67, 73, 52, 54, 57, 61, 66, 72, 49, 48, 
                   47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33,
                    32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 
                   18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2,
                    51, 53, 56, 60, 65, 71}}]}]}, {}, {}}, {{}, {}, 
               Annotation[{
                 Directive[
                  Opacity[1.], 
                  RGBColor[0.9, 0.36, 0.054], 
                  CapForm["Butt"], 
                  AbsoluteThickness[1.6]], 
                 
                 Line[{1, 71, 65, 60, 56, 53, 51, 2, 3, 4, 5, 6, 7, 8, 9, 10, 
                  11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 
                  26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 
                  41, 42, 43, 44, 45, 46, 47, 48, 49, 72, 66, 61, 57, 54, 52, 
                  73, 67, 62, 58, 55, 74, 68, 63, 59, 75, 69, 64, 76, 70, 77, 
                  50}]}, "Charting`Private`Tag#1"]}}], {}}, <|
           "HighlightElements" -> <|
             "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
            "LayoutOptions" -> <|
             "PanelPlotLayout" -> <||>, 
              "PlotRange" -> {{-10., 80.}, {0., 0.1}}, 
              "Frame" -> {{True, True}, {True, True}}, 
              "AxesOrigin" -> {0., 0.}, "ImageSize" -> {360, 360/GoldenRatio},
               "Axes" -> {False, False}, 
              "LabelStyle" -> {FontFamily -> "Times"}, "AspectRatio" -> 
              GoldenRatio^(-1), "DefaultStyle" -> {
                Directive[
                 Opacity[1.], 
                 RGBColor[0.9, 0.36, 0.054], 
                 CapForm["Butt"], 
                 AbsoluteThickness[1.6]]}, 
              "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
                  Identity[
                   Part[#, 1]], 
                  Identity[
                   Part[#, 2]]}& ), 
                "ScalingFunctions" -> {{Identity, Identity}, {
                  Identity, Identity}}|>, "Primitives" -> {{{{}, {
                   EdgeForm[], 
                   Directive[
                    RGBColor[0.9, 0.36, 0.054], 
                    Opacity[0.3]], 
                   GraphicsGroup[{{
                    Polygon[CompressedData["
1:eJxlh3s0lHkYgEfXSTFuk9SYYX7KpWmmlNrY3fctFumitEStctlxSUlqJWXc
WskpLaK23aRvwmBc5mNRsexuhFwql5KwlSRKoqIM7e45u3/tc85znvMYeh1w
Ek9jMBiOf/tPy+IE2gwGE11Nj5TMGqPhv2f8y72uVROfPpH/vbrlutTuNgpo
yX2d6imCXbvyRLPvU5DECxPGTxI8qeLaKXpAQXAVx95RSXCHw/ofXTsocPKs
9NSZIJjhvN8/6iEFWtIZKWnjBM+siMeWRxSMWGfle48RtFgnsVN2UXC3d0Ot
yXuCksRSj8U9FGz1axV+8YbgVIvv8fqnFGjk6HndGiKYXKw8ot9HwbBD+bHT
rwjesbHUtHtOwZ3B3SnbXhL8kl1THtRPQfPIIa+wJwRnN8rlVW8o2BIyVZvQ
RdD3dPU3e99ToF5mrVzQSVDa9ZGqHKdgyLWP3d1BkCqReg58oKDpQ5xI+oDg
+kdyc/YEBQ2zi+re3iR4lDNdtUFNCvXqtan6NwgqyOM9Ql0pOCQ5Ta4oIRhj
tMv28SIpqLaeX15eRHD7jYsmVlwpDBy2dIiiCRKTCAs/nhTq2F3etgqCL0T9
X6cYSMEnpyS0ai9BlkpEv+RbKZS+PFkq4BGctv7XZU75UtjX1tkc08FHbo/t
CZdRKbB0cjd9l8THMyPy+BLLq+DLCB51teVj0wbmqa/irgJJvnHImMHHnyYv
uLTeuQrJLUr9/mJDlARsDrjGy4AR/2sCaz9D1Erm9tgfzIDizHGdU4aG6DPL
45y0IgOWJoqMf2szQI55V2+6RibM5L/Q6j1rgIsPFTZa7c6EJibX+4q9AcoD
e0zC8zMh1TLl+pVxHhYQb52CmVngWjjq2R7Aw94Yvr3djiyIjlrn/rqVi7H2
1RuVBVlw+PK5ud0buEhbLC/pmyYDa//uaJVyfbxnlZ6e6SqDYwm6W+YY6eNy
oWZ8+y8yCGO4NPSd52Df8NJ0hlo2PGmMSZOpcFB3bKqvLiAbTOxkay/7LcLz
KnGLbzVmg4XavZMBnQsxLiTeI8I0B3KFg6Ycm4VYqz1x0PxMDvT/PCeCKtPD
yOeMS/4DOTC9lHvJ3UwPbX5fONbskAuxAsKaTFyA4jGryoSiXLg7JFgVPHMB
mt/cxj/LlsOJeUvybgfqonN1jIZ+pBzY7ezXbm3zcfxJtcRmSA6BL1V7K+zm
I8tYlOrjnAei3a8FswrZ+EzV0i28Og/KOB0mRkZsLK3aydsmzIfs1XTokgQd
bF6x1cEpPR9ClVGJ7u+0sTl286Nl8wuAxdrhvtdPG6MviL3CThSAevii8F13
tdCp6mmIl7IA2tY8c+TbaiHVEHrt89WFcDQtY1C/TBN5yrmR5kGFEOvh3DnJ
08RTpsabhAWFsPOAqqQoWQNfrWyN0xsoBFGR+4uLH1k45n292MxMAeKeZL/P
atVxp9ha1WefAswyWjdH5anh8NpBnk+OAqoM3z5MksxDEN/i1L9SwLM13CZH
37m4MVj2R6OAhuoMi+0hDqooOV6+Z3w/DUfql0aK9eZgyPMWQU0xDRdM5XX0
aSZ2VgRtrWujwcRtX6CbLRN1RiuKPfpoGA5qqBIQJvq48B4rhmhoPa70T9Vk
IkuR1N45QkNN9LkvbzOZWPPDStM3b2mo/P5PmXgGE1vSIvsn3tHwFyHUPOg=

                    "]]}}]}, {}, {}}, {{}, {}, 
                  Annotation[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.9, 0.36, 0.054], 
                    CapForm["Butt"], 
                    AbsoluteThickness[1.6]], 
                    Line[CompressedData["
1:eJwVxX081HccAPDT46U4T5fUueO+ykOXK6UWW59PMaT0oBE15WHnISWpScp5
nORVGqLWlvS7zuN5uB9DxdgWIQ+Vh5KwSpcoiYpytO2P9+tt6H3YWTSDwWA4
/ef/KxIE2gwGE91Mj5fNGaeh+qd/ckSzmNiWETUw+YGGupgLG+4ymVj382rT
d+9paD+lDEjXZCJLntLZPUrDSHBTjYAw0deV91Q+TIOJ+8Egdzsm6oxVlXoq
aLhkKmugzzKxuyp4R0MHDccbl0eJ9OZh6Ms2QV0pDbVSy12hjqooPlW5f+IQ
DS/WcVu2+83HLSE5fzcLaKgxfP84RbwAQXSH0/hGDmbSdqfoAjUcWT/E882T
g6gv1f+renXcI7JR9T0oB2GJx6vLn1k47nOz1MxMDnsOq4pLUjXwzer2BL3B
Yoj3dOme4mniGVPjreZFxXAiQzqkX6GJPOX8KIvgYuhY92I7304LqaawG1+v
LQb1iCURe+9roXPN81BvZRGwWLs9DvhrY8wlkXd4XBGEKaOTPT5oY2u805MV
C4sgdy0dtixJB1tX7XB0ziyECk6XiZERG8tr9vB2mheCcN9bwZxiNr5QtXKP
qC2AoNeq/VX2C5FlLEz3dSkAdif7rXvHQpx4Viu2HZZB3IJlBXeDdNGlNlZD
P0oG94cFa0JmL0KL2zv559kyiBcQ1lTyIhSNW1cnleTDzHLuFQ8zPbT9a/F4
q2M+DPw2L5Kq0MOol4wrAYN5kG8+ZMqxXYz12pNHLM7lgaXag9OB3YsxITTR
M9I0D0zsc9Zf9V+CF1USlt5pzoVnzbEZOSoc1B2fVjQE5kI4w7VJcZGDipHl
mQy1XDiZpLttnpE+rjTXTOz8PQdsAnpjVCr18YF1ZmaWWw4cu3phfu9mLtKW
K8sUM3IgJnqjx9t2LsY71G5RFmWDW/GYV2cgD/tj+Q72u7Mh3Srt5rUJHhYR
H52i2dnQwuT6XHMwQFlQn0lEYRbM5r/S6j9vgEuPFjdb78uC5clC4z87DJBj
0dOfqZEFpVkTOmcMDdF3jucFSZUURgNuCGz8DVErldvncEQKqW1K/YFSQxQH
OgXe4EmBpN46aszg469Tl1zb710HP0bImJsdH1s2M898m3AdWDr5W39M4eO5
UVlimdV1ONjR3RrbxUdun12c65gEyl+fLhfwCM7Y9McK50IJ+OaVhdUcIMhS
iRwQ/yCBBnaPj52c4CvhwHdpBhIYPGblGE0TJCaRlv48Cai2X1xZWUJw163L
JtZcCTimOE+tKiMYa7TX7ukSCTSq16fr3yIoJ0/3m+tKoGluScP72wRPcGaq
NqlJoOVTglDyiOCmJzIL9iQFw24Kdm8XQapM4jX4iQL1Chvlom6Ckp7PVPUE
BdtCp+uTegj6na39/sBHClpHj3qHPyM4t1kmq3lHwb2hfWk7XxPcwK6rDB6g
YMSx8uTZNwTv2Vpp2r+kQCNPz/vOMMHUUuVxfQUFO/zbzb95R3C6ze9U43MK
7vdvrjf5SFCcXO65tI+CUZvsQp9xgpYbxfbKHgq0JLPSMiYInluViG1PKHD2
qvbSmSQodTkUEP2YgpAajsN2JcHdjpt+ceuiIIUXbp44RfC0ilu38BEFtPih
Tu00wZ69BcK5Dyl40LNm8ssXgupWG9N7Oyj4F54eNeA=
                    "]]}, "Charting`Private`Tag#1"]}}, {}}, "GCFlag" -> 
              True|>, "Meta" -> <|
             "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, 
              "Function" -> Plot, "GroupHighlight" -> False|>|>]]& )[<|
          "HighlightElements" -> <|
            "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
           "LayoutOptions" -> <|
            "PanelPlotLayout" -> <||>, 
             "PlotRange" -> {{-10., 80.}, {0., 0.1}}, 
             "Frame" -> {{True, True}, {True, True}}, 
             "AxesOrigin" -> {0., 0.}, "ImageSize" -> {360, 360/GoldenRatio}, 
             "Axes" -> {False, False}, 
             "LabelStyle" -> {FontFamily -> "Times"}, "AspectRatio" -> 
             GoldenRatio^(-1), "DefaultStyle" -> {
               Directive[
                Opacity[1.], 
                RGBColor[0.9, 0.36, 0.054], 
                CapForm["Butt"], 
                AbsoluteThickness[1.6]]}, 
             "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
                 Identity[
                  Part[#, 1]], 
                 Identity[
                  Part[#, 2]]}& ), 
               "ScalingFunctions" -> {{Identity, Identity}, {
                 Identity, Identity}}|>, "Primitives" -> {{{{}, {
                  EdgeForm[], 
                  Directive[
                   RGBColor[0.9, 0.36, 0.054], 
                   Opacity[0.3]], 
                  GraphicsGroup[{{
                    Polygon[CompressedData["
1:eJxlh3s0lHkYgEfXSTFuk9SYYX7KpWmmlNrY3fctFumitEStctlxSUlqJWXc
WskpLaK23aRvwmBc5mNRsexuhFwql5KwlSRKoqIM7e45u3/tc85znvMYeh1w
Ek9jMBiOf/tPy+IE2gwGE11Nj5TMGqPhv2f8y72uVROfPpH/vbrlutTuNgpo
yX2d6imCXbvyRLPvU5DECxPGTxI8qeLaKXpAQXAVx95RSXCHw/ofXTsocPKs
9NSZIJjhvN8/6iEFWtIZKWnjBM+siMeWRxSMWGfle48RtFgnsVN2UXC3d0Ot
yXuCksRSj8U9FGz1axV+8YbgVIvv8fqnFGjk6HndGiKYXKw8ot9HwbBD+bHT
rwjesbHUtHtOwZ3B3SnbXhL8kl1THtRPQfPIIa+wJwRnN8rlVW8o2BIyVZvQ
RdD3dPU3e99ToF5mrVzQSVDa9ZGqHKdgyLWP3d1BkCqReg58oKDpQ5xI+oDg
+kdyc/YEBQ2zi+re3iR4lDNdtUFNCvXqtan6NwgqyOM9Ql0pOCQ5Ta4oIRhj
tMv28SIpqLaeX15eRHD7jYsmVlwpDBy2dIiiCRKTCAs/nhTq2F3etgqCL0T9
X6cYSMEnpyS0ai9BlkpEv+RbKZS+PFkq4BGctv7XZU75UtjX1tkc08FHbo/t
CZdRKbB0cjd9l8THMyPy+BLLq+DLCB51teVj0wbmqa/irgJJvnHImMHHnyYv
uLTeuQrJLUr9/mJDlARsDrjGy4AR/2sCaz9D1Erm9tgfzIDizHGdU4aG6DPL
45y0IgOWJoqMf2szQI55V2+6RibM5L/Q6j1rgIsPFTZa7c6EJibX+4q9AcoD
e0zC8zMh1TLl+pVxHhYQb52CmVngWjjq2R7Aw94Yvr3djiyIjlrn/rqVi7H2
1RuVBVlw+PK5ud0buEhbLC/pmyYDa//uaJVyfbxnlZ6e6SqDYwm6W+YY6eNy
oWZ8+y8yCGO4NPSd52Df8NJ0hlo2PGmMSZOpcFB3bKqvLiAbTOxkay/7LcLz
KnGLbzVmg4XavZMBnQsxLiTeI8I0B3KFg6Ycm4VYqz1x0PxMDvT/PCeCKtPD
yOeMS/4DOTC9lHvJ3UwPbX5fONbskAuxAsKaTFyA4jGryoSiXLg7JFgVPHMB
mt/cxj/LlsOJeUvybgfqonN1jIZ+pBzY7ezXbm3zcfxJtcRmSA6BL1V7K+zm
I8tYlOrjnAei3a8FswrZ+EzV0i28Og/KOB0mRkZsLK3aydsmzIfs1XTokgQd
bF6x1cEpPR9ClVGJ7u+0sTl286Nl8wuAxdrhvtdPG6MviL3CThSAevii8F13
tdCp6mmIl7IA2tY8c+TbaiHVEHrt89WFcDQtY1C/TBN5yrmR5kGFEOvh3DnJ
08RTpsabhAWFsPOAqqQoWQNfrWyN0xsoBFGR+4uLH1k45n292MxMAeKeZL/P
atVxp9ha1WefAswyWjdH5anh8NpBnk+OAqoM3z5MksxDEN/i1L9SwLM13CZH
37m4MVj2R6OAhuoMi+0hDqooOV6+Z3w/DUfql0aK9eZgyPMWQU0xDRdM5XX0
aSZ2VgRtrWujwcRtX6CbLRN1RiuKPfpoGA5qqBIQJvq48B4rhmhoPa70T9Vk
IkuR1N45QkNN9LkvbzOZWPPDStM3b2mo/P5PmXgGE1vSIvsn3tHwFyHUPOg=

                    "]]}}]}, {}, {}}, {{}, {}, 
                 Annotation[{
                   Directive[
                    Opacity[1.], 
                    RGBColor[0.9, 0.36, 0.054], 
                    CapForm["Butt"], 
                    AbsoluteThickness[1.6]], 
                   Line[CompressedData["
1:eJwVxX081HccAPDT46U4T5fUueO+ykOXK6UWW59PMaT0oBE15WHnISWpScp5
nORVGqLWlvS7zuN5uB9DxdgWIQ+Vh5KwSpcoiYpytO2P9+tt6H3YWTSDwWA4
/ef/KxIE2gwGE91Mj5fNGaeh+qd/ckSzmNiWETUw+YGGupgLG+4ymVj382rT
d+9paD+lDEjXZCJLntLZPUrDSHBTjYAw0deV91Q+TIOJ+8Egdzsm6oxVlXoq
aLhkKmugzzKxuyp4R0MHDccbl0eJ9OZh6Ms2QV0pDbVSy12hjqooPlW5f+IQ
DS/WcVu2+83HLSE5fzcLaKgxfP84RbwAQXSH0/hGDmbSdqfoAjUcWT/E882T
g6gv1f+renXcI7JR9T0oB2GJx6vLn1k47nOz1MxMDnsOq4pLUjXwzer2BL3B
Yoj3dOme4mniGVPjreZFxXAiQzqkX6GJPOX8KIvgYuhY92I7304LqaawG1+v
LQb1iCURe+9roXPN81BvZRGwWLs9DvhrY8wlkXd4XBGEKaOTPT5oY2u805MV
C4sgdy0dtixJB1tX7XB0ziyECk6XiZERG8tr9vB2mheCcN9bwZxiNr5QtXKP
qC2AoNeq/VX2C5FlLEz3dSkAdif7rXvHQpx4Viu2HZZB3IJlBXeDdNGlNlZD
P0oG94cFa0JmL0KL2zv559kyiBcQ1lTyIhSNW1cnleTDzHLuFQ8zPbT9a/F4
q2M+DPw2L5Kq0MOol4wrAYN5kG8+ZMqxXYz12pNHLM7lgaXag9OB3YsxITTR
M9I0D0zsc9Zf9V+CF1USlt5pzoVnzbEZOSoc1B2fVjQE5kI4w7VJcZGDipHl
mQy1XDiZpLttnpE+rjTXTOz8PQdsAnpjVCr18YF1ZmaWWw4cu3phfu9mLtKW
K8sUM3IgJnqjx9t2LsY71G5RFmWDW/GYV2cgD/tj+Q72u7Mh3Srt5rUJHhYR
H52i2dnQwuT6XHMwQFlQn0lEYRbM5r/S6j9vgEuPFjdb78uC5clC4z87DJBj
0dOfqZEFpVkTOmcMDdF3jucFSZUURgNuCGz8DVErldvncEQKqW1K/YFSQxQH
OgXe4EmBpN46aszg469Tl1zb710HP0bImJsdH1s2M898m3AdWDr5W39M4eO5
UVlimdV1ONjR3RrbxUdun12c65gEyl+fLhfwCM7Y9McK50IJ+OaVhdUcIMhS
iRwQ/yCBBnaPj52c4CvhwHdpBhIYPGblGE0TJCaRlv48Cai2X1xZWUJw163L
JtZcCTimOE+tKiMYa7TX7ukSCTSq16fr3yIoJ0/3m+tKoGluScP72wRPcGaq
NqlJoOVTglDyiOCmJzIL9iQFw24Kdm8XQapM4jX4iQL1Chvlom6Ckp7PVPUE
BdtCp+uTegj6na39/sBHClpHj3qHPyM4t1kmq3lHwb2hfWk7XxPcwK6rDB6g
YMSx8uTZNwTv2Vpp2r+kQCNPz/vOMMHUUuVxfQUFO/zbzb95R3C6ze9U43MK
7vdvrjf5SFCcXO65tI+CUZvsQp9xgpYbxfbKHgq0JLPSMiYInluViG1PKHD2
qvbSmSQodTkUEP2YgpAajsN2JcHdjpt+ceuiIIUXbp44RfC0ilu38BEFtPih
Tu00wZ69BcK5Dyl40LNm8ssXgupWG9N7Oyj4F54eNeA=
                    "]]}, "Charting`Private`Tag#1"]}}, {}}, "GCFlag" -> 
             True|>, "Meta" -> <|
            "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, 
             "Function" -> Plot, "GroupHighlight" -> False|>|>], 
         ImageSizeCache -> {{4.503599627370496*^15, -4.503599627370496*^15}, {
          4.503599627370496*^15, -4.503599627370496*^15}}], Selectable -> 
        False]}, 
      Annotation[{
        GraphicsComplex[CompressedData["
1:eJw1lHtUzHkYxifXETXdRmKaqflGF6MhYtWu96W2kktkS7HRZaeLSGKTaLrZ
pEO2UqxdyW90ny7zq61QW7urVLqgCxlTiyRFKBRNWXvOes55znM+/z7POY+h
935n0RQGg+H02f9lRbxAm8Fgopvp4bIZozQcblwcJdKbhaHP2gR1pTTUZlpu
C3VURfGxyt1j+2h4uorb4uQ3GzeE5PzdLKChxvDtg2TxHATRTU7jSxmYZbZv
ii5Qw9erB3m+eTIQ9aT4f1WvjjtENqq+e2UgLPF4fuEjC0d9rpWamclgx35V
cUmKBr5c3h6vN1AMcZ4u8gmeJp40Nd5oXlQMR9IzB/UrNJGnnB1lEVwMHaue
OvHttJBqCrv69cpiUI9YELHzjhY61zwJ9VYWAYu13WOPvzbGnBd5hx8vgjBl
dJLHO21sjdv0cMncIshdSYctStTB1mVbHJ0zCqGC02ViZMTG8podvK3mhSDc
9Uowo5iNT1Wt3CNqCyDohWpvlf1cZBkL03xdCoDdyX7l3jEXxx7Xim2HpHB8
zqKCW0G66FIbq6EfJYU7Q4IVIdPnocWNrfwzbCnECQhrImkeikatqxNL8mFq
Ofeih5ke2v41f7TVMR/6f5sVSVXoYdQzxsWAgTzINx805djOx3rt8QMWp/PA
Uu3uiUD5fIwPTfCMNM0DE/uc1Zf8F+A5lfiFN5tz4XFzbHqOCgd1Ryf7GgJz
IZzh2tR3joN9rxdnMNRy4Wii7uZZRvq41FwzofP3HLAJ6I5RqdTHu9YZGVlu
OXDo0tnZ3eu5SFsuLeubkgMx0Ws9XrVzMc6hdoOyKBvcike8OgN52BvLd7Df
ng1pVqnXLo/xsIj46BRNz4YWJtfnsoMBSoN6TCIKs2A6/7lW7xkDXHiwuNl6
VxYsThIa/9lhgBwLRW+GRhaUZo3pnDQ0RN8ZnmclVZkwHHBVYONviFop3B6H
A5mQ0qbU7y81RHHgpsCrvEwgKdcPGjP4+OvEedf221fAjxEy4mbHx5b1zJPf
xl8Blk7+xh+T+Xh6WJpQZnUF9nbIW2O7+MjtsTvuOiKB8hcnygU8glPW/bHE
uVACvnllYTV7CLJUIvvFP0igga3wsZMRfC7s/y7VQAJ3FSvGP30iqG61Nq27
g4LzptIG+hQT5VXBWxo6aGj5EC+U3Ce47qHUgj1OgYn73iB3OybqjFSVevbR
0DSzpOHtDYJHOFNVm9QkcHtwV+rWFwTXsOsqg/speB3cVCMgTPR15T2SDdHQ
qF6fpn+doIw82m2uK4HW4YPe4Y8JzmyWSmveUHCnd329yXuC4qRyz4U9FLQf
UwakaTKRJUvulA/T4JjsPLGsjGCs0U67RwsksDl0sj5RQdDvVO33e95TsMW/
3fybNwQn2/yONT6hwNmr2ktnnGCmy76A6AcU1MWcXXOLycS6n5ebvnlLg2r7
uaWVJQS3Xb9gYs2VgHqFjXKenKBE8ZGqHqNAI0/P++YQwZRS5WH9Pgq0JNNS
08cInl6WgG0PKUjmhZsnTBA8oeImF96noPqnf3JE05jYlh7VP/6OhoFDVo7R
NEFiEmnpz5PAkFsfu7uLIFUm8Rr48Lkfx8qjp14SvG1rpWn/jIJhm+xCn1GC
lmvF9koFBSE1HAcnJcHtjut+ceuigBbf06mdJKjYWSCceY+CL3/G+F9f9vzC
/wIdQDzo
         "], {{{}, {
            EdgeForm[], 
            Directive[
             RGBColor[0.9, 0.36, 0.054], 
             Opacity[0.3]], 
            GraphicsGroup[{
              
              Polygon[{{1, 78, 79, 50, 77, 70, 76, 64, 69, 75, 59, 63, 68, 74,
                55, 58, 62, 67, 73, 52, 54, 57, 61, 66, 72, 49, 48, 47, 46, 
               45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30,
                29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 
               14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 51, 53, 56, 60, 65,
                71}}]}]}, {}, {}}, {{}, {}, 
           Annotation[{
             Directive[
              Opacity[1.], 
              RGBColor[0.9, 0.36, 0.054], 
              CapForm["Butt"], 
              AbsoluteThickness[1.6]], 
             
             Line[{1, 71, 65, 60, 56, 53, 51, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
              12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 
              28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 
              44, 45, 46, 47, 48, 49, 72, 66, 61, 57, 54, 52, 73, 67, 62, 58, 
              55, 74, 68, 63, 59, 75, 69, 64, 76, 70, 77, 50}]}, 
            "Charting`Private`Tag#1"]}}], {}}, <|
       "HighlightElements" -> <|
         "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
        "LayoutOptions" -> <|
         "PanelPlotLayout" -> <||>, "PlotRange" -> {{-10., 80.}, {0., 0.1}}, 
          "Frame" -> {{True, True}, {True, True}}, "AxesOrigin" -> {0., 0.}, 
          "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {False, False}, 
          "LabelStyle" -> {FontFamily -> "Times"}, "AspectRatio" -> 
          GoldenRatio^(-1), "DefaultStyle" -> {
            Directive[
             Opacity[1.], 
             RGBColor[0.9, 0.36, 0.054], 
             CapForm["Butt"], 
             AbsoluteThickness[1.6]]}, 
          "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
              Identity[
               Part[#, 1]], 
              Identity[
               Part[#, 2]]}& ), 
            "ScalingFunctions" -> {{Identity, Identity}, {
              Identity, Identity}}|>, "Primitives" -> {{{{}, {
               EdgeForm[], 
               Directive[
                RGBColor[0.9, 0.36, 0.054], 
                Opacity[0.3]], 
               GraphicsGroup[{{
                  Polygon[CompressedData["
1:eJxlh3s0lHkYgEfXSTFuk9SYYX7KpWmmlNrY3fctFumitEStctlxSUlqJWXc
WskpLaK23aRvwmBc5mNRsexuhFwql5KwlSRKoqIM7e45u3/tc85znvMYeh1w
Ek9jMBiOf/tPy+IE2gwGE11Nj5TMGqPhv2f8y72uVROfPpH/vbrlutTuNgpo
yX2d6imCXbvyRLPvU5DECxPGTxI8qeLaKXpAQXAVx95RSXCHw/ofXTsocPKs
9NSZIJjhvN8/6iEFWtIZKWnjBM+siMeWRxSMWGfle48RtFgnsVN2UXC3d0Ot
yXuCksRSj8U9FGz1axV+8YbgVIvv8fqnFGjk6HndGiKYXKw8ot9HwbBD+bHT
rwjesbHUtHtOwZ3B3SnbXhL8kl1THtRPQfPIIa+wJwRnN8rlVW8o2BIyVZvQ
RdD3dPU3e99ToF5mrVzQSVDa9ZGqHKdgyLWP3d1BkCqReg58oKDpQ5xI+oDg
+kdyc/YEBQ2zi+re3iR4lDNdtUFNCvXqtan6NwgqyOM9Ql0pOCQ5Ta4oIRhj
tMv28SIpqLaeX15eRHD7jYsmVlwpDBy2dIiiCRKTCAs/nhTq2F3etgqCL0T9
X6cYSMEnpyS0ai9BlkpEv+RbKZS+PFkq4BGctv7XZU75UtjX1tkc08FHbo/t
CZdRKbB0cjd9l8THMyPy+BLLq+DLCB51teVj0wbmqa/irgJJvnHImMHHnyYv
uLTeuQrJLUr9/mJDlARsDrjGy4AR/2sCaz9D1Erm9tgfzIDizHGdU4aG6DPL
45y0IgOWJoqMf2szQI55V2+6RibM5L/Q6j1rgIsPFTZa7c6EJibX+4q9AcoD
e0zC8zMh1TLl+pVxHhYQb52CmVngWjjq2R7Aw94Yvr3djiyIjlrn/rqVi7H2
1RuVBVlw+PK5ud0buEhbLC/pmyYDa//uaJVyfbxnlZ6e6SqDYwm6W+YY6eNy
oWZ8+y8yCGO4NPSd52Df8NJ0hlo2PGmMSZOpcFB3bKqvLiAbTOxkay/7LcLz
KnGLbzVmg4XavZMBnQsxLiTeI8I0B3KFg6Ycm4VYqz1x0PxMDvT/PCeCKtPD
yOeMS/4DOTC9lHvJ3UwPbX5fONbskAuxAsKaTFyA4jGryoSiXLg7JFgVPHMB
mt/cxj/LlsOJeUvybgfqonN1jIZ+pBzY7ezXbm3zcfxJtcRmSA6BL1V7K+zm
I8tYlOrjnAei3a8FswrZ+EzV0i28Og/KOB0mRkZsLK3aydsmzIfs1XTokgQd
bF6x1cEpPR9ClVGJ7u+0sTl286Nl8wuAxdrhvtdPG6MviL3CThSAevii8F13
tdCp6mmIl7IA2tY8c+TbaiHVEHrt89WFcDQtY1C/TBN5yrmR5kGFEOvh3DnJ
08RTpsabhAWFsPOAqqQoWQNfrWyN0xsoBFGR+4uLH1k45n292MxMAeKeZL/P
atVxp9ha1WefAswyWjdH5anh8NpBnk+OAqoM3z5MksxDEN/i1L9SwLM13CZH
37m4MVj2R6OAhuoMi+0hDqooOV6+Z3w/DUfql0aK9eZgyPMWQU0xDRdM5XX0
aSZ2VgRtrWujwcRtX6CbLRN1RiuKPfpoGA5qqBIQJvq48B4rhmhoPa70T9Vk
IkuR1N45QkNN9LkvbzOZWPPDStM3b2mo/P5PmXgGE1vSIvsn3tHwFyHUPOg=

                   "]]}}]}, {}, {}}, {{}, {}, 
              Annotation[{
                Directive[
                 Opacity[1.], 
                 RGBColor[0.9, 0.36, 0.054], 
                 CapForm["Butt"], 
                 AbsoluteThickness[1.6]], 
                Line[CompressedData["
1:eJwVxX081HccAPDT46U4T5fUueO+ykOXK6UWW59PMaT0oBE15WHnISWpScp5
nORVGqLWlvS7zuN5uB9DxdgWIQ+Vh5KwSpcoiYpytO2P9+tt6H3YWTSDwWA4
/ef/KxIE2gwGE91Mj5fNGaeh+qd/ckSzmNiWETUw+YGGupgLG+4ymVj382rT
d+9paD+lDEjXZCJLntLZPUrDSHBTjYAw0deV91Q+TIOJ+8Egdzsm6oxVlXoq
aLhkKmugzzKxuyp4R0MHDccbl0eJ9OZh6Ms2QV0pDbVSy12hjqooPlW5f+IQ
DS/WcVu2+83HLSE5fzcLaKgxfP84RbwAQXSH0/hGDmbSdqfoAjUcWT/E882T
g6gv1f+renXcI7JR9T0oB2GJx6vLn1k47nOz1MxMDnsOq4pLUjXwzer2BL3B
Yoj3dOme4mniGVPjreZFxXAiQzqkX6GJPOX8KIvgYuhY92I7304LqaawG1+v
LQb1iCURe+9roXPN81BvZRGwWLs9DvhrY8wlkXd4XBGEKaOTPT5oY2u805MV
C4sgdy0dtixJB1tX7XB0ziyECk6XiZERG8tr9vB2mheCcN9bwZxiNr5QtXKP
qC2AoNeq/VX2C5FlLEz3dSkAdif7rXvHQpx4Viu2HZZB3IJlBXeDdNGlNlZD
P0oG94cFa0JmL0KL2zv559kyiBcQ1lTyIhSNW1cnleTDzHLuFQ8zPbT9a/F4
q2M+DPw2L5Kq0MOol4wrAYN5kG8+ZMqxXYz12pNHLM7lgaXag9OB3YsxITTR
M9I0D0zsc9Zf9V+CF1USlt5pzoVnzbEZOSoc1B2fVjQE5kI4w7VJcZGDipHl
mQy1XDiZpLttnpE+rjTXTOz8PQdsAnpjVCr18YF1ZmaWWw4cu3phfu9mLtKW
K8sUM3IgJnqjx9t2LsY71G5RFmWDW/GYV2cgD/tj+Q72u7Mh3Srt5rUJHhYR
H52i2dnQwuT6XHMwQFlQn0lEYRbM5r/S6j9vgEuPFjdb78uC5clC4z87DJBj
0dOfqZEFpVkTOmcMDdF3jucFSZUURgNuCGz8DVErldvncEQKqW1K/YFSQxQH
OgXe4EmBpN46aszg469Tl1zb710HP0bImJsdH1s2M898m3AdWDr5W39M4eO5
UVlimdV1ONjR3RrbxUdun12c65gEyl+fLhfwCM7Y9McK50IJ+OaVhdUcIMhS
iRwQ/yCBBnaPj52c4CvhwHdpBhIYPGblGE0TJCaRlv48Cai2X1xZWUJw163L
JtZcCTimOE+tKiMYa7TX7ukSCTSq16fr3yIoJ0/3m+tKoGluScP72wRPcGaq
NqlJoOVTglDyiOCmJzIL9iQFw24Kdm8XQapM4jX4iQL1Chvlom6Ckp7PVPUE
BdtCp+uTegj6na39/sBHClpHj3qHPyM4t1kmq3lHwb2hfWk7XxPcwK6rDB6g
YMSx8uTZNwTv2Vpp2r+kQCNPz/vOMMHUUuVxfQUFO/zbzb95R3C6ze9U43MK
7vdvrjf5SFCcXO65tI+CUZvsQp9xgpYbxfbKHgq0JLPSMiYInluViG1PKHD2
qvbSmSQodTkUEP2YgpAajsN2JcHdjpt+ceuiIIUXbp44RfC0ilu38BEFtPih
Tu00wZ69BcK5Dyl40LNm8ssXgupWG9N7Oyj4F54eNeA=
                 "]]}, "Charting`Private`Tag#1"]}}, {}}, "GCFlag" -> True|>, 
        "Meta" -> <|
         "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
          Plot, "GroupHighlight" -> False|>|>, "DynamicHighlight"]]}, 
    AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
    Axes -> {False, False}, AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
    DisplayFunction -> Identity, Frame -> {{True, True}, {True, True}}, 
    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> Automatic, 
    FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
    GridLines -> {{0}, {0}}, GridLinesStyle -> Directive[
      GrayLevel[0.5, 0.4]], ImagePadding -> All, 
    ImageSize -> {773.3333333333336, 482.22222222222223`}, 
    LabelStyle -> {FontFamily -> "Times"}, 
    Method -> {
     "DefaultBoundaryStyle" -> Automatic, 
      "DefaultGraphicsInteraction" -> {
       "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
        "Effects" -> {
         "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
          "Droplines" -> {
           "freeformCursorMode" -> True, 
            "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
      "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None, 
      "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& )}}, PlotRange -> All, PlotRangeClipping -> True, 
    PlotRangePadding -> {{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.05], 
       Scaled[0.05]}}, Ticks -> {Automatic, Automatic}], 
   FormBox[
    FormBox[
     TagBox[
      GridBox[{{"\[Piecewise]", 
         GridBox[{{"0", 
            RowBox[{"x", "<", "0"}]}, {
            RowBox[{"0.1`", " ", 
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{
                 RowBox[{"-", "0.1`"}], " ", "x"}]]}], 
            RowBox[{"x", "\[GreaterEqual]", "0"}]}}, 
          ColumnAlignments -> {Left}, ColumnSpacings -> 1.2, ColumnWidths -> 
          Automatic, AllowedDimensions -> {2, Automatic}, Selectable -> True, 
          Editable -> True]}}, ColumnAlignments -> {Left}, ColumnSpacings -> 
       0.5, ColumnWidths -> Automatic], "Piecewise", SyntaxForm -> Equal, 
      SelectWithContents -> True, StripWrapperBoxes -> True, Selectable -> 
      False, Editable -> False, DeleteWithContents -> True], TraditionalForm],
     TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.8551028686536207`*^9, 3.855102881224367*^9}, 
   3.8551029426688337`*^9, 3.855103093009198*^9, 3.8551249840669966`*^9, 
   3.9205375928016834`*^9},
 CellLabel->"Out[9]=",ExpressionUUID->"3317066a-abfc-d846-a0ec-d4666db9d803"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"10d81b53-d176-4fb3-b531-bbab77a678eb"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{"graph1", ",", "graph3", ",", " ", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.855103293271188*^9, 3.85510329454787*^9}},
 CellLabel->"In[14]:=",ExpressionUUID->"8307d285-cd5e-4e57-a01d-896274b8f40b"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{{{}, {}, 
       TagBox[{
         RGBColor[0.9, 0.36, 0.054], 
         AbsoluteThickness[1.6], 
         Opacity[1.], 
         CapForm["Butt"], 
         LineBox[CompressedData["
1:eJxTTMoPSmViYGBQA2IQXbbt5bX//5UPMEDBhmLn+5O/IfivDOY+V3+L4Met
DvjhfwvBd1+wXXLBFgRfoqs1xiETwd8dq/io4ZISnM/AGvmWcakinC8Tt0Z3
up4cnJ8vsLjnXKYkwv7JC0J/7BGB82/NKe5MCuWH833PzauXuccK5y+4zdTy
0vz7fhh/Xey2nPDn3+D8vfczQ49OQ/BvPb6gtvDrVzhf5M28kxGbv8D5nX+s
+E/ofYLzH1s9M/H1fgXnM9j7smmuegnnyzlvuc7CieBHeDdV7Tn2HM4/Ey13
QNvpKZy/tSbMm8vyAZy/hLHa8oz+fTj/Hqfnnea3d+H8YKmnip8zbsP5Ntay
ay/GX4PzpX5JtcvOPgHnr7Lceume4zE436rSX27Bi8Nw/qYP7NmuOfvg/Ev5
Nkwndu6E8z+9K5jpxb4Vzk+6tbl/vstyON9po2WN5/7ZcP4zkT1zmqZPhvMB
eu+nRw==
          "]], 
         LineBox[CompressedData["
1:eJwVjWk41AkcgGU7xGY1IXrUKmySc4wr1e83jpm/Gq1Uy0gqjBCSUljUzjM0
lSuaah2lWfdIkxwzk3K0aEmRm3RYx5aWQY5Q1n54n/fb+272POXMkpWRkXFe
4n8PKVeks2+mQNOE7BNSvBg8DYFLK8kFvmRO9+CvYlirNlKYGScEAY/d7HFK
DK/U2dFp42KwyB6d4LiI4WGq47Ba1hOYyE30zdwrhob473X3CqrB8uNMSDWI
oUCxK+nZkTrgMbOtlXXF4K90yvNpzUuQNvkfWJgVwfTlF2x3WjfAlItrW5oI
DP2X9c2H9EBwdGM/PUkEPnsoFml3ekGPIeyq4oigUz51pHu2D4KD+Qs1gSJ4
XUsuEBx6D1oPd75ZhSKooH0jbZMbgoxnDW3XBsshkuANaAWOLf3ajXmUcnid
GdqhJCcFBkntWJ1uOYRnZEoSmVIoLYi89lWjHEpuTLPjF6Tg8+jMaNSKctC7
zF932WYCVLnvrOs6ykA1aI5y8cVnYKp8uxASUQZjFgXng4a+wLza9U7tulJo
HuRE6yjIYnNs7My+oBJY93hkRByvgLZ5igIV7WJYHs6voQST8ParLWctdYRw
3t3U72v0enxMYXF4Zwuh+H39d1ssNDB7tCttwCEfJl00Kw4XaGK7pWdAKeZA
+C9MqoGBFnZq87MSM/+AAZ3rVYUcHdzqnaR8LPQuNKpXFw4o6mJ/0+END6pu
w803Y8kNgXropmF6VeiUBm/rlYZ8F/WxbcNa+bYVtyCFMFyuGGOE6vMPXK0M
eKDa9FOCcMwY8waXWce1JoMm976TuTkZLdaq1folJ0H6diuldSdMsW/wUOGu
gHh4sYFqNnmNgrXpx+uphldgt0ZNklGHGbIjA/eNK12CzSvtPtQst0DfPvHn
omgO2MhCWDHDEovIPR3dq9igvkcUkJ1ghXm0xujK5xfAM4LsMSbZgRib3ltG
j4QPFTqxPJmdmO/fzBgfCoP+YXVBsvEuZOR1vt628Rwke8SZpbjtxvaTHfOk
+2fg4vD56bEMwDQDbd/NzNMQrE/uaWEhPusl5zd2BAGMercxV1NxlbbNfqnW
SaBrqzmu4VOxszti0++qvqB38UpYjYUN7shdaS8NZIE+y6pSp8cG/3H8tMLx
nSeceOLLKTltiyYKNU2lfx6D6sw273EVO4y5V+yadOEITOctzhiV2+HP4czI
6mVuwNIRrE51tMdQjQXzjB9dYFIvxbxYao9FA2EugYcPgiRr/v0Ul4ZReRms
CZIzuNtpofUmOqrfEP/NV3GCjYGXxIZVdIwxUIziujJgvXzAA0cXAieHTepP
GztAjm1UhJRJ4KZbx18aaDkAJSrBNsWdQFLuYqtUxQGcpML2ruME9gW0PL06
TwC3Y+qLVwCBfkJqp3I9AbP8CzYRvxGo73XgTvBRAnqsU1pzBAQyblTmmvHo
4Buale5QRKDcVD+1gUuH6aJS1ichgbrqJ3xYkXQgbemaMSkjcP/R53jfiw57
5TZqPK4isFFWoTeJTIeKthzv1nYCNe1RwG2hwR5FkcG5LgJt5+WdObU06KL/
Na3WS+BEzDgjVkyDz5IRrsc7AnNXV5pk3KWBwV3jex8+EugUGuamGkKDih7q
ubh/CZRok+3tfJZ6ygfASEpg02yCX5gbDXwuhbacnSLw6iNV50mbpV5VbOr6
WQITnUQ/7LCgAXvuppdkjsCthz5+id1OAyVKvv6RrwQG+Aas6fmRBrcDJVOL
iwQOvF2kmSrT4D/no2dd
          "]]}, Annotation[#, "Charting`Private`Tag$16336#1"]& ], {}}, {}}, {
      GraphicsComplexBox[CompressedData["
1:eJw1VHs0lAkcJUOLqR2xIczDpxQNYye1hN+vOGdV0iq2TU9TYUuKY3pIkhRy
ZCrl0ZF8n0fIsxlMRVKR17RYerCSMWu92oQyIdueU/ece+65/9577uUIDm/e
P0dFRWXTF/6vaeECDZt9cU5vSttFKSlSyGhIDxpi1cNib1eXVYukUFgU2xlg
9QpCVq/MGrhcAX7QkjIcLIf3TyOMluhXQKBimVxcOAAx9hfWcG+WgxYnyvz1
T+9gur97vIxTDhcZjRYZe8ZgRLvcWK+wDASdng/Umj6AZZfSehO/DIKeRAkO
m38Cof5hmnulBEqO0LcYrJsB+vC+ziMeEsg4eXCQt1UFq4flDzu6xRCZPu0x
PqyKZbqVv2kcFYNKWw/eD1XDlWe0Wlx0xLAkxPe4p4U6rphJTSKy70DfRNKv
2pUauKNPnmDjcgfWKw6cuhz0HfL5j7y5XaXg3ieyZDK1cPRvS98fj5fC4CNB
xNMCbSy+wbBuNS4FK50OE+fd83B2XneO5F4JaMGET9fYfJxl24f0C0rg5xHv
j6ZeDAwYXalJ0UrgRc0+Ve/lOjg/vnTj3LxikMQ83sWe0EHNtHW6/K3F4Ksu
7JHJFmBfYMjegM9FsDf4pISeqotz7IWyozuLwNrPUubmo4e83e2J92sK4dmC
5dpCux/wMunyPTIL4V5h5PXlagvxlGPdxlfRBXBS1eKXpr8WoiK8d+myf26D
Vleoa6BYH5/kvjyd534bFNmcxPQwA4w3HDmzqyYfEpca0qRehpiQUFi/npsP
olTfOh/2IpzhLvAYz8wD78SdMnr/InQYYvEUnDyYdMlSplcZof1QRHn0tVyQ
K9Yer4k2RkZP4A2mfi6QjjZGzT4mmPR5Urcp4RYUnBPq+HGZ2OS2mq6mdwui
vfZuUJtgYsUK2iAtLQdsuzJyo5tZaPDUiRvHzIHkZdcLmjew8XmxqlNfXjac
ro5P3iBlY1hcKN2Elw0bjbyyGsw4yAr1rDa8mwVrAuu268Ry8KikosrOPQvS
jQVmTRMclDNCE290ZoLZo5xr7ttN0YnS2tYUnAkibo1Fa5UpDptpMTTnZ4Lv
GK2l3oLASVK7rZ+kQFDynh2bQKCj5yrlOFJQNbZEOTtL4JUoXnJ3OwlzO3vN
R1hSmB3N8UveJgVRKz3+cR2B/Kl1Z5naFLRN+Se+Y+WCw7YdvVEnpKB8ONuR
nU9gFeXf+mExBeZyQ+deOYGMO80dB9+REOAoPPSRlQK2nR+tL8R+2Zedciop
jcA3tufNg/gUdHnr+re1ExgXph5WPUNC8EE2c3SUQOMYejxbTkJadTxLnR0L
VvyUNNElKcRMCC+KrhG4M8Wnx8aegrKFok+NMgLDr05vDqRR4GaeVjwwSOBQ
WL/GkwESkououMlJAssbDviHd5EwW1t1ls0+AUd8jtUmXpWCcIv4Of0KgRF/
PGBfcaSACpE5uzYSKHUdYtXOpcD+XKdyfz+BHnS6mcEICefm9f4ZMkGg3U0O
79lrEvI99q8NmybwdUuzrdVLEh63sd22sn+HyX9D9JOSpBAQuWV6/SUCTSo/
KJ2BglTqkP/5egLpUw1OwZoU8MShzEwFgXrJ5YMP35IQ5nBGWTpGoOfbt43H
3pBARtD87n4iUC4Jdeh4RYLYtNbE6TOBt1/s8Tz//Es+X/9M5Su+9fnN/wc3
X0nc
       "], {{{}, {
          RGBColor[0.9, 0.36, 0.054], 
          Opacity[0.3], 
          EdgeForm[None], 
          GraphicsGroupBox[
           
           PolygonBox[{{1, 78, 79, 50, 77, 70, 76, 64, 69, 75, 59, 63, 68, 74,
             55, 58, 62, 67, 73, 52, 54, 57, 61, 66, 72, 49, 48, 47, 46, 45, 
            44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 
            28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 
            12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 51, 53, 56, 60, 65, 
            71}}]]}, {}, {}}, {{}, {}, 
         TagBox[{
           RGBColor[0.9, 0.36, 0.054], 
           AbsoluteThickness[1.6], 
           Opacity[1.], 
           CapForm["Butt"], 
           
           LineBox[{1, 71, 65, 60, 56, 53, 51, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
             12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 
            28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 
            44, 45, 46, 47, 48, 49, 72, 66, 61, 57, 54, 52, 73, 67, 62, 58, 
            55, 74, 68, 63, 59, 75, 69, 64, 76, 70, 77, 50}]}, 
          Annotation[#, "Charting`Private`Tag$16458#1"]& ]}}], {}}}, 
    AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
    Axes -> {False, False}, AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
    DisplayFunction -> Identity, Frame -> {{True, True}, {True, True}}, 
    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> Automatic, 
    FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
    GridLines -> {{0}, {0}}, GridLinesStyle -> Directive[
      GrayLevel[0.5, 0.4]], ImagePadding -> All, 
    ImageSize -> {751.9999999999999, Automatic}, 
    LabelStyle -> {FontFamily -> "Times"}, 
    Method -> {
     "DefaultBoundaryStyle" -> Automatic, 
      "DefaultGraphicsInteraction" -> {
       "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
        "Effects" -> {
         "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
          "Droplines" -> {
           "freeformCursorMode" -> True, 
            "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
      "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None, 
      "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& )}}, PlotRange -> All, PlotRangeClipping -> True, 
    PlotRangePadding -> {{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.05], 
       Scaled[0.05]}}, Ticks -> {Automatic, Automatic}], 
   FormBox[
    FormBox[
     TagBox[
      GridBox[{{"\[Piecewise]", 
         GridBox[{{"0", 
            RowBox[{"x", "<", "0"}]}, {
            RowBox[{"0.1`", " ", 
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{
                 RowBox[{"-", "0.1`"}], " ", "x"}]]}], 
            RowBox[{"x", "\[GreaterEqual]", "0"}]}}, 
          ColumnAlignments -> {Left}, ColumnSpacings -> 1.2, ColumnWidths -> 
          Automatic, AllowedDimensions -> {2, Automatic}, Selectable -> True, 
          Editable -> True]}}, ColumnAlignments -> {Left}, ColumnSpacings -> 
       0.5, ColumnWidths -> Automatic], "Piecewise", SyntaxForm -> Equal, 
      SelectWithContents -> True, StripWrapperBoxes -> True, Selectable -> 
      False, Editable -> False, DeleteWithContents -> True], TraditionalForm],
     TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.855103295628013*^9, 3.855125002687412*^9},
 CellLabel->"Out[14]=",ExpressionUUID->"729add66-2782-4ac7-8e4e-df6e040090fe"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"4e2cfac5-8168-4f29-9f8d-9a8f81d08791"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Integrate", "[", 
  RowBox[{
   RowBox[{"0.1", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      RowBox[{"-", "0.1"}], " ", "x"}]]}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", 
     RowBox[{"+", "\[Infinity]"}]}], "}"}]}], "]"}]], "Input",
 CellMargins:>
  Dynamic[{{
    0.135 FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}], 0.02999999999999998 
     FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]}, {
    0.019728556521739132` FrontEnd`AbsoluteCurrentValue[{WindowSize, 2}], 
     0.11199100621118013` FrontEnd`AbsoluteCurrentValue[{WindowSize, 2}]}}],
 CellChangeTimes->{{3.825509794009761*^9, 3.825509834970644*^9}, {
   3.8255099144687285`*^9, 3.8255099262319264`*^9}, {3.825509957772401*^9, 
   3.825509962023799*^9}, 3.855027790882763*^9},
 CellLabel->"In[15]:=",ExpressionUUID->"62e9d491-d2fd-44ee-9bdb-c2d833d57942"],

Cell[BoxData["1.`"], "Output",
 CellChangeTimes->{{3.825509810020397*^9, 3.82550983736269*^9}, {
   3.825509945195574*^9, 3.825509967244547*^9}, 3.8550275209444532`*^9, 
   3.8550349973194265`*^9, 3.8550614377850924`*^9, 3.8551034735537777`*^9, 
   3.8551250227507668`*^9, 3.886755787046797*^9, 3.9205385080353394`*^9},
 CellLabel->"Out[15]=",ExpressionUUID->"49fad51f-02de-c445-857c-2c8c26f92db4"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"47fba31a-edda-4017-95f2-48c426074c48"],

Cell[CellGroupData[{

Cell["Integrate[0.1 E^(-0.1 x), {x, 0, +\[Infinity]}]", "WolframAlphaLong",
 CellChangeTimes->{{3.855027935077804*^9, 3.855027936097425*^9}},
 CellLabel->"In[16]:=",ExpressionUUID->"9a38ac9f-9d62-45d2-9a61-3834c184c052"],

Cell[BoxData[
 NamespaceBox["WolframAlphaQueryResults",
  DynamicModuleBox[{Typeset`q$$ = 
   "Integrate[0.1 E^(-0.1 x), {x, 0, +\[Infinity]}]", Typeset`opts$$ = {
   AppearanceElements -> {
     "Warnings", "Assumptions", "Brand", "Pods", "PodMenus", "Unsuccessful", 
      "Sources"}, Asynchronous -> All, 
    TimeConstraint -> {20, Automatic, Automatic, Automatic}, 
    Method -> {
     "Formats" -> {"cell", "minput", "msound", "dataformats"}, "Server" -> 
      "https://api.wolframalpha.com/v1/"}}, Typeset`elements$$ = {
   "Warnings", "Assumptions", "Brand", "Pods", "PodMenus", "Unsuccessful", 
    "Sources"}, Typeset`pod1$$ = XMLElement[
   "pod", {"title" -> "Definite integral", "scanner" -> "Integral", "id" -> 
     "Input", "position" -> "100", "error" -> "false", "numsubpods" -> "1", 
     "primary" -> "true"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement[
       "minput", {}, {"Integrate[1/(10 E^(x/10)), {x, 0, Plus[Infinity]}]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            RowBox[{
              TagBox[
               RowBox[{
                 SubsuperscriptBox["\[Integral]", "0", "\[Infinity]"], 
                 RowBox[{
                   TagBox[
                    TagBox[
                    RowBox[{"0.1`", " ", 
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{
                    RowBox[{"-", "0.1`"}], " ", "x"}]]}], Identity], 
                    PrecedenceForm[#, 400.]& ], 
                   RowBox[{"\[DifferentialD]", "x"}]}]}], HoldForm], 
              "\[LongEqual]", "1"}], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {"Graphics", FontFamily -> "Times"}, 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"], 
             DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,moutput,computabledata,formatteddata,formuladata"}]}\
], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  "}], 
     XMLElement["states", {"count" -> "1"}, {
       XMLElement[
       "state", {
        "name" -> "Step-by-step solution", "input" -> 
         "Input__Step-by-step solution", "stepbystep" -> "true", 
         "buttonstyle" -> "StepByStepSolution"}, {}]}]}], Typeset`pod2$$ = 
   XMLElement[
   "pod", {"title" -> "Indefinite integral", "scanner" -> "Integral", "id" -> 
     "IndefiniteIntegral", "position" -> "200", "error" -> "false", 
     "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["minput", {}, {"Integrate[1/(10 E^(x/10)), x]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            RowBox[{
              TagBox[
               RowBox[{"\[Integral]", 
                 RowBox[{
                   TagBox[
                    TagBox[
                    TagBox[
                    RowBox[{"0.1`", " ", 
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{
                    RowBox[{"-", "0.1`"}], " ", "x"}]]}], HoldForm], 
                    Identity], PrecedenceForm[#, 670.]& ], 
                   RowBox[{"\[DifferentialD]", "x"}]}]}], HoldForm], 
              "\[LongEqual]", 
              TagBox[
               StyleBox[
                RowBox[{
                  StyleBox[
                   RowBox[{"-", 
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"-", 
                    RowBox[{"x", "/", "10"}]}]]}], {
                    GrayLevel[0], LinebreakAdjustments -> {1, 100, 1, 0, 100},
                     LineIndent -> 0}], "+", 
                  StyleBox[
                  "\"constant\"", {
                   Magnification -> 0.9 Inherited, FontSize -> Inherited, 
                    FontFamily -> "Roboto", 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}], {
                 GrayLevel[0.6], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                 LineIndent -> 0}], Identity]}], TraditionalForm]], 
          "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {"Graphics", FontFamily -> "Times"}, 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"], 
             DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,moutput,computabledata,formatteddata,formuladata"}]}\
], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  "}], 
     XMLElement["states", {"count" -> "2"}, {
       XMLElement[
       "state", {
        "name" -> "Approximate form", "input" -> 
         "IndefiniteIntegral__Approximate form"}, {}], 
       XMLElement[
       "state", {
        "name" -> "Step-by-step solution", "input" -> 
         "IndefiniteIntegral__Step-by-step solution", "stepbystep" -> "true", 
         "buttonstyle" -> "StepByStepSolution"}, {}]}]}], Typeset`aux1$$ = {
   True, False, {False}, True}, Typeset`aux2$$ = {True, False, {False}, True},
    Typeset`asyncpods$$ = {}, Typeset`nonpods$$ = {}, Typeset`initdone$$ = 
   FrontEnd`SuppressEvaluationHash[True], Typeset`queryinfo$$ = {
   "success" -> "true", "error" -> 
    "false", {"http://www.w3.org/XML/1998/namespace", "space"} -> "preserve", 
    "numpods" -> "2", "datatypes" -> "", "timedout" -> "", "timedoutpods" -> 
    "", "timing" -> "0.6920000000000001", "parsetiming" -> 
    "0.47800000000000004", "parsetimedout" -> "false", "recalculate" -> "", 
    "id" -> "MSP348114d8bgf2f4cfgebb00005ii84940g6f76ih5", "host" -> 
    "https://www6b3.wolframalpha.com", "server" -> "11", "related" -> 
    "https://www6b3.wolframalpha.com/api/v1/relatedQueries.jsp?id=\
MSPa348214d8bgf2f4cfgebb000033i931e8192b67ge5481992349747128482", "version" -> 
    "2.6", "inputstring" -> 
    "Integrate[0.1 E^(-0.1 x), {x, 0, +\[Infinity]}]"}, 
   Typeset`sessioninfo$$ = {
   "TimeZone" -> 1., 
    "Date" -> {2024, 3, 27, 15, 28, 35.1731738`9.298786451710187}, "Line" -> 
    16, "SessionID" -> 25561287390183991170}, Typeset`showpods$$ = {1, 2}, 
   Typeset`failedpods$$ = {}, Typeset`chosen$$ = {}, Typeset`open$$ = False, 
   Typeset`newq$$ = "Integrate[0.1 E^(-0.1 x), {x, 0, +\[Infinity]}]"}, 
   DynamicBox[ToBoxes[
     AlphaIntegration`FormatAlphaResults[
      Dynamic[{
       1, {Typeset`pod1$$, Typeset`pod2$$}, {Typeset`aux1$$, Typeset`aux2$$}, 
        Typeset`chosen$$, Typeset`open$$, Typeset`elements$$, Typeset`q$$, 
        Typeset`opts$$, Typeset`nonpods$$, Typeset`queryinfo$$, 
        Typeset`sessioninfo$$, Typeset`showpods$$, Typeset`failedpods$$, 
        Typeset`newq$$}]], StandardForm],
    ImageSizeCache->{1371.6, {138.37670911052265`, 149.22329088947737`}},
    TrackedSymbols:>{Typeset`showpods$$, Typeset`failedpods$$}],
   DynamicModuleValues:>{},
   Initialization:>If[
     And[
      Not[Typeset`initdone$$ === True], 
      Not[Typeset`initdone$$ === FrontEnd`SuppressEvaluationHash[True]]], 
     Null; WolframAlphaClient`Private`doAsyncUpdates[
       Hold[{Typeset`pod1$$, Typeset`pod2$$}], Typeset`asyncpods$$, 
       Dynamic[Typeset`failedpods$$]]; Typeset`asyncpods$$ = {}; 
     Typeset`initdone$$ = FrontEnd`SuppressEvaluationHash[True]],
   SynchronousInitialization->False],
  BaseStyle->{Deployed -> True},
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True]], "Print", "WolframAlphaFullOutput",
 CellChangeTimes->{
  3.920538515227049*^9},ExpressionUUID->"19c1ba0c-e12d-bf4f-97d5-\
934c031ba010"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"54e6d8ff-f523-4cc6-a4b0-23da489838cc"],

Cell[BoxData[
 RowBox[{
  RowBox[{"g", "[", "x_", "]"}], ":=", 
  RowBox[{"Piecewise", "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"y", "=", "0"}], ",", 
       RowBox[{"x", "<", "10"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"y", "=", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"10", "-", "x"}], ")"}], 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"x", "-", "70"}], ")"}], "/", "36000"}]}], ")"}]}], ",", 
       RowBox[{"10", "\[LessSlantEqual]", "x", "\[LessSlantEqual]", "70"}]}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"y", "=", "0"}], ",", 
       RowBox[{"x", ">", "70"}]}], "}"}]}], "}"}], "]"}]}]], "Input",
 CellMargins:>
  Dynamic[{{
    0.135 FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}], 0.03 
     FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]}, {
    0.01972855652173913 FrontEnd`AbsoluteCurrentValue[{WindowSize, 2}], 
     0.13699100621118013` FrontEnd`AbsoluteCurrentValue[{WindowSize, 2}]}}],
 CellChangeTimes->{{3.8550280522952023`*^9, 3.8550280981628833`*^9}, {
   3.855028268832023*^9, 3.85502827440546*^9}, 3.855035043220417*^9},
 CellLabel->"In[17]:=",ExpressionUUID->"1944a964-b243-4519-a17d-bd6fe2563a05"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"g", "[", "x", "]"}]], "Input",
 CellChangeTimes->{{3.8550280647094107`*^9, 3.855028068030586*^9}, 
   3.8550350460218124`*^9},
 CellLabel->"In[18]:=",ExpressionUUID->"00f36fb5-2e30-4e0d-85d9-9ec9a722635d"],

Cell[BoxData[
 TagBox[GridBox[{
    {"\[Piecewise]", GridBox[{
       {"0", 
        RowBox[{"x", "<", "10"}]},
       {
        FractionBox[
         RowBox[{
          RowBox[{"(", 
           RowBox[{"10", "-", "x"}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "70"}], "+", "x"}], ")"}]}], "36000"], 
        RowBox[{"10", "\[LessEqual]", "x", "\[LessEqual]", "70"}]},
       {"0", 
        TagBox["True",
         "PiecewiseDefault",
         AutoDelete->True]}
      },
      AllowedDimensions->{2, Automatic},
      Editable->True,
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.84]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}},
      Selectable->True]}
   },
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[0.35]}, 
       Offset[0.27999999999999997`]}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}}],
  "Piecewise",
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True,
  Selectable->False,
  StripWrapperBoxes->True]], "Output",
 CellChangeTimes->{{3.8550280687259817`*^9, 3.8550281003652825`*^9}, 
   3.8550282769734573`*^9, 3.855028906024563*^9, {3.8550350364401364`*^9, 
   3.8550350465210423`*^9}, 3.855061483042534*^9, 3.8551035663220453`*^9, 
   3.855125047956118*^9, 3.8553062439346437`*^9, 3.9205389251801624`*^9},
 CellLabel->"Out[18]=",ExpressionUUID->"cbb4d523-8847-b240-9103-90cf108c6d91"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"d8b19bc6-3b8f-4a51-8124-bd3de62c7b7e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{" ", 
  RowBox[{"Legended", "[", 
   RowBox[{
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{"Evaluate", "[", 
       RowBox[{"g", "[", "x", "]"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"x", ",", "0", ",", "80"}], "}"}], ",", 
      RowBox[{"PlotTheme", "\[Rule]", "\"\<Scientific\>\""}], ",", 
      RowBox[{"Filling", "\[Rule]", "Axis"}]}], "]"}], ",", " ", 
    RowBox[{"g", "[", "x", "]"}]}], "]"}]}]], "Input",
 CellMargins:>
  Dynamic[{{
    0.135 FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}], 0.03 
     FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]}, {
    0.01940299985611511 FrontEnd`AbsoluteCurrentValue[{WindowSize, 2}], 
     0.11138058807810894` FrontEnd`AbsoluteCurrentValue[{WindowSize, 2}]}}],
 CellChangeTimes->{{3.8255069771278596`*^9, 3.8255070312329845`*^9}, {
  3.825507087402967*^9, 3.8255071351665573`*^9}, {3.855028117996928*^9, 
  3.855028156801088*^9}, {3.855028192779683*^9, 3.855028230678008*^9}, {
  3.8550350514448733`*^9, 3.8550350556548023`*^9}},
 CellLabel->"In[14]:=",ExpressionUUID->"6419046d-6bd5-46b3-aa8e-e0b47eb61d7f"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{
     GraphicsComplexBox[CompressedData["
1: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

      "], {{{}, {
         RGBColor[0.9, 0.36, 0.054], 
         Opacity[0.3], 
         EdgeForm[None], 
         GraphicsGroupBox[
          PolygonBox[CompressedData["
1:eJwl01WIVFEcwOFRjHVdu9Z27QADXTsf7F6wA1y7VuzADrBbsAM7sH2wW7AD
O7AV2we7v4MP3/7OOXOZuXP/O3GJAxKSkkcikWSk9CdKa2hNXloX1Cn6juLW
2/QBsdaddTdPyWc/StdwjXT2dXQCm7hDVmcJmsQizoTPdVZKS1IifAbFKEoR
ClMo3AdxFKA2LenPQk5H/n+B/FKLFvRjAaf4G+6PmjSnL/M5yR/y0omRrOYq
Md6vhjajD/M4wW/y0JERrOIKaV1fXcezkdtkcdZUezOX4/wiN5PZyn1yuK6D
Dmcll4l2Vk3HsYFbZHbWRHfwKLyPfS+dwzF+kot9vAjPy+uT9G14ptZb9B7Z
rdvrh/DcrXdpWX0SnoUO0/L6OsxAV2hpvaRptKrG60ctpXu0nD7T/DpWK+ib
MEddr2X0pmbSxvo+zNt6uz4M923dU1+FmVvP1qP8ICd7eR7m77WJupm7ZLNv
pzt5HGZjP1SXc5Eo+yo6hnXcIKOzRtqDWRzhO7G0ZQjLuEBq11bW0azlOhmc
NdTuzOQw38IcacNglnKeVK6tpA3oxgwO8TXMgdYMYgnnIv9/gxW1Pl2ZzkG+
hO9KKwaymLOkcH281iORaRzgM1nDHKhLF6ayn09kCf9PYR7heYTvRHrSEUNa
osO8+QcTV3TX
           "]]]}, {}, {}}, {{}, {}, 
        TagBox[{
          RGBColor[0.9, 0.36, 0.054], 
          AbsoluteThickness[1.6], 
          Opacity[1.], 
          CapForm["Butt"], 
          LineBox[{1, 243, 184, 135, 96, 68, 51, 2, 3, 4, 5, 6, 7, 311}], 
          LineBox[CompressedData["
1:eJwV0lVollEcwOGJNRfWps52doCB3Xph98AOcHZN7MAOsFuwAzuwvbBbsAM7
sBXbC7ufc/Hsd97zHd7v/d7/EpMHJqWkioiISO1PpGYgimhiiCUjmchMFrIS
x2cOMI2u1KMC8XzhINNJpj4VSeN7zukSBtGabHzlEDPoRgMqkdb587qUwbQh
O984zEy605DKpHP+gi5jCG3JwXeOMIseNAq/ydkbuo4xVCG9vYu6nKG0I4Ef
HGU2PWkc3oezN3U9Y6lKpL1LuoJh5HH9RHfRPvxW1/d0C5Mo4PqF7iMnPznG
HAr77LX2Ipf1I91BCesP2iTMw/qWltENWlTfhjnoOM2vz7Wc7tVS+inMQquF
eetlLa0rtYi+0fI6XPPqUy2ru7WkftQOYQ7W93Urxazf6WQSrV/q/vDc/OI4
c+lNbp8/1p00Df9Prm/rRsZTnSh7V3QVI+gY5mjvgW5jSrgPvznBPPrQjDjn
7ugmJlCDaHtXdTUj6RRmwx9OMp++NKcmMc5f0zWMonN4F/zlFAvoRwtqkY9/
nGYh/WlJ7TADItzvjCxiAK2oE+Yf3hcFKRRmHmYQ5hjeKcXDvMN7D7MLt3Gf
s7qYFJKIt3dXNzORusTau65rGR2ez/Uz3UMXElw/1O3hO6zf69TwHNav9D8u
A3RW
           "]], 
          
          LineBox[{182, 300, 241, 44, 258, 199, 150, 111, 83, 66, 45, 46, 47, 
           48, 49, 259, 200, 151, 112, 84, 67, 270, 211, 162, 123, 95, 281, 
           222, 173, 134, 291, 232, 183, 301, 242, 310, 50}]}, 
         Annotation[#, "Charting`Private`Tag$15137#1"]& ], {
         RGBColor[0.9, 0.36, 0.054], 
         Opacity[0.3], 
         LineBox[{313, 315, 312}], 
         LineBox[{314, 316, 306}]}}}], {}}, AspectRatio -> 
    NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False}, 
    AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction -> 
    Identity, Frame -> {{True, True}, {True, True}}, 
    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> Automatic, 
    FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
    GridLines -> {{0}, {0}}, GridLinesStyle -> Directive[
      GrayLevel[0.5, 0.4]], ImagePadding -> All, 
    ImageSize -> {658.6666666666672, Automatic}, 
    LabelStyle -> {FontFamily -> "Times"}, 
    Method -> {
     "DefaultBoundaryStyle" -> Automatic, 
      "DefaultGraphicsInteraction" -> {
       "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
        "Effects" -> {
         "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
          "Droplines" -> {
           "freeformCursorMode" -> True, 
            "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
      "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None, 
      "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& )}, "AxesInFront" -> True}, 
    PlotRange -> {{0, 80}, {0., 0.02499999894691868}}, PlotRangeClipping -> 
    True, PlotRangePadding -> {{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.05], 
       Scaled[0.05]}}, Ticks -> {Automatic, Automatic}], 
   FormBox[
    FormBox[
     TagBox[
      GridBox[{{"\[Piecewise]", 
         GridBox[{{"0", 
            RowBox[{"x", "<", "10"}]}, {
            FractionBox[
             RowBox[{
               RowBox[{"(", 
                 RowBox[{"10", "-", "x"}], ")"}], " ", 
               RowBox[{"(", 
                 RowBox[{"x", "-", "70"}], ")"}]}], "36000"], 
            RowBox[{"10", "\[LessEqual]", "x", "\[LessEqual]", "70"}]}}, 
          ColumnAlignments -> {Left}, ColumnSpacings -> 1.2, ColumnWidths -> 
          Automatic, AllowedDimensions -> {2, Automatic}, Selectable -> True, 
          Editable -> True]}}, ColumnAlignments -> {Left}, ColumnSpacings -> 
       0.5, ColumnWidths -> Automatic], "Piecewise", SyntaxForm -> Equal, 
      SelectWithContents -> True, StripWrapperBoxes -> True, Selectable -> 
      False, Editable -> False, DeleteWithContents -> True], TraditionalForm],
     TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.825507145933681*^9, {3.855028132474786*^9, 3.85502815767169*^9}, {
   3.855028217040043*^9, 3.855028231362522*^9}, 3.8550282806754475`*^9, 
   3.85503505631793*^9, 3.85510357642553*^9, 3.855125052107328*^9, 
   3.855306257499089*^9},
 CellLabel->"Out[14]=",ExpressionUUID->"064e2fb7-88eb-47de-86e7-8e586de936d0"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"4e12bead-708e-41f3-967b-382a078ff0db"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Integrate", "[", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"10", "-", "x"}], ")"}], 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"x", "-", "70"}], ")"}], "/", "36000"}]}], ")"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "10", ",", "70"}], "}"}]}], "]"}]], "Input",
 CellMargins:>
  Dynamic[{{
    0.135 FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}], 0.03 
     FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]}, {
    0.01972855652173913 FrontEnd`AbsoluteCurrentValue[{WindowSize, 2}], 
     0.11199100621118013` FrontEnd`AbsoluteCurrentValue[{WindowSize, 2}]}}],
 CellChangeTimes->{{3.8255072991708393`*^9, 3.825507348676916*^9}},
 CellLabel->"In[19]:=",ExpressionUUID->"bb6493a8-0826-4f8a-bb28-cae0058099c4"],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{3.8255073507151794`*^9, 3.8550350659797397`*^9, 
  3.855103582035192*^9, 3.855125055012309*^9, 3.8553062877689342`*^9, 
  3.9205389686097927`*^9},
 CellLabel->"Out[19]=",ExpressionUUID->"90c06f86-1b98-8548-b257-c81f924efba5"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"c38477b6-e633-483c-8492-1d237b85e72f"],

Cell["Integrate[((10-x)(x-70)/36000), {x, 10, 70}] ", "WolframAlphaLong",
 CellMargins:>
  Dynamic[{{
    0.135 FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}], 0.03 
     FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]}, {
    0.01940299985611511 FrontEnd`AbsoluteCurrentValue[{WindowSize, 2}], 
     0.08638058807810894 FrontEnd`AbsoluteCurrentValue[{WindowSize, 2}]}}],
 CellChangeTimes->{{3.85502835516813*^9, 3.855028408707991*^9}},
 CellLabel->"In[21]:=",ExpressionUUID->"1d2ef7d4-a872-4dda-b4a5-6e59958e1c6e"]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"49bea496-b4d4-42dc-bfe5-5ed1f6d2460d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Integrate", "[", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"10", "-", "x"}], ")"}], 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"x", "-", "70"}], ")"}], "/", "36000"}]}], ")"}], ",", "x"}], 
  "]"}]], "Input",
 CellMargins:>
  Dynamic[{{
    0.135 FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}], 0.03 
     FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]}, {
    0.01940299985611511 FrontEnd`AbsoluteCurrentValue[{WindowSize, 2}], 
     0.08638058807810894 FrontEnd`AbsoluteCurrentValue[{WindowSize, 2}]}}],
 CellChangeTimes->{{3.8255079250572357`*^9, 3.825507942892828*^9}, {
  3.825507975999755*^9, 3.825507977267576*^9}},
 CellLabel->"In[16]:=",ExpressionUUID->"c8aeb071-7b1e-41ad-ad3c-202e46c50488"],

Cell[BoxData[
 FractionBox[
  RowBox[{
   RowBox[{
    RowBox[{"-", "700"}], " ", "x"}], "+", 
   RowBox[{"40", " ", 
    SuperscriptBox["x", "2"]}], "-", 
   FractionBox[
    SuperscriptBox["x", "3"], "3"]}], "36000"]], "Output",
 CellChangeTimes->{{3.825507935942883*^9, 3.825507943919834*^9}, 
   3.82550797887053*^9, 3.855103611677405*^9, 3.855125088058638*^9, 
   3.855306774560244*^9},
 CellLabel->"Out[16]=",ExpressionUUID->"bc2f4684-1333-46b2-be97-5a67fbde1d5f"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"88b5b411-a99c-42e0-a19a-8a19fdc12bfa"],

Cell["Integrate[((10 - x) (x - 70)/36000)]", "WolframAlphaLong",
 CellMargins:>
  Dynamic[{{
    0.135 FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}], 0.03 
     FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]}, {
    0.01940299985611511 FrontEnd`AbsoluteCurrentValue[{WindowSize, 2}], 
     0.08638058807810894 FrontEnd`AbsoluteCurrentValue[{WindowSize, 2}]}}],
 CellChangeTimes->{{3.8550285403876257`*^9, 3.855028541786872*^9}},
 CellLabel->"In[23]:=",ExpressionUUID->"060c14d1-aebf-41ad-9241-94a7502dce33"]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"9b6da5ab-6d38-41e9-b7a5-c3fc6108076e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"pdf", "=", 
  RowBox[{"Piecewise", "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"y", "=", "0"}], ",", 
       RowBox[{"x", "<", "10"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"y", "=", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"10", "-", "x"}], ")"}], 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"x", "-", "70"}], ")"}], "/", "36000"}]}], ")"}]}], ",", 
       RowBox[{"10", "\[LessSlantEqual]", "x", "\[LessSlantEqual]", "70"}]}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"y", "=", "0"}], ",", 
       RowBox[{"10", ">", "x", ">", "70"}]}], "}"}]}], "}"}], 
   "]"}]}]], "Input",
 CellMargins:>
  Dynamic[{{
    0.135 FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}], 0.03 
     FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]}, {
    0.01972855652173913 FrontEnd`AbsoluteCurrentValue[{WindowSize, 2}], 
     0.11199100621118013` FrontEnd`AbsoluteCurrentValue[{WindowSize, 2}]}}],
 CellChangeTimes->{{3.8255079997069874`*^9, 3.825508049487169*^9}, {
  3.8255082214918537`*^9, 3.82550822196824*^9}, {3.855028856658826*^9, 
  3.855028860325727*^9}, {3.855035098988644*^9, 3.8550350994347506`*^9}},
 CellLabel->"In[20]:=",ExpressionUUID->"748b8cca-7416-4643-b5b3-d49d35ed5320"],

Cell[BoxData[
 TagBox[GridBox[{
    {"\[Piecewise]", GridBox[{
       {"0", 
        RowBox[{"x", "<", "10"}]},
       {
        FractionBox[
         RowBox[{
          RowBox[{"(", 
           RowBox[{"10", "-", "x"}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "70"}], "+", "x"}], ")"}]}], "36000"], 
        RowBox[{"10", "\[LessEqual]", "x", "\[LessEqual]", "70"}]},
       {"0", 
        TagBox["True",
         "PiecewiseDefault",
         AutoDelete->True]}
      },
      AllowedDimensions->{2, Automatic},
      Editable->True,
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.84]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}},
      Selectable->True]}
   },
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[0.35]}, 
       Offset[0.27999999999999997`]}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}}],
  "Piecewise",
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True,
  Selectable->False,
  StripWrapperBoxes->True]], "Output",
 CellChangeTimes->{
  3.8255080506998158`*^9, 3.825508225284826*^9, 3.855028636945728*^9, 
   3.8550288609936*^9, {3.85503509165746*^9, 3.855035103828967*^9}, 
   3.855061560031014*^9, 3.8551036449491944`*^9, 3.8551251163750153`*^9, 
   3.855307406858881*^9, 3.8553344238473206`*^9, 3.9205394238818054`*^9},
 CellLabel->"Out[20]=",ExpressionUUID->"2d5b4002-3a49-c143-83cc-23290198edc2"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"cdf", "=", 
  RowBox[{"Integrate", "[", 
   RowBox[{"pdf", ",", "x"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.82550803158022*^9, 3.8255080435722084`*^9}, {
  3.82550809263175*^9, 3.825508092937821*^9}, {3.825508233387031*^9, 
  3.8255082338182096`*^9}, {3.855028650724014*^9, 3.8550286598483067`*^9}},
 CellLabel->"In[21]:=",ExpressionUUID->"0664a061-c88e-4067-a776-33ec3ef112a8"],

Cell[BoxData[
 TagBox[GridBox[{
    {"\[Piecewise]", GridBox[{
       {"0", 
        RowBox[{"x", "\[LessEqual]", "10"}]},
       {
        RowBox[{
         FractionBox["5", "54"], "+", 
         FractionBox[
          RowBox[{
           RowBox[{
            RowBox[{"-", "700"}], " ", "x"}], "+", 
           RowBox[{"40", " ", 
            SuperscriptBox["x", "2"]}], "-", 
           FractionBox[
            SuperscriptBox["x", "3"], "3"]}], "36000"]}], 
        RowBox[{"10", "<", "x", "\[LessEqual]", "70"}]},
       {"1", 
        TagBox["True",
         "PiecewiseDefault",
         AutoDelete->True]}
      },
      AllowedDimensions->{2, Automatic},
      Editable->True,
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.84]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}},
      Selectable->True]}
   },
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[0.35]}, 
       Offset[0.27999999999999997`]}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}}],
  "Piecewise",
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True,
  Selectable->False,
  StripWrapperBoxes->True]], "Output",
 CellChangeTimes->{
  3.825508055550562*^9, 3.825508094004087*^9, 3.825508234954955*^9, 
   3.855028660412708*^9, 3.855028873697703*^9, {3.855035096314864*^9, 
   3.855035105698601*^9}, 3.855061562315428*^9, 3.855103647014224*^9, 
   3.855125119571939*^9, 3.8553074201177197`*^9, 3.855334428245018*^9, 
   3.9205394427114906`*^9},
 CellLabel->"Out[21]=",ExpressionUUID->"46db339a-eb78-064d-88b7-5a9d6e4a49c0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PiecewiseExpand", "[", "pdf", "]"}]], "Input",
 CellChangeTimes->{{3.8551251294613323`*^9, 3.855125137715825*^9}},
 CellLabel->"In[19]:=",ExpressionUUID->"8c366e56-5db7-485f-93b8-6de855af9a38"],

Cell[BoxData[
 TagBox[GridBox[{
    {"\[Piecewise]", GridBox[{
       {
        RowBox[{"-", 
         FractionBox[
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "70"}], "+", "x"}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "10"}], "+", "x"}], ")"}]}], "36000"]}], 
        RowBox[{"10", "\[LessEqual]", "x", "\[LessEqual]", "70"}]},
       {"0", 
        TagBox["True",
         "PiecewiseDefault",
         AutoDelete->True]}
      },
      AllowedDimensions->{2, Automatic},
      Editable->True,
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.84]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}},
      Selectable->True]}
   },
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[0.35]}, 
       Offset[0.27999999999999997`]}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}}],
  "Piecewise",
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True,
  Selectable->False,
  StripWrapperBoxes->True]], "Output",
 CellChangeTimes->{3.8551251390732546`*^9, 3.855307424015511*^9},
 CellLabel->"Out[19]=",ExpressionUUID->"fc997ac8-02e5-4170-9e63-3ac555bc959f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PiecewiseExpand", "[", "cdf", "]"}]], "Input",
 CellChangeTimes->{{3.825508239502762*^9, 3.825508239834099*^9}},
 NumberMarks->False,
 CellLabel->"In[20]:=",ExpressionUUID->"ed8b3baa-e6c5-4c35-8ba2-36b51413080f"],

Cell[BoxData[
 TagBox[GridBox[{
    {"\[Piecewise]", GridBox[{
       {"1", 
        RowBox[{"x", ">", "70"}]},
       {
        FractionBox[
         RowBox[{"10000", "-", 
          RowBox[{"2100", " ", "x"}], "+", 
          RowBox[{"120", " ", 
           SuperscriptBox["x", "2"]}], "-", 
          SuperscriptBox["x", "3"]}], "108000"], 
        RowBox[{"10", "<", "x", "\[LessEqual]", "70"}]},
       {"0", 
        TagBox["True",
         "PiecewiseDefault",
         AutoDelete->True]}
      },
      AllowedDimensions->{2, Automatic},
      Editable->True,
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.84]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}},
      Selectable->True]}
   },
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[0.35]}, 
       Offset[0.27999999999999997`]}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}}],
  "Piecewise",
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True,
  Selectable->False,
  StripWrapperBoxes->True]], "Output",
 CellChangeTimes->{3.825508098250884*^9, 3.8255082409163446`*^9, 
  3.855028672543524*^9, 3.855035112891825*^9, 3.855061565511553*^9, 
  3.8551036495361347`*^9, 3.855125122137381*^9, 3.855307429501254*^9},
 CellLabel->"Out[20]=",ExpressionUUID->"bc91dd0f-cc9a-47b1-b6a5-bf4d5d9cac07"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"c31c1659-e630-4bd0-bd70-663d6410795f"],

Cell["(-700 x + 40 x^2 - x^3/3)/36000 when x=10", "WolframAlphaLong",
 CellMargins:>
  Dynamic[{{
    0.135 FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}], 0.03 
     FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]}, {
    0.01940299985611511 FrontEnd`AbsoluteCurrentValue[{WindowSize, 2}], 
     0.11138058807810894` FrontEnd`AbsoluteCurrentValue[{WindowSize, 2}]}}],
 CellChangeTimes->{{3.8550287424272485`*^9, 3.8550287429972177`*^9}},
 CellLabel->"In[28]:=",ExpressionUUID->"8f374b52-49e4-439c-89f6-4b8eda992d03"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ReplaceAll", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "700"}], " ", "x"}], "+", 
      RowBox[{"40", " ", 
       RowBox[{"x", "^", "2"}]}], "-", 
      RowBox[{
       RowBox[{"x", "^", "3"}], "/", "3"}]}], ")"}], "/", "36000"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", "10"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{3.825561708461409*^9},
 CellLabel->"In[29]:=",ExpressionUUID->"30c32606-b788-4cff-a480-221316d01380"],

Cell[BoxData[
 RowBox[{"-", 
  FractionBox["5", "54"]}]], "Output",
 CellChangeTimes->{3.8255617106111097`*^9, 3.855103673182818*^9, 
  3.8551251520578766`*^9},
 CellLabel->"Out[29]=",ExpressionUUID->"739d32f3-9bf5-4da7-8374-e89c5f60b6f1"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"675c582b-90bc-419f-83d1-2b0f42d40a7f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"pdf1", "=", 
  RowBox[{"Plot", "[", 
   RowBox[{"pdf", ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "0", ",", "80"}], "}"}], ",", 
    RowBox[{"PlotTheme", "\[Rule]", "\"\<Detailed\>\""}], ",", 
    RowBox[{"Filling", "\[Rule]", "Axis"}], ",", 
    RowBox[{"ImageSize", "\[Rule]", "Small"}]}], "]"}]}]], "Input",
 CellMargins:>
  Dynamic[{{
    0.135 FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}], 0.03 
     FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]}, {
    0.01972855652173913 FrontEnd`AbsoluteCurrentValue[{WindowSize, 2}], 
     0.11199100621118013` FrontEnd`AbsoluteCurrentValue[{WindowSize, 2}]}}],
 CellChangeTimes->{{3.855028977529502*^9, 3.8550289918771963`*^9}, 
   3.855029022141139*^9, {3.8550353064256*^9, 3.8550353132323847`*^9}, {
   3.8550355522773495`*^9, 3.855035557381978*^9}, 3.8550356122215724`*^9},
 CellLabel->"In[6]:=",ExpressionUUID->"f464ac58-28c5-468f-a320-f446342db279"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{
     GraphicsComplexBox[CompressedData["
1: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
aqAsng==
      "], {{{}, {
         EdgeForm[], 
         Directive[
          RGBColor[0.368417, 0.506779, 0.709798], 
          Opacity[0.2]], 
         GraphicsGroupBox[{
           PolygonBox[CompressedData["
1:eJwl01WI1EEAwOFV1DPOPONszw6wz84HuwU7wO4TO7AD7BbswA5sH+wW7MAO
bMX2we5vuIfvfjOzw+5/Z27jug5smZA0EokkIbk/UVpWX2l+narvKWq8XR8S
a9xZ9/CMPOajdS3XSWteWyeymbtkttZSE1jM2fCZ1kpocYqFz6AIhSlEQQqE
5yCOfNSiBQNYxJlI4sPnlZo0pz8LOc2/8HzUoBn9WMAp/pKbToxiDdeI9n7V
tSl9mc9J/pCLjoxkNVdJY381ncAm7hBjrYn2YR4n+E1OprCNB2Szr4OOYBVX
SG2tqo5nI7fJZK2x7uRxeB/z3jqX4/wiB/t5Gc7L65P1XThT4616n6zG7fVj
OHfj3Vpan4az0OFaTt+EO9CVWlIvayqtovH6SUvoXi2jzzWvjtPy+jbco27Q
UnpLM2oj/RDu23iHPgrPbdxLX4c7N56jx/hJdvbxIty/1ybpFu6Rxbyd7uJJ
uBvzYbqCS6Q0r6xjWc9NMlhrqD2ZzVF+EEtbhrKci0TZW0nHsI4bpLfWQHsw
iyN8D/dIG4awjAuksLei1qc7MznMt3APtGYwSzkfSfz9VdB6dGMGh/gaviut
GMQSzpHM/nitS1emc5AvZA73QB26MI0DfCYm/D+F+wjnEb4T6UhLNGlIHe47
nCH/Aa4YdJQ=
            "]]}]}, {}, {}}, {{}, {}, 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwl1GW4FVUYgNELKEi3NHgNWkpCaRRULEpClBCVkjToTkmLkFBRWtICVBrB
AClRkFJJCenu9T38WPfds888c2b2nnMTW3Ss2yFJQkJCWX+iZ1nCUJpTnYdI
SjLu4E6Sk4K7SEkqUpOGtKQjPRnISCYyc47veIeXqUFpsnCe7xlGCx6nTHyn
G/tFP6Iz9cnKBX5gOK/wRDxH3J/zf9UJvEED7uYiSxnBqzxJuXgW56/XibxJ
Q7JxiWWM5DVqxjM5d5tOpRcPxzqY26CTeItGZOcyyxlFS56K9XDuHzqN3jwS
a2juN53M2+R2/K8u5IV4Vsc7dTYDuMfxQf2GHFxhBaO532dHtBU5jf/W+RQy
PqFPx34Y/6nFdbrm12OxD9pH8+kBLalfaxE9FXuh5WO/daMW04/1AT0a74l2
0Ty6T0vol1pYT2rj2AfjXfoFBYyP60ASjQ/pt3HfXGUl79KaXD7/RxfwTLxP
jrfrDPpSgVTmNukndOXF2Edzu3UOg+I6XGMV79GGZ8nsvB06k35UJLW5zfop
3Xgp9obrrOZ92vIclUjj/C06he40ibXgBmv4gNepRWXycpMf+ZB21KZK7AHx
g1wrY2hPHarG/sd6cS/3xZ7HHsQ+xppSMPY71j32Li7jOut0LB2oSxZzf+ks
+lONtOa26mf0iPtzvF+/oinZHe/RufEdxv/r4LgP48NaShdpUT0dJanxTzqO
jtTjUR6M94fi8Z5QkmTO/VnH04nneYx05n/Xz+lJM3KY26vzGBLr4Pg/XRzX
Nj6TcPt/Wim9BTOQh28=
           "]]}, Annotation[#, "Charting`Private`Tag$10442#1"]& ]}}], {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {Automatic, Automatic}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> Automatic, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {Automatic, Automatic}, GridLinesStyle -> Directive[
       GrayLevel[0.4, 0.5], 
       AbsoluteThickness[1], 
       AbsoluteDashing[{1, 2}]], ImageSize -> Small, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}, "AxesInFront" -> True}, 
     PlotRange -> {{0, 80}, {0., 0.02499999894691868}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{"pdf"}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{"Directive", "[", 
               RowBox[{
                 RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                 
                 TemplateBox[<|
                  "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                  "RGBColorSwatchTemplate"], ",", 
                 RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
             "}"}], ",", 
           RowBox[{"{", 
             TagBox[#, HoldForm], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.8550290721411247`*^9, {3.855035310081503*^9, 3.855035313794115*^9}, 
   3.855035613082056*^9, 3.855103684710027*^9, 3.8551251557623315`*^9, 
   3.8553074425747385`*^9, 3.855334460811931*^9},
 CellLabel->"Out[6]=",ExpressionUUID->"28f28756-289d-4ee9-824b-7dffeb630e76"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"cdf1", "=", 
  RowBox[{"Plot", "[", 
   RowBox[{"cdf", ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "0", ",", "80"}], "}"}], ",", 
    RowBox[{"PlotTheme", "\[Rule]", "\"\<Detailed\>\""}], ",", 
    RowBox[{"ImageSize", "\[Rule]", "Small"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8255081572365675`*^9, 3.8255082051498327`*^9}, {
   3.825508245506616*^9, 3.825508245833623*^9}, {3.855028995855855*^9, 
   3.855028996131098*^9}, {3.855035318579115*^9, 3.855035321250171*^9}, {
   3.8550355918330846`*^9, 3.8550356003320847`*^9}, 3.855307466175375*^9},
 CellLabel->"In[7]:=",ExpressionUUID->"1e302b00-941b-456a-8a7c-77d90dad5fd2"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
c4cWFc+5YFhkYmZmzv8Dc1Zo9A==
          "]]}, Annotation[#, "Charting`Private`Tag$10918#1"]& ]}}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {Automatic, Automatic}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> Automatic, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {Automatic, Automatic}, GridLinesStyle -> Directive[
       GrayLevel[0.4, 0.5], 
       AbsoluteThickness[1], 
       AbsoluteDashing[{1, 2}]], ImageSize -> Small, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotRange -> {{0, 80}, {0., 1.}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{"cdf"}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{"Directive", "[", 
               RowBox[{
                 RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                 
                 TemplateBox[<|
                  "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                  "RGBColorSwatchTemplate"], ",", 
                 RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
             "}"}], ",", 
           RowBox[{"{", 
             TagBox[#, HoldForm], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.825508164476486*^9, 3.82550817700664*^9}, 
   3.825508209053738*^9, 3.8255082468252316`*^9, 3.855028996879506*^9, 
   3.855035321900134*^9, 3.855035601567681*^9, 3.8551036880352564`*^9, 
   3.8551251580233736`*^9, 3.855307467462198*^9, 3.855334462722148*^9},
 CellLabel->"Out[7]=",ExpressionUUID->"9aae3286-f10a-4430-82d6-e10fbc20800d"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"a9b0651e-bc4a-4c4d-81b2-770de0705fe9"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"GraphicsColumn", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"pdf1", ",", "cdf1"}], "}"}], ",", 
   RowBox[{"Spacings", "\[Rule]", "1"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.855035279650546*^9, 3.855035288245169*^9}, {
  3.855035327851324*^9, 3.855035340498054*^9}, {3.8550353795750165`*^9, 
  3.855035380375837*^9}, {3.855035423092072*^9, 3.8550354251030416`*^9}, {
  3.855035810081801*^9, 3.855035838570094*^9}, {3.85510370082032*^9, 
  3.8551037548420486`*^9}, {3.855334397366648*^9, 3.85533445326862*^9}},
 CellLabel->"In[8]:=",ExpressionUUID->"c1746005-b66d-43cf-8c20-6a4bd86984ee"],

Cell[BoxData[
 GraphicsBox[{{}, {InsetBox[
     TemplateBox[{
       GraphicsBox[{
         GraphicsComplexBox[CompressedData["
1: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
aqAsng==
          "], {{{}, {
             EdgeForm[], 
             Directive[
              RGBColor[0.368417, 0.506779, 0.709798], 
              Opacity[0.2]], 
             GraphicsGroupBox[{
               PolygonBox[CompressedData["
1:eJwl01WI1EEAwOFV1DPOPONszw6wz84HuwU7wO4TO7AD7BbswA5sH+wW7MAO
bMX2we5vuIfvfjOzw+5/Z27jug5smZA0EokkIbk/UVpWX2l+narvKWq8XR8S
a9xZ9/CMPOajdS3XSWteWyeymbtkttZSE1jM2fCZ1kpocYqFz6AIhSlEQQqE
5yCOfNSiBQNYxJlI4sPnlZo0pz8LOc2/8HzUoBn9WMAp/pKbToxiDdeI9n7V
tSl9mc9J/pCLjoxkNVdJY381ncAm7hBjrYn2YR4n+E1OprCNB2Szr4OOYBVX
SG2tqo5nI7fJZK2x7uRxeB/z3jqX4/wiB/t5Gc7L65P1XThT4616n6zG7fVj
OHfj3Vpan4az0OFaTt+EO9CVWlIvayqtovH6SUvoXi2jzzWvjtPy+jbco27Q
UnpLM2oj/RDu23iHPgrPbdxLX4c7N56jx/hJdvbxIty/1ybpFu6Rxbyd7uJJ
uBvzYbqCS6Q0r6xjWc9NMlhrqD2ZzVF+EEtbhrKci0TZW0nHsI4bpLfWQHsw
iyN8D/dIG4awjAuksLei1qc7MznMt3APtGYwSzkfSfz9VdB6dGMGh/gaviut
GMQSzpHM/nitS1emc5AvZA73QB26MI0DfCYm/D+F+wjnEb4T6UhLNGlIHe47
nCH/Aa4YdJQ=
                "]]}]}, {}, {}}, {{}, {}, 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.368417, 0.506779, 0.709798], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwl1GW4FVUYgNELKEi3NHgNWkpCaRRULEpClBCVkjToTkmLkFBRWtICVBrB
AClRkFJJCenu9T38WPfds888c2b2nnMTW3Ss2yFJQkJCWX+iZ1nCUJpTnYdI
SjLu4E6Sk4K7SEkqUpOGtKQjPRnISCYyc47veIeXqUFpsnCe7xlGCx6nTHyn
G/tFP6Iz9cnKBX5gOK/wRDxH3J/zf9UJvEED7uYiSxnBqzxJuXgW56/XibxJ
Q7JxiWWM5DVqxjM5d5tOpRcPxzqY26CTeItGZOcyyxlFS56K9XDuHzqN3jwS
a2juN53M2+R2/K8u5IV4Vsc7dTYDuMfxQf2GHFxhBaO532dHtBU5jf/W+RQy
PqFPx34Y/6nFdbrm12OxD9pH8+kBLalfaxE9FXuh5WO/daMW04/1AT0a74l2
0Ty6T0vol1pYT2rj2AfjXfoFBYyP60ASjQ/pt3HfXGUl79KaXD7/RxfwTLxP
jrfrDPpSgVTmNukndOXF2Edzu3UOg+I6XGMV79GGZ8nsvB06k35UJLW5zfop
3Xgp9obrrOZ92vIclUjj/C06he40ibXgBmv4gNepRWXycpMf+ZB21KZK7AHx
g1wrY2hPHarG/sd6cS/3xZ7HHsQ+xppSMPY71j32Li7jOut0LB2oSxZzf+ks
+lONtOa26mf0iPtzvF+/oinZHe/RufEdxv/r4LgP48NaShdpUT0dJanxTzqO
jtTjUR6M94fi8Z5QkmTO/VnH04nneYx05n/Xz+lJM3KY26vzGBLr4Pg/XRzX
Nj6TcPt/Wim9BTOQh28=
               "]]}, 
             Annotation[#, "Charting`Private`Tag$10442#1"]& ]}}], {}}, {
        DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
         AxesOrigin -> {0, 0}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> {Automatic, Automatic}, DisplayFunction -> Identity, 
         PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.05], 
            Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
         DisplayFunction -> Identity, AspectRatio -> 
         NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False},
          AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
         Identity, Frame -> {{True, True}, {True, True}}, 
         FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> Automatic, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> {Automatic, Automatic}, GridLinesStyle -> Directive[
           GrayLevel[0.4, 0.5], 
           AbsoluteThickness[1], 
           AbsoluteDashing[{1, 2}]], ImageSize -> Small, 
         Method -> {
          "DefaultBoundaryStyle" -> Automatic, 
           "DefaultGraphicsInteraction" -> {
            "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
             "Effects" -> {
              "Highlight" -> {"ratio" -> 2}, 
               "HighlightPoint" -> {"ratio" -> 2}, 
               "Droplines" -> {
                "freeformCursorMode" -> True, 
                 "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
           "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
           None, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& )}, "AxesInFront" -> True}, 
         PlotRange -> {{0, 80}, {0., 0.02499999894691868}}, PlotRangeClipping -> 
         True, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.02], 
            Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
       FormBox[
        FormBox[
         TemplateBox[{"pdf"}, "LineLegend", DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 TagBox[#, HoldForm], "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm], TraditionalForm]},
      "Legended",
      DisplayFunction->(FormBox[
        GridBox[{{
           TagBox[
            ItemBox[
             PaneBox[
              TagBox[#, "SkipImageSizeLevel"], 
              Alignment -> {Center, Baseline}, BaselinePosition -> Baseline], 
             DefaultBaseStyle -> "Labeled"], "SkipImageSizeLevel"], 
           ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
         AutoDelete -> False, GridBoxItemSize -> Automatic, 
         BaselinePosition -> {1, 1}], TraditionalForm]& ),
      Editable->True,
      InterpretationFunction->(FormBox[
        RowBox[{"Legended", "(", 
          RowBox[{#, ",", 
            RowBox[{"Placed", "[", 
              RowBox[{#2, ",", "After"}], "]"}]}], ")"}], 
        TraditionalForm]& )], 
     NCache[{127.05, Rational[-111, 2]}, {127.05, -55.5}], {
     Center, Center}, {241.99999999999997, 110}], InsetBox[
     TemplateBox[{
       GraphicsBox[{{{{}, {}, 
           TagBox[{
             Directive[
              Opacity[1.], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[1.6]], 
             LineBox[CompressedData["
1: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
c4cWFc+5YFhkYmZmzv8Dc1Zo9A==
              "]]}, Annotation[#, "Charting`Private`Tag$10918#1"]& ]}}, {}}, {
        DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
         AxesOrigin -> {0, 0}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> {Automatic, Automatic}, DisplayFunction -> Identity, 
         PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.05], 
            Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
         DisplayFunction -> Identity, AspectRatio -> 
         NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False},
          AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
         Identity, Frame -> {{True, True}, {True, True}}, 
         FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> Automatic, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> {Automatic, Automatic}, GridLinesStyle -> Directive[
           GrayLevel[0.4, 0.5], 
           AbsoluteThickness[1], 
           AbsoluteDashing[{1, 2}]], ImageSize -> Small, 
         Method -> {
          "DefaultBoundaryStyle" -> Automatic, 
           "DefaultGraphicsInteraction" -> {
            "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
             "Effects" -> {
              "Highlight" -> {"ratio" -> 2}, 
               "HighlightPoint" -> {"ratio" -> 2}, 
               "Droplines" -> {
                "freeformCursorMode" -> True, 
                 "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
           "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
           None, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& )}}, PlotRange -> {{0, 80}, {0., 1.}}, 
         PlotRangeClipping -> True, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.02], 
            Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
       FormBox[
        FormBox[
         TemplateBox[{"cdf"}, "LineLegend", DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 TagBox[#, HoldForm], "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm], TraditionalForm]},
      "Legended",
      DisplayFunction->(FormBox[
        GridBox[{{
           TagBox[
            ItemBox[
             PaneBox[
              TagBox[#, "SkipImageSizeLevel"], 
              Alignment -> {Center, Baseline}, BaselinePosition -> Baseline], 
             DefaultBaseStyle -> "Labeled"], "SkipImageSizeLevel"], 
           ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
         AutoDelete -> False, GridBoxItemSize -> Automatic, 
         BaselinePosition -> {1, 1}], TraditionalForm]& ),
      Editable->True,
      InterpretationFunction->(FormBox[
        RowBox[{"Legended", "(", 
          RowBox[{#, ",", 
            RowBox[{"Placed", "[", 
              RowBox[{#2, ",", "After"}], "]"}]}], ")"}], 
        TraditionalForm]& )], {127.05, -170}, {
     Center, Center}, {241.99999999999997, 117}]}, {}},
  ImageSize->{Automatic, 
    UpTo[700]},
  PlotRange->{{0, 254.1}, {-229, 0}},
  PlotRangePadding->{6, 5}]], "Output",
 CellChangeTimes->{
  3.855035289176663*^9, 3.8550353304561405`*^9, 3.8550353820057335`*^9, 
   3.855035426192802*^9, {3.855035806940741*^9, 3.855035839702007*^9}, {
   3.855103691546121*^9, 3.8551037561092634`*^9}, 3.855125161653282*^9, {
   3.855334413054937*^9, 3.855334466957776*^9}},
 CellLabel->"Out[8]=",ExpressionUUID->"3e278afa-e303-4f4c-a3b1-57a09404fe80"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"673a9726-1ea8-444b-95ba-02d6ecd80fb1"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Integrate", "[", 
  RowBox[{"x", ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "1"}], "}"}]}], "]"}]], "Input",
 CellMargins:>
  Dynamic[{{
    0.135 FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}], 0.03 
     FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]}, {
    0.01940299985611511 FrontEnd`AbsoluteCurrentValue[{WindowSize, 2}], 
     0.08638058807810894 FrontEnd`AbsoluteCurrentValue[{WindowSize, 2}]}}],
 CellChangeTimes->{{3.85502930462206*^9, 3.8550293387123384`*^9}},
 CellLabel->"In[33]:=",ExpressionUUID->"562d9a9b-100c-49db-af95-8da40557d4a4"],

Cell[BoxData[
 FractionBox["1", "2"]], "Output",
 CellChangeTimes->{{3.855029322492721*^9, 3.855029339220588*^9}, 
   3.855125165040766*^9},
 CellLabel->"Out[33]=",ExpressionUUID->"5702e1b4-581c-40cf-bc54-09e03cc2a4b9"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Integrate x from 0 to 1", "WolframAlphaLong",
 CellChangeTimes->{{3.8550292126883087`*^9, 3.855029222916157*^9}},
 CellLabel->"In[34]:=",ExpressionUUID->"bad45390-76fb-4c19-a267-4ae7b882712c"],

Cell[BoxData[
 NamespaceBox["WolframAlphaQueryResults",
  DynamicModuleBox[{Typeset`q$$ = "Integrate x from 0 to 1", 
   Typeset`opts$$ = {
   AppearanceElements -> {
     "Warnings", "Assumptions", "Brand", "Pods", "PodMenus", "Unsuccessful", 
      "Sources"}, Asynchronous -> All, 
    TimeConstraint -> {20, Automatic, Automatic, Automatic}, 
    Method -> {
     "Formats" -> {"cell", "minput", "msound", "dataformats"}, "Server" -> 
      "https://api.wolframalpha.com/v1/"}, 
    PodStates -> {"Input__Step-by-step solution"}}, Typeset`elements$$ = {
   "Warnings", "Assumptions", "Brand", "Pods", "PodMenus", "Unsuccessful", 
    "Sources"}, Typeset`pod1$$ = XMLElement[
   "pod", {"title" -> "Definite integrals", "scanner" -> "Integral", "id" -> 
     "Input", "position" -> "100", "error" -> "false", "numsubpods" -> "2", 
     "primary" -> "true"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["minput", {}, {"Integrate[x, {x, 0, 1}]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            RowBox[{
              TagBox[
               RowBox[{
                 SubsuperscriptBox["\[Integral]", "0", "1"], 
                 RowBox[{"x", 
                   RowBox[{"\[DifferentialD]", "x"}]}]}], HoldForm], 
              "\[LongEqual]", 
              TagBox[
               FractionBox["1", "2"], Identity]}], TraditionalForm]], 
          "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,moutput,computabledata,formatteddata,formuladata"}]}\
], 
     XMLElement["subpod", {"title" -> "Possible intermediate steps"}, {
       XMLElement["cell", {"compressed" -> True, "string" -> False}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             GridBox[{{
                TagBox[
                 GridBox[{{
                    StyleBox[
                    StyleBox[
                    
                    TemplateBox[{"\"Compute the definite integral:\""}, 
                    "RowDefault"], 
                    GrayLevel[0.3], StripOnInput -> False], {
                    LinebreakAdjustments -> {1, 89, 100, 0, 100}, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}, {
                    RowBox[{
                    SubsuperscriptBox["\[Integral]", "0", "1"], 
                    RowBox[{"x", 
                    RowBox[{"\[DifferentialD]", "x"}]}]}]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  AllowScriptLevelChange -> False, DefaultBaseStyle -> 
                  "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{None}}, "Rows" -> {{0.5}}}], "Column"]}, {
                TagBox[
                 GridBox[{{
                    StyleBox[
                    StyleBox[
                    
                    TemplateBox[{
                    "\"Apply \"", "\"the \"", "\"fundamental \"", 
                    "\"theorem \"", "\"of \"", "\"calculus.\\nThe \"", 
                    "\"antiderivative \"", "\"of \"", 
                    TemplateBox[{"x", "\" \""}, "RowDefault"], "\"is \"", 
                    TemplateBox[{
                    FractionBox[
                    SuperscriptBox["x", "2"], "2"], "\":\""}, "RowDefault"]}, 
                    "RowDefault"], 
                    GrayLevel[0.3], StripOnInput -> False], {
                    LinebreakAdjustments -> {1, 89, 100, 0, 100}, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}, {
                    TemplateBox[{"\" \"", "\"\[LongEqual] \"", 
                    TemplateBox[{
                    FractionBox[
                    SuperscriptBox["x", "2"], "2"], "0", "1"}, "", 
                    DisplayFunction :> (SubsuperscriptBox[
                    RowBox[{#, 
                    StyleBox[
                    "\[RightBracketingBar]", SpanMinSize -> 
                    3.5]}], #2, #3]& )]}, "RowDefault"]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  AllowScriptLevelChange -> False, DefaultBaseStyle -> 
                  "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}, {
                TagBox[
                 GridBox[{{
                    StyleBox[
                    StyleBox[
                    TemplateBox[{"\[NoBreak]", "\"\[NoBreak]\"", 
                    
                    TemplateBox[{
                    "\"Evaluate \"", "\"the \"", "\"antiderivative \"", 
                    "\"at \"", "\"the \"", "\"limits \"", "\"and \"", 
                    "\"subtract.\\n \"", 
                    RowBox[{
                    TemplateBox[{
                    FractionBox[
                    SuperscriptBox["x", "2"], "2"], "0", "1"}, "", 
                    DisplayFunction :> (SubsuperscriptBox[
                    RowBox[{#, 
                    StyleBox[
                    "\[RightBracketingBar]", SpanMinSize -> 
                    3.5]}], #2, #3]& )], "\[LongEqual]", 
                    RowBox[{
                    FractionBox[
                    SuperscriptBox["1", "2"], "2"], "-", 
                    FractionBox[
                    SuperscriptBox["0", "2"], "2"]}], "\[LongEqual]", 
                    FractionBox["1", "2"]}]}, "RowDefault"], "\":\""}, 
                    "RowWithSeparators"], 
                    GrayLevel[0.3], StripOnInput -> False], {
                    LinebreakAdjustments -> {1, 89, 100, 0, 100}, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}, {
                    FrameBox[
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    TemplateBox[{"\"Answer:\""}, "RowDefault"], FontFamily -> 
                    "Helvetica", FontSize -> 12, StripOnInput -> False], 
                    "\[SpanFromLeft]"}, {"\"\"", 
                    TemplateBox[{"\" \"", "\"\[LongEqual] \"", 
                    FractionBox["1", "2"]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {2.5, Automatic}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {2, 0, 3}, "Rows" -> {1.5, 1, 2}}, 
                    AllowScriptLevelChange -> False], "Grid"], FrameStyle -> {
                    AbsoluteThickness[1], 
                    RGBColor[0.52, 0.76, 0.86]}, Background -> 
                    RGBColor[0.91, 0.98, 1], RoundingRadius -> 3, 
                    FrameMargins -> 12, StripOnInput -> False]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  AllowScriptLevelChange -> False, DefaultBaseStyle -> 
                  "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
              AllowScriptLevelChange -> False, DefaultBaseStyle -> "Column", 
              GridBoxDividers -> {
               "Columns" -> {{False}}, "Rows" -> {False, {True}, False}}, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              GridBoxSpacings -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{3}}}, FrameStyle -> 
              GrayLevel[0.7]], "Column"], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement["dataformats", {}, {"plaintext"}]}], 
     XMLElement["expressiontypes", {"count" -> "2"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  "}], 
     XMLElement["states", {"count" -> "1"}, {
       XMLElement[
       "state", {
        "name" -> "Hide steps", "input" -> "Input__Hide steps"}, {}]}]}], 
   Typeset`pod2$$ = XMLElement[
   "pod", {"title" -> "Visual representation of the integral", "scanner" -> 
     "Integral", "id" -> "VisualRepresentationOfTheIntegral", "position" -> 
     "200", "error" -> "false", "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["minput", {}, {"Plot[x, {x, 0, 1}]"}], 
       XMLElement["cell", {"compressed" -> True, "string" -> False}, {
         Cell[
          BoxData[
           FormBox[
            GraphicsBox[{{
               GraphicsComplexBox[CompressedData["
1:eJxF1H0s1HEcB/A7rlHWcVR2dOxE5SkmKalULPKQOUyWpwnpekI2aTVdu5M8
xNpNyvNDSjeO3FnlxLhpmeejo84d59Jxxy8bbrRctXWf72d777X33+/tQ024
RUvSw+FwIX/zz4Ak5Wj3QsQpnQzDtgOPyWxvnRejarg/V+pBIy0j2s+KC9qF
Lit783lg5pCnd+nqe9CcR5Li8V1gu9xnYPhED9hDr7CMUgvBtf0njZtufAL1
Njgmlnb9oIc2vj2seQAcYLoP9TkMg9bFqo3G5RFQpZFJJ1zHwPrFjn7iExFI
pLzCFIpxsOAqP7na9gu4fpqjSMkWgxluQt6e3klQ1izMH6V+BX/Rx8vs734D
Hc8YbCV3SEC/WuqVVnMpmEmJs5mNloFO6ggjcfAMaGb801C4iSR0lXH3lc+C
19w7prYHykHO+YTqj+vINZWFyXzJHMgP89Nn+yrAbH9WFW8eSZ0OmKxjfQeP
H2WyyW7zYLTV8AZehFzrL5SnMn6ApYTYDJqtEjST8mv1hMht9xnhnmkLIK4x
lis3XQTTX3ALTXuQnY65hqSbKpAUkO70kKgGJc4joiwBsqXS21YRuwTGcD1I
lC3kA1YNQ/JmGWxSUsqIQRj4zNpoTatFVu8OyckjM0Eb5i5/gwYMnHZ55FNI
zgBTPJ6v7MjCQMloUaW+CBmZqOl8Sk4E84ou9RUkYKDWgXabJUB+uDP4mbGA
DBwUv60gh4N7BYKW4EgMLI5siznXigx8eYh3Voo8GHRd1r2KPFxVWt5G9gUT
aUt2zaEYOLU0N9bAQbK94uzrJpFp8vJwKoac4XvR4zeRBB+LVBnZHcytYMVL
L2Dg1rF7O8Wvke9yNJdFE8gS5yNFoWokAT9eX6xBCuh1Lq6/kbo/hvt/uh11
/Q/9D4PL
                "], {{{}, {
                   EdgeForm[], 
                   Directive[
                    Opacity[0.1], 
                    RGBColor[0, 0, 1]], 
                   GraphicsGroupBox[{
                    
                    PolygonBox[{{1, 78, 79, 50, 77, 70, 76, 64, 69, 75, 59, 
                    63, 68, 74, 55, 58, 62, 67, 73, 52, 54, 57, 61, 66, 72, 
                    49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 
                    35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 
                    21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 
                    6, 5, 4, 3, 2, 51, 53, 56, 60, 65, 
                    71}}]}]}, {}, {}}}], {}}, {{{{}, {}, 
                 TagBox[{
                   Directive[
                    Opacity[1.], 
                    RGBColor[0.24720000000000014`, 0.24, 0.6], 
                    AbsoluteThickness[1]], 
                   LineBox[CompressedData["
1:eJxFxVlMEgAYAGC06WqLok2EVQuP2YPmmTpZSLV02swiZ2tGmJg0j8o8ymJL
pZULQ53kheYxxJmJXRaaNNQmm5qpeV+RiAcoeMypuex88P8fvn22kfEhPHMC
gRD8z/817bFuEsmH5u0p/HtZfAHOcno8z47BW7OqZIfouCxkkiobaYRjJy6Y
vaLg60sn+tryFTCRQklezq2HC7lM5++kFzC1J08Z2lACv75BrPFm3ITj/afy
q10Ljm/ff3rDqsyrGp4zSlkip7ewD6HuubS0EQ523Mzsq1DBMW2eASbxJ5j4
h7jnd6kaZpePcJSSdlgb5qWKGvoMd9DqdcXj3fBamlakIX2Fx+0ijf7yPjgx
KOnlqtMA7CD4cpfSNQgLGY1VAtYwvMvCOMZdG4HD04tCi8RjcJRg0I1sNQFn
5LDJOxXf4DD7xMsnGd9hwntCcjRnEtZqjL4LR7RwSZAtPXcR1zH5PoktU3D+
k72XUrN1sM0Bk7zu7DRMd1/aQaXNwI6ZdFGVFs9gtHiHV8zCt27HzZyPn4M9
VsLV0W56+MHqnZomMwNc6zOsclXjzOGk9Z6H8/CVLU+P2tAFOCyKWV5jbYS1
IddJOj3eXzxUGdBggsschNE9KYvwhneEuzhwCc5TN5M/WizDkc9MlX48PEXh
/G6+C99c2ceROq/A020Geogr3l3Yam3ujkt9E3q5nvgZYe8p22N4mU2OY0Ug
7ndu94/Sq7iL3fRAMA+nrinf/LqGm4rj4jixeMFsp+ZgAm64L1SXpOIDLK40
KB1X2dPTfgpwcYfeh/0IZ5AD5ftF+GE9TdiZhZOUGzx+Dj4TUU0bE+O9R9O2
hHl4k+XFUXoBLht1URgK8Wy55VOJBP8LeNyE0w==
                    "]]}, 
                  Annotation[#, 
                   "Charting`Private`Tag$2489287#1"]& ]}}, {}}}, {
             GridLines -> Dynamic[
                Map[{{#, 
                   GrayLevel[0.7]}}& , 
                 MousePosition[{"Graphics", Graphics}, None]]], 
              AxesOrigin -> {Automatic, 0}, PlotRange -> All, ImageSize -> 
              220., DisplayFunction -> Identity, 
              Ticks -> {Automatic, Automatic}, AxesOrigin -> {0, 0.}, 
              FrameTicks -> {{Automatic, {{0., 
                   FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.01, 
                   0.}, {
                    AbsoluteThickness[0.1]}}, {0.2, 
                   FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.01, 
                   0.}, {
                    AbsoluteThickness[0.1]}}, {0.4, 
                   FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.01, 
                   0.}, {
                    AbsoluteThickness[0.1]}}, {0.6, 
                   FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.01, 
                   0.}, {
                    AbsoluteThickness[0.1]}}, {0.8, 
                   FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.01, 
                   0.}, {
                    AbsoluteThickness[0.1]}}, {1., 
                   FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.01, 
                   0.}, {
                    AbsoluteThickness[0.1]}}, {-0.2, 
                   FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                   0.}, {
                    AbsoluteThickness[0.1]}}, {-0.15, 
                   FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                   0.}, {
                    AbsoluteThickness[0.1]}}, {-0.1, 
                   FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                   0.}, {
                    AbsoluteThickness[0.1]}}, {-0.05, 
                   FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                   0.}, {
                    AbsoluteThickness[0.1]}}, {0.05, 
                   FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                   0.}, {
                    AbsoluteThickness[0.1]}}, {0.1, 
                   FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                   0.}, {
                    AbsoluteThickness[0.1]}}, {0.15, 
                   FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                   0.}, {
                    AbsoluteThickness[0.1]}}, {0.25, 
                   FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                   0.}, {
                    AbsoluteThickness[0.1]}}, {0.3, 
                   FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                   0.}, {
                    AbsoluteThickness[0.1]}}, {0.35, 
                   FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                   0.}, {
                    AbsoluteThickness[0.1]}}, {0.45, 
                   FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                   0.}, {
                    AbsoluteThickness[0.1]}}, {0.5, 
                   FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                   0.}, {
                    AbsoluteThickness[0.1]}}, {0.55, 
                   FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                   0.}, {
                    AbsoluteThickness[0.1]}}, {0.65, 
                   FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                   0.}, {
                    AbsoluteThickness[0.1]}}, {0.7, 
                   FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                   0.}, {
                    AbsoluteThickness[0.1]}}, {0.75, 
                   FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                   0.}, {
                    AbsoluteThickness[0.1]}}, {0.85, 
                   FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                   0.}, {
                    AbsoluteThickness[0.1]}}, {0.9, 
                   FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                   0.}, {
                    AbsoluteThickness[0.1]}}, {0.95, 
                   FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                   0.}, {
                    AbsoluteThickness[0.1]}}, {1.05, 
                   FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                   0.}, {
                    AbsoluteThickness[0.1]}}, {1.1, 
                   FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                   0.}, {
                    AbsoluteThickness[0.1]}}, {1.15, 
                   FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                   0.}, {
                    AbsoluteThickness[0.1]}}, {1.2, 
                   FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                   0.}, {
                    AbsoluteThickness[0.1]}}}}, {Automatic, {{0., 
                   FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.01, 
                   0.}, {
                    AbsoluteThickness[0.1]}}, {0.2, 
                   FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.01, 
                   0.}, {
                    AbsoluteThickness[0.1]}}, {0.4, 
                   FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.01, 
                   0.}, {
                    AbsoluteThickness[0.1]}}, {0.6, 
                   FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.01, 
                   0.}, {
                    AbsoluteThickness[0.1]}}, {0.8, 
                   FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.01, 
                   0.}, {
                    AbsoluteThickness[0.1]}}, {1., 
                   FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.01, 
                   0.}, {
                    AbsoluteThickness[0.1]}}, {-0.2, 
                   FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                   0.}, {
                    AbsoluteThickness[0.1]}}, {-0.15, 
                   FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                   0.}, {
                    AbsoluteThickness[0.1]}}, {-0.1, 
                   FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                   0.}, {
                    AbsoluteThickness[0.1]}}, {-0.05, 
                   FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                   0.}, {
                    AbsoluteThickness[0.1]}}, {0.05, 
                   FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                   0.}, {
                    AbsoluteThickness[0.1]}}, {0.1, 
                   FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                   0.}, {
                    AbsoluteThickness[0.1]}}, {0.15, 
                   FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                   0.}, {
                    AbsoluteThickness[0.1]}}, {0.25, 
                   FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                   0.}, {
                    AbsoluteThickness[0.1]}}, {0.3, 
                   FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                   0.}, {
                    AbsoluteThickness[0.1]}}, {0.35, 
                   FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                   0.}, {
                    AbsoluteThickness[0.1]}}, {0.45, 
                   FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                   0.}, {
                    AbsoluteThickness[0.1]}}, {0.5, 
                   FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                   0.}, {
                    AbsoluteThickness[0.1]}}, {0.55, 
                   FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                   0.}, {
                    AbsoluteThickness[0.1]}}, {0.65, 
                   FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                   0.}, {
                    AbsoluteThickness[0.1]}}, {0.7, 
                   FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                   0.}, {
                    AbsoluteThickness[0.1]}}, {0.75, 
                   FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                   0.}, {
                    AbsoluteThickness[0.1]}}, {0.85, 
                   FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                   0.}, {
                    AbsoluteThickness[0.1]}}, {0.9, 
                   FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                   0.}, {
                    AbsoluteThickness[0.1]}}, {0.95, 
                   FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                   0.}, {
                    AbsoluteThickness[0.1]}}, {1.05, 
                   FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                   0.}, {
                    AbsoluteThickness[0.1]}}, {1.1, 
                   FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                   0.}, {
                    AbsoluteThickness[0.1]}}, {1.15, 
                   FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                   0.}, {
                    AbsoluteThickness[0.1]}}, {1.2, 
                   FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                   0.}, {
                    AbsoluteThickness[0.1]}}}}}, GridLines -> {None, None}, 
              DisplayFunction -> Identity, 
              PlotRangePadding -> {{0, 0}, {0, 0}}, PlotRangeClipping -> True,
               ImagePadding -> All, DisplayFunction -> Identity, AspectRatio -> 
              NCache[GoldenRatio^(-1), 0.6180339887498948], 
              Axes -> {True, True}, AxesLabel -> {None, None}, 
              AxesOrigin -> {0, 0.}, AxesStyle -> Directive[
                AbsoluteThickness[0.2]], BaseStyle -> Automatic, 
              DisplayFunction :> Identity, Epilog -> {
                LineBox[{{0, 0}, {0, 0}}], 
                LineBox[{{1, 0}, {1, 1}}]}, 
              Frame -> {{False, False}, {False, False}}, 
              FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
              Directive[
                AbsoluteThickness[0.2]], 
              FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
              GridLines -> {None, None}, GridLinesStyle -> {
                GrayLevel[0.85], 
                GrayLevel[0.9]}, ImageSize -> 440., 
              Method -> {
               "DefaultBoundaryStyle" -> Automatic, 
                "DefaultGraphicsInteraction" -> {
                 "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                  "Effects" -> {
                   "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                "DefaultMeshStyle" -> PointSize[Medium], "PointSizeFunction" -> 
                "SmallPointSize", "ScalingFunctions" -> None, 
                "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}, "AxesInFront" -> True}, 
              PlotRange -> {{-0.1, 1.1}, {-0.09999997551020409, 
               1.0999999755102041`}}, PlotRangeClipping -> True, 
              PlotRangePadding -> {{Automatic, Automatic}, {
                Automatic, Automatic}}, Prolog -> {
                Opacity[0], 
                TagBox[
                 RectangleBox[
                  Scaled[{0, 0}], 
                  Scaled[{1, 1}]], Annotation[#, "Plot", "Frame"]& ]}, 
              Ticks -> {Automatic, Automatic}}], TraditionalForm]], 
          "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {"minput,computabledata,formatteddata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n  ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n "}]}], 
   Typeset`pod3$$ = XMLElement[
   "pod", {"title" -> "Riemann sums", "scanner" -> "Integral", "id" -> 
     "RiemannSums", "position" -> "300", "error" -> "false", "numsubpods" -> 
     "2"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             GridBox[{{
                StyleBox[
                 TagBox[
                  GridBox[{{
                    TagBox[
                    PaneBox[
                    StyleBox[
                    "\"left sum\"", {
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                    $CellContext`TagBoxWrapper["Label"]], 
                    RowBox[{
                    FractionBox[
                    RowBox[{"n", "-", "1"}], 
                    RowBox[{"2", " ", "n"}]], "\[LongEqual]", 
                    TagBox[
                    TemplateBox[{
                    RowBox[{
                    FractionBox["1", "2"], "-", 
                    FractionBox["1", 
                    RowBox[{"2", " ", "n"}]], "+", 
                    InterpretationBox[
                    RowBox[{"O", "(", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    FractionBox["1", "n"], ")"}], "2"], ")"}], 
                    SeriesData[$CellContext`n, 
                    DirectedInfinity[1], {}, 0, 2, 1], Editable -> False]}], 
                    RowBox[{"SeriesData", "[", 
                    RowBox[{"n", ",", "\[Infinity]", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    FractionBox["1", "2"], ",", 
                    RowBox[{"-", 
                    FractionBox["1", "2"]}]}], "}"}], ",", "0", ",", "2", ",",
                     "1"}], "]"}]}, "SeriesData", DisplayFunction -> (#& ), 
                    InterpretationFunction -> (#2& ), SyntaxForm -> Plus], 
                    Identity]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Left, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxBackground -> {"Columns" -> {None, None}}, 
                   GridBoxFrame -> {
                    "Columns" -> {{True}}, "Rows" -> {{True}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{1.5}, 2}, "Rows" -> {{1}}}, FrameStyle -> 
                   GrayLevel[0.84], BaselinePosition -> Automatic, 
                   AllowScriptLevelChange -> False], "Grid"], 
                 LineSpacing -> {0.9, 0, 1.5}, LineIndent -> 0, StripOnInput -> 
                 False]}, {
                StyleBox[
                 
                 RowBox[{
                  "\"(\"", "\[NoBreak]", 
                   "\"assuming subintervals of equal length\"", "\[NoBreak]", 
                   "\")\""}], {FontFamily -> "Verdana", FontSize -> 10, 
                  GrayLevel[0.5], LinebreakAdjustments -> {1, 100, 1, 0, 100},
                   LineIndent -> 0}]}}, 
              GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
              "Column", 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
             "Column"], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,computabledata,formatteddata,formuladata"}]}], 
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> True, "string" -> False}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             FormBox[
              StyleBox[
               
               DynamicModuleBox[{
                CalculateScan`RiemannSumScanner`Private`intervals$$ = 10, 
                 CalculateScan`RiemannSumScanner`Private`method$$ = 
                 CalculateScan`RiemannSumScanner`Private`LeftValue, 
                 CalculateUtilities`GraphicsUtilities`Private`more$$ = False, 
                 Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
                 Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, 
                 Typeset`animvar$$ = 1, Typeset`name$$ = "\"untitled\"", 
                 Typeset`specs$$ = {{
                    Hold[
                    CalculateUtilities`GraphicsUtilities`Private`more$$], {
                    False, True}}, {{
                    Hold[CalculateScan`RiemannSumScanner`Private`intervals$$],
                     10, "number of subintervals"}, 2, 100, 1}, {{
                    Hold[CalculateScan`RiemannSumScanner`Private`method$$], 
                    CalculateScan`RiemannSumScanner`Private`LeftValue, 
                    "summation method"}, {
                    CalculateScan`RiemannSumScanner`Private`LeftValue -> 
                    "left endpoint", 
                    CalculateScan`RiemannSumScanner`Private`MidpointValue -> 
                    "midpoint", 
                    CalculateScan`RiemannSumScanner`Private`RightValue -> 
                    "right endpoint"}}, {
                    Hold[
                    Style[
                    Overlay[{
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "WABitmaps", "PodInfoBackground"]]], 
                    Pane[
                    Column[{
                    Manipulate`Place[1], 
                    Manipulate`Place[2]}], 
                    ImageMargins -> {{20, 30}, {10, 10}}]}, {1, 2}, 2, 
                    Alignment -> {Left, Top}]]], 
                    Manipulate`Dump`ThisIsNotAControl}}, Typeset`size$$ = 
                 Automatic, Typeset`update$$ = 0, Typeset`initDone$$ = False, 
                 Typeset`skipInitDone$$ = False, 
                 CalculateUtilities`GraphicsUtilities`Private`more$7010081$$ = 
                 False, CalculateScan`RiemannSumScanner`Private`intervals$\
7010086$$ = 0, CalculateScan`RiemannSumScanner`Private`method$7010087$$ = 
                 False}, 
                DynamicBox[
                 Manipulate`ManipulateBoxes[
                 2, TraditionalForm, 
                  "Variables" :> {
                   CalculateScan`RiemannSumScanner`Private`intervals$$ = 10, 
                    CalculateScan`RiemannSumScanner`Private`method$$ = 
                    CalculateScan`RiemannSumScanner`Private`LeftValue, 
                    CalculateUtilities`GraphicsUtilities`Private`more$$ = 
                    False}, "ControllerVariables" :> {
                    Hold[
                    CalculateUtilities`GraphicsUtilities`Private`more$$, 
                    CalculateUtilities`GraphicsUtilities`Private`more$7010081$\
$, False], 
                    Hold[
                    CalculateScan`RiemannSumScanner`Private`intervals$$, 
                    CalculateScan`RiemannSumScanner`Private`intervals$7010086$\
$, 0], 
                    Hold[
                    CalculateScan`RiemannSumScanner`Private`method$$, 
                    CalculateScan`RiemannSumScanner`Private`method$7010087$$, 
                    False]}, 
                  "OtherVariables" :> {
                   Typeset`show$$, Typeset`bookmarkList$$, 
                    Typeset`bookmarkMode$$, Typeset`animator$$, 
                    Typeset`animvar$$, Typeset`name$$, Typeset`specs$$, 
                    Typeset`size$$, Typeset`update$$, Typeset`initDone$$, 
                    Typeset`skipInitDone$$}, "Body" :> Quiet[
                    
                    With[{CalculateScan`RiemannSumScanner`Private`delta$ = (1 + 
                    0)/CalculateScan`RiemannSumScanner`Private`intervals$$, 
                    CalculateScan`RiemannSumScanner`Private`epsilon$ = 
                    RandomReal[{0, 0.001}]}, 
                    Labeled[
                    
                    Plot[$CellContext`x, {$CellContext`x, \
-0.09999999999999998, 1.1}, 
                    PlotRange -> {{-0.09999999999999998, 
                    1.1}, {-0.09999999999999998, 1.1}}, Prolog -> Table[
                    (Flatten[{
                    If[
                    TrueQ[Part[#, 2, 2] > 0], {
                    Opacity[0.1], Blue, 
                    EdgeForm[
                    RGBColor[{0.63, 0.64, 0.84}]]}, {
                    Opacity[0.1], Red, 
                    EdgeForm[
                    RGBColor[{0.9, 0.64, 0.64}]]}], 
                    Polygon[#]}]& )[
                    ({{#, 0}, {#, #3}, {#2, #3}, {#2, 0}}& )[
                    0 + CalculateScan`RiemannSumScanner`Private`i 
                    CalculateScan`RiemannSumScanner`Private`delta$, 
                    0 + (CalculateScan`RiemannSumScanner`Private`i + 1) 
                    CalculateScan`RiemannSumScanner`Private`delta$, 
                    (If[
                    Or[
                    Not[
                    NumericQ[#]], 
                    Not[
                    FreeQ[#, 
                    Alternatives[Complex, I]]]], 0, #]& )[
                    Quiet[
                    Which[
                    MatchQ[
                    CalculateScan`RiemannSumScanner`Private`method$$, 
                    CalculateScan`RiemannSumScanner`Private`LeftValue], 
                    (If[
                    Not[
                    NumericQ[#]], 
                    N[
                    
                    ReplaceAll[$CellContext`x, $CellContext`x -> 
                    0 + CalculateScan`RiemannSumScanner`Private`i 
                    CalculateScan`RiemannSumScanner`Private`delta$ + 
                    CalculateScan`RiemannSumScanner`Private`epsilon$]], #]& )[
                    N[
                    
                    ReplaceAll[$CellContext`x, $CellContext`x -> 
                    0 + CalculateScan`RiemannSumScanner`Private`i 
                    CalculateScan`RiemannSumScanner`Private`delta$]]], 
                    MatchQ[
                    CalculateScan`RiemannSumScanner`Private`method$$, 
                    CalculateScan`RiemannSumScanner`Private`MidpointValue], 
                    (If[
                    Not[
                    NumericQ[#]], 
                    N[
                    
                    ReplaceAll[$CellContext`x, $CellContext`x -> 
                    0 + (CalculateScan`RiemannSumScanner`Private`i 
                    CalculateScan`RiemannSumScanner`Private`delta$ + (
                    CalculateScan`RiemannSumScanner`Private`i + 1) 
                    CalculateScan`RiemannSumScanner`Private`delta$)/2 + 
                    CalculateScan`RiemannSumScanner`Private`epsilon$]], #]& )[
                    N[
                    
                    ReplaceAll[$CellContext`x, $CellContext`x -> 
                    0 + (CalculateScan`RiemannSumScanner`Private`i 
                    CalculateScan`RiemannSumScanner`Private`delta$ + (
                    CalculateScan`RiemannSumScanner`Private`i + 1) 
                    CalculateScan`RiemannSumScanner`Private`delta$)/2]]], 
                    MatchQ[
                    CalculateScan`RiemannSumScanner`Private`method$$, 
                    CalculateScan`RiemannSumScanner`Private`RightValue], 
                    (If[
                    Not[
                    NumericQ[#]], 
                    N[
                    
                    ReplaceAll[$CellContext`x, $CellContext`x -> 
                    0 + (CalculateScan`RiemannSumScanner`Private`i + 1) 
                    CalculateScan`RiemannSumScanner`Private`delta$ - 
                    CalculateScan`RiemannSumScanner`Private`epsilon$]], #]& )[
                    N[
                    
                    ReplaceAll[$CellContext`x, $CellContext`x -> 
                    0 + (CalculateScan`RiemannSumScanner`Private`i + 1) 
                    CalculateScan`RiemannSumScanner`Private`delta$]]], True, 
                    0]]]]], {
                    CalculateScan`RiemannSumScanner`Private`i, 0, 
                    CalculateScan`RiemannSumScanner`Private`intervals$$ - 1}],
                     PlotStyle -> AbsoluteThickness[1], ImageSize -> 1.5 200], 
                    (If[
                    NumericQ[#], 
                    Grid[{{
                    Row[{
                    Style["integral: ", 
                    GrayLevel[0.6]], 
                    TildeTilde[
                    Rational[1, 2], 0.5]}]}, {
                    Row[{
                    Style["Riemann sum: ", 
                    GrayLevel[0.6]], #}]}, {
                    Row[{
                    Style["error: ", 
                    GrayLevel[0.6]], 
                    Abs[# - Rational[1, 2]]}]}}, Alignment -> ":"], ""]& )[
                    (Chop[
                    N[
                    TimeConstrained[
                    Simplify[#], 0.5, #]]]& )[
                    Quiet[CalculateScan`RiemannSumScanner`Private`delta$ Sum[
                    
                    ReplaceAll[$CellContext`x, {$CellContext`x -> 
                    0 + CalculateScan`RiemannSumScanner`Private`k 
                    CalculateScan`RiemannSumScanner`Private`delta$ + 
                    CalculateScan`RiemannSumScanner`Private`delta$ 
                    ReplaceAll[
                    CalculateScan`RiemannSumScanner`Private`method$$, {
                    CalculateScan`RiemannSumScanner`Private`LeftValue -> 0, 
                    CalculateScan`RiemannSumScanner`Private`MidpointValue -> 
                    Rational[1, 2], 
                    CalculateScan`RiemannSumScanner`Private`RightValue -> 
                    1}]}], {
                    CalculateScan`RiemannSumScanner`Private`k, 0, 
                    CalculateScan`RiemannSumScanner`Private`intervals$$ - 
                    1}]]]]]]], 
                  "Specifications" :> {{
                    CalculateUtilities`GraphicsUtilities`Private`more$$, {
                    False, True}, ControlType -> None}, {{
                    CalculateScan`RiemannSumScanner`Private`intervals$$, 10, 
                    "number of subintervals"}, 2, 100, 1, ControlPlacement -> 
                    1}, {{CalculateScan`RiemannSumScanner`Private`method$$, 
                    CalculateScan`RiemannSumScanner`Private`LeftValue, 
                    "summation method"}, {
                    CalculateScan`RiemannSumScanner`Private`LeftValue -> 
                    "left endpoint", 
                    CalculateScan`RiemannSumScanner`Private`MidpointValue -> 
                    "midpoint", 
                    CalculateScan`RiemannSumScanner`Private`RightValue -> 
                    "right endpoint"}, ControlPlacement -> 2}, 
                    Style[
                    Overlay[{
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "WABitmaps", "PodInfoBackground"]]], 
                    Pane[
                    Column[{
                    Manipulate`Place[1], 
                    Manipulate`Place[2]}], 
                    ImageMargins -> {{20, 30}, {10, 10}}]}, {1, 2}, 2, 
                    Alignment -> {Left, Top}]]}, 
                  "Options" :> {
                   ControlPlacement -> Bottom, 
                    FrameMargins -> {{0, 0}, {0, 10}}, Paneled -> False, 
                    AppearanceElements -> {}, 
                    LabelStyle -> {
                    "DialogStyle", FontColor -> GrayLevel[0.25]}}, 
                  "DefaultOptions" :> {}], SingleEvaluation -> True], 
                Initialization :> ({None, 
                   ReleaseHold[
                    Uncompress[
                    "6:eJztVm1v0zAQbinv7/\
APkPiMBkya9gEJ6GBMGlCS8r232GksXDvYzjb48+Czm6RZu0oxHaAp/XCqL83ju+eeu96TIxml/\
V6vp69a80Fykt7A02NrhnKWy0KQd6e5olozKdIr+Oy2NTE1e5TDD0q877o176WagfHnV/g+\
8KTgYOhXwzgzjOrJvoI8Y4muPSPFju1PJlwmwNlP+\
nRna2t3e2fXw2AsIzCGKqFftoXMMwWapj0EumbNWw7imz8+Ko+fCs5j+\
r2gIqH6gfWOFRALIwVwzCf41svN1F1MzIAgoMiF0+\
TkOWx7gTaKiemYznJ843yynrcFBjXVnpt7JTfrFOTDv4kPZOxi8h6XtDs7AsPCuGT0nZXVP+\
dugOfXbeGVPFlNHOb3hiNvYNgx1ct0PmtdJ89I1bUu+jlXFzVfNhrk+VOm/l86ZNosh/\
GibRh0dmRrvFp7y/DbbeFljl0/F/\
d9az57Rwm4ajhUgvsoScHnUTRTHniJtk9X59bhMe5UfMfoDKlghRPZOMt+\
cf3xsAKvN4UYazfZgHREPQMimlPrIo7bPTZlZpiBgsQCz6/\
rl002lnUoAXe2rz0ThNkB5glZtzyhOUgX6g4myb78UXEruZxpMuT9QBg6pWqt6G9hfZQlV5CxDIwkx\
guaeg3msEpqBCpY9oMSJM5BMIRkv+zHffMPFyuBVO0rVJfyLA5caU7Dk+\
iXBT6kYmqy5o4dOLqC2xazieRJrbqIpenitNkc0/\
0m040bmgM9lITQkoQP9G5T6DaFv7opLO3B3ZrQrQndmtCtCd2a8P+uCS5i/Ff6DS0EuL4="]]}; 
                 Typeset`initDone$$ = True), DynamicModuleValues :> {}, 
                Deinitialization :> None, 
                UntrackedVariables :> {Typeset`size$$}, 
                SynchronousInitialization -> True, 
                UnsavedVariables :> {Typeset`initDone$$}, 
                UndoTrackedVariables :> {
                 Typeset`show$$, Typeset`bookmarkMode$$}], "Manipulate", 
               Deployed -> True, StripOnInput -> False], TraditionalForm], 
             Manipulate`InterpretManipulate[1]], TraditionalForm]], 
          "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement["dataformats", {}, {}]}], 
     XMLElement["expressiontypes", {"count" -> "2"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Grid"}, {}], "\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  "}], 
     XMLElement["states", {"count" -> "1"}, {
       XMLElement[
       "state", {
        "name" -> "More cases", "input" -> 
         "RiemannSums__More cases"}, {}]}]}], Typeset`pod4$$ = XMLElement[
   "pod", {"title" -> "Indefinite integral", "scanner" -> "Integral", "id" -> 
     "IndefiniteIntegral", "position" -> "400", "error" -> "false", 
     "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["minput", {}, {"Integrate[x, x]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            RowBox[{
              TagBox[
               RowBox[{"\[Integral]", 
                 RowBox[{
                   TagBox["x", HoldForm], 
                   RowBox[{"\[DifferentialD]", "x"}]}]}], HoldForm], 
              "\[LongEqual]", 
              TagBox[
               StyleBox[
                RowBox[{
                  StyleBox[
                   FractionBox[
                    SuperscriptBox["x", "2"], "2"], {
                    GrayLevel[0], LinebreakAdjustments -> {1, 100, 1, 0, 100},
                     LineIndent -> 0}], "+", 
                  StyleBox[
                  "\"constant\"", {
                   Magnification -> 0.9 Inherited, FontFamily -> "Helvetica", 
                    FontSize -> Inherited, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}], {
                 GrayLevel[0.6], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                 LineIndent -> 0}], Identity]}], TraditionalForm]], 
          "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,moutput,computabledata,formatteddata,formuladata"}]}\
], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  "}], 
     XMLElement["states", {"count" -> "1"}, {
       XMLElement[
       "state", {
        "name" -> "Step-by-step solution", "input" -> 
         "IndefiniteIntegral__Step-by-step solution", "stepbystep" -> 
         "true"}, {}]}]}], Typeset`aux1$$ = {
   True, False, {False, False}, True}, Typeset`aux2$$ = {
   True, False, {False}, True}, Typeset`aux3$$ = {
   True, False, {False, False}, True}, Typeset`aux4$$ = {
   True, False, {False}, True}, Typeset`asyncpods$$ = {}, Typeset`nonpods$$ = {
    XMLElement["assumptions", {"count" -> "1"}, {
      XMLElement[
      "assumption", {
       "word" -> "", "template" -> 
        "Assuming \"from 0 to 1\" is referring to variable \
ranges${separator}Use \"from\" as ${desc} instead", "count" -> "2", 
        "pulldown" -> "false", "type" -> "MultiClash", "default" -> 
        "{\"MC\", \"from 0 to 1\"} -> {\"VariableRange\", \"dflt\"}"}, {
        XMLElement[
        "value", {
         "name" -> "VariableRange", "desc" -> " referring to variable ranges",
           "input" -> "{\"MC\", \"from 0 to 1\"} -> {\"VariableRange\"}", 
          "word" -> "from 0 to 1"}, {}], 
        XMLElement[
        "value", {
         "name" -> "EnglishWord", "desc" -> "a word", "input" -> 
          "{\"MC\", \"from 0 to 1\"} -> {\"EnglishWord\"}", "word" -> 
          "from"}, {}]}]}]}, Typeset`initdone$$ = 
   FrontEnd`SuppressEvaluationHash[True], Typeset`queryinfo$$ = {
   "success" -> "true", "error" -> 
    "false", {"http://www.w3.org/XML/1998/namespace", "space"} -> "preserve", 
    "numpods" -> "4", "datatypes" -> "", "timedout" -> "", "timedoutpods" -> 
    "", "timing" -> "0.752", "parsetiming" -> "0.352", "parsetimedout" -> 
    "false", "recalculate" -> "", "id" -> 
    "MSP9230132c50cic24i1d31000055de9i307ca3dfe6", "host" -> 
    "https://www6b3.wolframalpha.com", "server" -> "8", "related" -> 
    "https://www6b3.wolframalpha.com/api/v1/relatedQueries.jsp?id=\
MSPa9231132c50cic24i1d3100001ha8a193bi040gdh3172133347439184749", "version" -> 
    "2.6", "inputstring" -> "Integrate x from 0 to 1"}, 
   Typeset`sessioninfo$$ = {
   "TimeZone" -> 1., 
    "Date" -> {2022, 3, 1, 13, 6, 8.8806516`8.70101979977399}, "Line" -> 34, 
    "SessionID" -> 18717537931614503714}, Typeset`showpods$$ = {1, 2, 3, 4}, 
   Typeset`failedpods$$ = {}, Typeset`chosen$$ = {}, Typeset`open$$ = False, 
   Typeset`newq$$ = "Integrate x from 0 to 1"}, 
   DynamicBox[ToBoxes[
     AlphaIntegration`FormatAlphaResults[
      Dynamic[{
       1, {Typeset`pod1$$, Typeset`pod2$$, Typeset`pod3$$, Typeset`pod4$$}, {
        Typeset`aux1$$, Typeset`aux2$$, Typeset`aux3$$, Typeset`aux4$$}, 
        Typeset`chosen$$, Typeset`open$$, Typeset`elements$$, Typeset`q$$, 
        Typeset`opts$$, Typeset`nonpods$$, Typeset`queryinfo$$, 
        Typeset`sessioninfo$$, Typeset`showpods$$, Typeset`failedpods$$, 
        Typeset`newq$$}]], StandardForm],
    ImageSizeCache->{1371.6, {1099.8767091105226`, 1110.7232908894775`}},
    TrackedSymbols:>{Typeset`showpods$$, Typeset`failedpods$$}],
   DynamicModuleValues:>{},
   Initialization:>If[
     And[
      Not[Typeset`initdone$$ === True], 
      Not[Typeset`initdone$$ === FrontEnd`SuppressEvaluationHash[True]]], 
     Null; WolframAlphaClient`Private`doAsyncUpdates[
       Hold[{Typeset`pod1$$, Typeset`pod2$$, Typeset`pod3$$, Typeset`pod4$$}],
        Typeset`asyncpods$$, 
       Dynamic[Typeset`failedpods$$]]; Typeset`asyncpods$$ = {}; 
     Typeset`initdone$$ = FrontEnd`SuppressEvaluationHash[True]],
   SynchronousInitialization->False],
  BaseStyle->{Deployed -> True},
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True]], "Print", "WolframAlphaFullOutput",
 CellChangeTimes->{
  3.855125169895973*^9},ExpressionUUID->"b8218a95-04c1-4d63-a79e-\
e17d8cb9d631"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"c94d2937-d166-4fcc-8417-163ca62decf4"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Integrate", "[", 
  RowBox[{
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"x", "-", 
      FractionBox["1", "2"]}], ")"}], "2"], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "1"}], "}"}]}], "]"}]], "Input",
 CellMargins:>
  Dynamic[{{
    0.135 FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}], 0.03 
     FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]}, {
    0.01940299985611511 FrontEnd`AbsoluteCurrentValue[{WindowSize, 2}], 
     0.08638058807810894 FrontEnd`AbsoluteCurrentValue[{WindowSize, 2}]}}],
 CellChangeTimes->{{3.855029363900732*^9, 3.855029410722647*^9}},
 CellLabel->"In[35]:=",ExpressionUUID->"ab5629d4-d205-478b-ab24-1b0e8bc31324"],

Cell[BoxData[
 FractionBox["1", "12"]], "Output",
 CellChangeTimes->{3.855029411700334*^9, 3.855125213307727*^9},
 CellLabel->"Out[35]=",ExpressionUUID->"5f4fd9bd-39ad-4daf-a594-4cc2d2d971f2"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Integrate (x-(1/2))^2 from 0 to 1", "WolframAlphaLong",
 CellChangeTimes->{{3.855029240733203*^9, 3.8550292711832867`*^9}},
 CellLabel->"In[36]:=",ExpressionUUID->"fa1d8c64-f078-4335-8aa9-78cf9629a31c"],

Cell[BoxData[
 NamespaceBox["WolframAlphaQueryResults",
  DynamicModuleBox[{Typeset`q$$ = "Integrate (x-(1/2))^2 from 0 to 1", 
   Typeset`opts$$ = {
   AppearanceElements -> {
     "Warnings", "Assumptions", "Brand", "Pods", "PodMenus", "Unsuccessful", 
      "Sources"}, Asynchronous -> All, 
    TimeConstraint -> {20, Automatic, Automatic, Automatic}, 
    Method -> {
     "Formats" -> {"cell", "minput", "msound", "dataformats"}, "Server" -> 
      "https://api.wolframalpha.com/v1/"}, 
    PodStates -> {"Input__Step-by-step solution"}}, Typeset`elements$$ = {
   "Warnings", "Assumptions", "Brand", "Pods", "PodMenus", "Unsuccessful", 
    "Sources"}, Typeset`pod1$$ = XMLElement[
   "pod", {"title" -> "Definite integrals", "scanner" -> "Integral", "id" -> 
     "Input", "position" -> "100", "error" -> "false", "numsubpods" -> "2", 
     "primary" -> "true"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["minput", {}, {"Integrate[(-1/2 + x)^2, {x, 0, 1}]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            RowBox[{
              TagBox[
               RowBox[{
                 SubsuperscriptBox["\[Integral]", "0", "1"], 
                 RowBox[{
                   SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"x", "-", 
                    FractionBox["1", "2"]}], ")"}], "2"], 
                   RowBox[{"\[DifferentialD]", "x"}]}]}], HoldForm], 
              "\[LongEqual]", 
              TagBox[
               FractionBox["1", "12"], Identity], "\[TildeTilde]", 
              TagBox["0.0833333333333333333`5.", Identity]}], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,moutput,computabledata,formatteddata,formuladata"}]}\
], 
     XMLElement["subpod", {"title" -> "Possible intermediate steps"}, {
       XMLElement["cell", {"compressed" -> True, "string" -> False}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             GridBox[{{
                TagBox[
                 GridBox[{{
                    StyleBox[
                    StyleBox[
                    
                    TemplateBox[{"\"Compute the definite integral:\""}, 
                    "RowDefault"], 
                    GrayLevel[0.3], StripOnInput -> False], {
                    LinebreakAdjustments -> {1, 89, 100, 0, 100}, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}, {
                    RowBox[{
                    SubsuperscriptBox["\[Integral]", "0", "1"], 
                    RowBox[{
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"x", "-", 
                    FractionBox["1", "2"]}], ")"}], "2"], 
                    RowBox[{"\[DifferentialD]", "x"}]}]}]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  AllowScriptLevelChange -> False, DefaultBaseStyle -> 
                  "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{None}}, "Rows" -> {{0.5}}}], "Column"]}, {
                TagBox[
                 GridBox[{{
                    StyleBox[
                    StyleBox[
                    TemplateBox[{"\"For \"", "\"the \"", "\"integrand \"", 
                    TemplateBox[{
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"x", "-", 
                    FractionBox["1", "2"]}], ")"}], "2"], "\",\"", "\" \""}, 
                    "RowDefault"], "\"substitute \"", 
                    TemplateBox[{
                    RowBox[{"u", "\[LongEqual]", 
                    RowBox[{"x", "-", 
                    FractionBox["1", "2"]}]}], "\" \""}, "RowDefault"], 
                    "\"and \"", 
                    TemplateBox[{
                    RowBox[{
                    RowBox[{"\[DifferentialD]", "u"}], "\[LongEqual]", 
                    "\"\""}], "\"\[ThinSpace]\""}, "RowDefault"], 
                    TemplateBox[{
                    RowBox[{"\[DifferentialD]", "x"}], "\".\"", "\"\\nThis\"",
                     "\" \""}, "RowDefault"], "\"gives \"", "\"a \"", 
                    "\"new \"", "\"lower \"", "\"bound \"", 
                    TemplateBox[{
                    RowBox[{"u", "\[LongEqual]", 
                    RowBox[{"0", "-", 
                    RowBox[{
                    FractionBox["1", "2"]}]}], "\[LongEqual]", 
                    RowBox[{"-", 
                    FractionBox["1", "2"]}]}], "\" \""}, "RowDefault"], 
                    "\"and \"", "\"upper \"", "\"bound \"", 
                    TemplateBox[{
                    RowBox[{"u", "\[LongEqual]", 
                    RowBox[{"1", "-", 
                    RowBox[{
                    FractionBox["1", "2"]}]}], "\[LongEqual]", 
                    FractionBox["1", "2"]}], "\":\""}, "RowDefault"]}, 
                    "RowDefault"], 
                    GrayLevel[0.3], StripOnInput -> False], {
                    LinebreakAdjustments -> {1, 89, 100, 0, 100}, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}, {
                    TemplateBox[{"\" \"", "\"\[LongEqual] \"", 
                    RowBox[{
                    SubsuperscriptBox["\[Integral]", 
                    RowBox[{
                    RowBox[{"-", "1"}], "/", "2"}], 
                    RowBox[{"1", "/", "2"}]], 
                    RowBox[{
                    SuperscriptBox["u", "2"], 
                    RowBox[{"\[DifferentialD]", "u"}]}]}]}, "RowDefault"]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  AllowScriptLevelChange -> False, DefaultBaseStyle -> 
                  "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}, {
                TagBox[
                 GridBox[{{
                    StyleBox[
                    StyleBox[
                    
                    TemplateBox[{
                    "\"Apply \"", "\"the \"", "\"fundamental \"", 
                    "\"theorem \"", "\"of \"", "\"calculus.\\nThe \"", 
                    "\"antiderivative \"", "\"of \"", 
                    TemplateBox[{
                    SuperscriptBox["u", "2"], "\" \""}, "RowDefault"], 
                    "\"is \"", 
                    TemplateBox[{
                    FractionBox[
                    SuperscriptBox["u", "3"], "3"], "\":\""}, "RowDefault"]}, 
                    "RowDefault"], 
                    GrayLevel[0.3], StripOnInput -> False], {
                    LinebreakAdjustments -> {1, 89, 100, 0, 100}, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}, {
                    TemplateBox[{"\" \"", "\"\[LongEqual] \"", 
                    TemplateBox[{
                    FractionBox[
                    SuperscriptBox["u", "3"], "3"], 
                    RowBox[{
                    RowBox[{"-", "1"}], "/", "2"}], 
                    RowBox[{"1", "/", "2"}]}, "", 
                    DisplayFunction :> (SubsuperscriptBox[
                    RowBox[{#, 
                    StyleBox[
                    "\[RightBracketingBar]", SpanMinSize -> 
                    3.5]}], #2, #3]& )]}, "RowDefault"]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  AllowScriptLevelChange -> False, DefaultBaseStyle -> 
                  "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}, {
                TagBox[
                 GridBox[{{
                    StyleBox[
                    StyleBox[
                    TemplateBox[{"\[NoBreak]", "\"\[NoBreak]\"", 
                    
                    TemplateBox[{
                    "\"Evaluate \"", "\"the \"", "\"antiderivative \"", 
                    "\"at \"", "\"the \"", "\"limits \"", "\"and \"", 
                    "\"subtract.\\n \"", 
                    RowBox[{
                    TemplateBox[{
                    FractionBox[
                    SuperscriptBox["u", "3"], "3"], 
                    RowBox[{
                    RowBox[{"-", "1"}], "/", "2"}], 
                    RowBox[{"1", "/", "2"}]}, "", 
                    DisplayFunction :> (SubsuperscriptBox[
                    RowBox[{#, 
                    StyleBox[
                    "\[RightBracketingBar]", SpanMinSize -> 
                    3.5]}], #2, #3]& )], "\[LongEqual]", 
                    RowBox[{
                    RowBox[{
                    FractionBox["1", "3"], " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    FractionBox["1", "2"], ")"}], "3"]}], "-", 
                    RowBox[{"(", 
                    RowBox[{
                    FractionBox["1", "3"], " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"-", 
                    FractionBox["1", "2"]}], ")"}], "3"]}], ")"}]}], 
                    "\[LongEqual]", 
                    FractionBox["1", "12"]}]}, "RowDefault"], "\":\""}, 
                    "RowWithSeparators"], 
                    GrayLevel[0.3], StripOnInput -> False], {
                    LinebreakAdjustments -> {1, 89, 100, 0, 100}, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}, {
                    FrameBox[
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    TemplateBox[{"\"Answer:\""}, "RowDefault"], FontFamily -> 
                    "Helvetica", FontSize -> 12, StripOnInput -> False], 
                    "\[SpanFromLeft]"}, {"\"\"", 
                    TemplateBox[{"\" \"", "\"\[LongEqual] \"", 
                    FractionBox["1", "12"]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {2.5, Automatic}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {2, 0, 3}, "Rows" -> {1.5, 1, 2}}, 
                    AllowScriptLevelChange -> False], "Grid"], FrameStyle -> {
                    AbsoluteThickness[1], 
                    RGBColor[0.52, 0.76, 0.86]}, Background -> 
                    RGBColor[0.91, 0.98, 1], RoundingRadius -> 3, 
                    FrameMargins -> 12, StripOnInput -> False]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  AllowScriptLevelChange -> False, DefaultBaseStyle -> 
                  "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
              AllowScriptLevelChange -> False, DefaultBaseStyle -> "Column", 
              GridBoxDividers -> {
               "Columns" -> {{False}}, "Rows" -> {False, {True}, False}}, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              GridBoxSpacings -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{3}}}, FrameStyle -> 
              GrayLevel[0.7]], "Column"], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement["dataformats", {}, {"plaintext"}]}], 
     XMLElement["expressiontypes", {"count" -> "2"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  "}], 
     XMLElement["states", {"count" -> "2"}, {
       XMLElement[
       "state", {
        "name" -> "More digits", "input" -> "Input__More digits"}, {}], 
       XMLElement[
       "state", {
        "name" -> "Hide steps", "input" -> "Input__Hide steps"}, {}]}]}], 
   Typeset`pod2$$ = XMLElement[
   "pod", {"title" -> "Visual representation of the integral", "scanner" -> 
     "Integral", "id" -> "VisualRepresentationOfTheIntegral", "position" -> 
     "200", "error" -> "false", "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["minput", {}, {"Plot[(-1/2 + x)^2, {x, 0, 1}]"}], 
       XMLElement["cell", {"compressed" -> True, "string" -> False}, {
         Cell[
          BoxData[
           FormBox[
            GraphicsBox[{{
               GraphicsComplexBox[CompressedData["
1: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
                "], {{{}, {
                   EdgeForm[], 
                   Directive[
                    Opacity[0.1], 
                    RGBColor[0, 0, 1]], 
                   GraphicsGroupBox[{
                    PolygonBox[CompressedData["
1:eJwl1FXUVkUAhtHvp7u7QRrpRjqVbkRSGpGW7lQ6pbs7BKVTpUsBAekGaURB
yX3gYq9n5ty+s07aZh1rdggXCoXCSBD2ofHDPpzzOMfTsxpNl+gJwjn31Tkc
4H++oCvfs4snlKI6bRnFj9wmN7nISQ6y8zHZyEoWMpOJjGQgPR+RjrSkoSTV
aMNINnKL1JSgKq0ZwQZukoriVKEV3/EDN0hJfbowmZ08phiVacm3rOc6Kfic
zkxiB48oSk9m8Av/UokWDGcd10hOH2azn/+oRycmsp2HfEIPpvMz/1CReRzi
Fc0ZxlqukozFHA+2tVdvPUUk51m6jxfU5Q+i+L5AY+oRfUNHYrv/rhF0gkbX
bfqAIsR1P6NRdaHG0qP6lu7EcT+pEXWaxtC9+ozPOE1k3+bqQV7SjN8I7/tQ
XcMVkrKIY6HQ+4faS2byK8+pw3wO85oOjGcr9ylMN6ayh7/5lC8Zwmouk4Ta
tGccW7hHIb5hCrt5SgWaMphVXCIxtfiasWzmLwpSniYMYiUXSURN2jGGTdyl
AOVozEBWcIGE1OArRvMTd8hPWRoxgOWcJwH5KEND+rOMP4lPvGDHYKtg72DD
4B0EWwV7Ey3YN3gjwVZECvYM3kSwEcH/Iy+laUA/lnKOdyKVgjI=
                    "]]}]}, {}, {}}}], {}}, {{{{}, {}, 
                 TagBox[{
                   Directive[
                    Opacity[1.], 
                    RGBColor[0.24720000000000014`, 0.24, 0.6], 
                    AbsoluteThickness[1]], 
                   LineBox[CompressedData["
1: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
se8ZKh+BYIEMf41CPBQOz63hFx7F1oSw1XLFJBwIUQjLYYyiRnt0oVgrA4FK
dUdN08dg+2yrkuO3HDg6243qOYyjScvvwu2sQsgyTRtsZCZQOVG2MPO2FL5f
XQpesk4ioGShqkm9DIXHu2sONUwi8+j8fd3BCpC67yx+8p9Cn8zGR5oFr3D1
p7xsocE0dKK9hi9y1MHQkpRWwDvz9z97zqmsWg+G/k3O4YkZRKofqJagvMPn
JGqWesUXxCf5vtvq/x6Pd5NtPt2bRbeiuvLlA81YOmp2OFpjDpa7uELLZVsR
21DLU71uHmlObyKXedthnvIlS9VqHk9Lc0150zpwr1yqbOrjPPaRtUOKjD9j
hcllkinFRJPu61MWWykYeTepoH+ICe0jQd2ifBS0JbzhZTvMhO2HuF6GEAWZ
yrfbr8kz4fnLW+y6NAXa5PbToieY4IuLfO+lQ8FjkcgD6RpMDPiEmy6FUqCq
y7GcasHEkB5H3dJGKqTFRrp0rJgQ3nSTNsxFBf/3V89+XWdi1YnTtmMHFV+S
7OxMbjARcXbv29L9VMSPNdMEbzOx40h4iLcmFZMe5IZkTybaaxWuW5Kp6Dp3
LVPLm4l58xEN6ygqasQVvH74MPGk7HOCXSIV0R8mjl8JYGLJwtvdtYAKJR6N
IoEwJtgWuM5nfaBiz4QwuTmcic3sQwnPOqjgfLVk5R7JRHn7osabXipGzfKE
+6KZGLednRuZpKJdzusnOZYJe6WO0WUmFS/XX+pViGci8vWy+pZVKrJ7pcsn
E5g4+8WSdzdbNyKK1sckJv7N8/99yP8AtxyUDw==
                    "]]}, 
                  Annotation[#, 
                   "Charting`Private`Tag$3938690#1"]& ]}}, {}}}, {
             GridLines -> Dynamic[
                Map[{{#, 
                   GrayLevel[0.7]}}& , 
                 MousePosition[{"Graphics", Graphics}, None]]], 
              AxesOrigin -> {Automatic, 0}, PlotRange -> All, ImageSize -> 
              220., DisplayFunction -> Identity, 
              Ticks -> {Automatic, Automatic}, AxesOrigin -> {0, 0.}, 
              FrameTicks -> {{Automatic, {{0., 
                   FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.01, 
                   0.}, {
                    AbsoluteThickness[0.1]}}, {0.1, 
                   FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.01, 
                   0.}, {
                    AbsoluteThickness[0.1]}}, {0.2, 
                   FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.01, 
                   0.}, {
                    AbsoluteThickness[0.1]}}, {0.3, 
                   FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.01, 
                   0.}, {
                    AbsoluteThickness[0.1]}}, {0.02, 
                   FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                   0.}, {
                    AbsoluteThickness[0.1]}}, {0.04, 
                   FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                   0.}, {
                    AbsoluteThickness[0.1]}}, {0.06, 
                   FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                   0.}, {
                    AbsoluteThickness[0.1]}}, {0.08, 
                   FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                   0.}, {
                    AbsoluteThickness[0.1]}}, {0.12, 
                   FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                   0.}, {
                    AbsoluteThickness[0.1]}}, {0.14, 
                   FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                   0.}, {
                    AbsoluteThickness[0.1]}}, {0.16, 
                   FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                   0.}, {
                    AbsoluteThickness[0.1]}}, {0.18, 
                   FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                   0.}, {
                    AbsoluteThickness[0.1]}}, {0.22, 
                   FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                   0.}, {
                    AbsoluteThickness[0.1]}}, {0.24, 
                   FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                   0.}, {
                    AbsoluteThickness[0.1]}}, {0.26, 
                   FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                   0.}, {
                    AbsoluteThickness[0.1]}}, {0.28, 
                   FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                   0.}, {
                    AbsoluteThickness[0.1]}}, {0.32, 
                   FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                   0.}, {
                    AbsoluteThickness[0.1]}}, {0.34, 
                   FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                   0.}, {
                    AbsoluteThickness[0.1]}}, {0.36, 
                   FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                   0.}, {
                    AbsoluteThickness[0.1]}}, {0.38, 
                   FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                   0.}, {
                    AbsoluteThickness[0.1]}}, {0.4, 
                   FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                   0.}, {
                    AbsoluteThickness[0.1]}}}}, {Automatic, {{0., 
                   FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.01, 
                   0.}, {
                    AbsoluteThickness[0.1]}}, {0.2, 
                   FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.01, 
                   0.}, {
                    AbsoluteThickness[0.1]}}, {0.4, 
                   FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.01, 
                   0.}, {
                    AbsoluteThickness[0.1]}}, {0.6, 
                   FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.01, 
                   0.}, {
                    AbsoluteThickness[0.1]}}, {0.8, 
                   FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.01, 
                   0.}, {
                    AbsoluteThickness[0.1]}}, {1., 
                   FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.01, 
                   0.}, {
                    AbsoluteThickness[0.1]}}, {-0.2, 
                   FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                   0.}, {
                    AbsoluteThickness[0.1]}}, {-0.15, 
                   FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                   0.}, {
                    AbsoluteThickness[0.1]}}, {-0.1, 
                   FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                   0.}, {
                    AbsoluteThickness[0.1]}}, {-0.05, 
                   FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                   0.}, {
                    AbsoluteThickness[0.1]}}, {0.05, 
                   FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                   0.}, {
                    AbsoluteThickness[0.1]}}, {0.1, 
                   FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                   0.}, {
                    AbsoluteThickness[0.1]}}, {0.15, 
                   FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                   0.}, {
                    AbsoluteThickness[0.1]}}, {0.25, 
                   FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                   0.}, {
                    AbsoluteThickness[0.1]}}, {0.3, 
                   FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                   0.}, {
                    AbsoluteThickness[0.1]}}, {0.35, 
                   FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                   0.}, {
                    AbsoluteThickness[0.1]}}, {0.45, 
                   FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                   0.}, {
                    AbsoluteThickness[0.1]}}, {0.5, 
                   FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                   0.}, {
                    AbsoluteThickness[0.1]}}, {0.55, 
                   FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                   0.}, {
                    AbsoluteThickness[0.1]}}, {0.65, 
                   FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                   0.}, {
                    AbsoluteThickness[0.1]}}, {0.7, 
                   FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                   0.}, {
                    AbsoluteThickness[0.1]}}, {0.75, 
                   FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                   0.}, {
                    AbsoluteThickness[0.1]}}, {0.85, 
                   FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                   0.}, {
                    AbsoluteThickness[0.1]}}, {0.9, 
                   FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                   0.}, {
                    AbsoluteThickness[0.1]}}, {0.95, 
                   FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                   0.}, {
                    AbsoluteThickness[0.1]}}, {1.05, 
                   FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                   0.}, {
                    AbsoluteThickness[0.1]}}, {1.1, 
                   FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                   0.}, {
                    AbsoluteThickness[0.1]}}, {1.15, 
                   FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                   0.}, {
                    AbsoluteThickness[0.1]}}, {1.2, 
                   FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                   0.}, {
                    AbsoluteThickness[0.1]}}}}}, GridLines -> {None, None}, 
              DisplayFunction -> Identity, 
              PlotRangePadding -> {{0, 0}, {0, 0}}, PlotRangeClipping -> True,
               ImagePadding -> All, DisplayFunction -> Identity, AspectRatio -> 
              NCache[GoldenRatio^(-1), 0.6180339887498948], 
              Axes -> {True, True}, AxesLabel -> {None, None}, 
              AxesOrigin -> {0, 0.}, AxesStyle -> Directive[
                AbsoluteThickness[0.2]], BaseStyle -> Automatic, 
              DisplayFunction :> Identity, Epilog -> {
                LineBox[
                 NCache[{{0, 0}, {0, 
                    Rational[1, 4]}}, {{0, 0}, {0, 0.25}}]], 
                LineBox[
                 NCache[{{1, 0}, {1, 
                    Rational[1, 4]}}, {{1, 0}, {1, 0.25}}]]}, 
              Frame -> {{False, False}, {False, False}}, 
              FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
              Directive[
                AbsoluteThickness[0.2]], 
              FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
              GridLines -> {None, None}, GridLinesStyle -> {
                GrayLevel[0.85], 
                GrayLevel[0.9]}, ImageSize -> 440., 
              Method -> {
               "DefaultBoundaryStyle" -> Automatic, 
                "DefaultGraphicsInteraction" -> {
                 "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                  "Effects" -> {
                   "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                "DefaultMeshStyle" -> PointSize[Medium], "PointSizeFunction" -> 
                "SmallPointSize", "ScalingFunctions" -> None, 
                "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}, "AxesInFront" -> True}, 
              PlotRange -> {{-0.1, 1.1}, {0., 0.35999997061224553`}}, 
              PlotRangeClipping -> True, 
              PlotRangePadding -> {{Automatic, Automatic}, {
                Automatic, Automatic}}, Prolog -> {
                Opacity[0], 
                TagBox[
                 RectangleBox[
                  Scaled[{0, 0}], 
                  Scaled[{1, 1}]], Annotation[#, "Plot", "Frame"]& ]}, 
              Ticks -> {Automatic, Automatic}}], TraditionalForm]], 
          "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {"minput,computabledata,formatteddata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n  ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n "}]}], 
   Typeset`pod3$$ = XMLElement[
   "pod", {"title" -> "Riemann sums", "scanner" -> "Integral", "id" -> 
     "RiemannSums", "position" -> "300", "error" -> "false", "numsubpods" -> 
     "2"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             GridBox[{{
                StyleBox[
                 TagBox[
                  GridBox[{{
                    TagBox[
                    PaneBox[
                    StyleBox[
                    "\"left sum\"", {
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 
                    BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                    $CellContext`TagBoxWrapper["Label"]], 
                    TagBox[
                    RowBox[{
                    FractionBox["1", 
                    RowBox[{"6", " ", 
                    SuperscriptBox["n", "2"]}]], "+", 
                    FractionBox["1", "12"]}], Identity]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Left, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxBackground -> {"Columns" -> {None, None}}, 
                   GridBoxFrame -> {
                    "Columns" -> {{True}}, "Rows" -> {{True}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{1.5}, 2}, "Rows" -> {{1}}}, FrameStyle -> 
                   GrayLevel[0.84], BaselinePosition -> Automatic, 
                   AllowScriptLevelChange -> False], "Grid"], 
                 LineSpacing -> {0.9, 0, 1.5}, LineIndent -> 0, StripOnInput -> 
                 False]}, {
                StyleBox[
                 
                 RowBox[{
                  "\"(\"", "\[NoBreak]", 
                   "\"assuming subintervals of equal length\"", "\[NoBreak]", 
                   "\")\""}], {FontFamily -> "Verdana", FontSize -> 10, 
                  GrayLevel[0.5], LinebreakAdjustments -> {1, 100, 1, 0, 100},
                   LineIndent -> 0}]}}, 
              GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
              "Column", 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
             "Column"], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,computabledata,formatteddata,formuladata"}]}], 
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> True, "string" -> False}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             FormBox[
              StyleBox[
               
               DynamicModuleBox[{
                CalculateScan`RiemannSumScanner`Private`intervals$$ = 10, 
                 CalculateScan`RiemannSumScanner`Private`method$$ = 
                 CalculateScan`RiemannSumScanner`Private`LeftValue, 
                 CalculateUtilities`GraphicsUtilities`Private`more$$ = False, 
                 Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
                 Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, 
                 Typeset`animvar$$ = 1, Typeset`name$$ = "\"untitled\"", 
                 Typeset`specs$$ = {{
                    Hold[
                    CalculateUtilities`GraphicsUtilities`Private`more$$], {
                    False, True}}, {{
                    Hold[CalculateScan`RiemannSumScanner`Private`intervals$$],
                     10, "number of subintervals"}, 2, 100, 1}, {{
                    Hold[CalculateScan`RiemannSumScanner`Private`method$$], 
                    CalculateScan`RiemannSumScanner`Private`LeftValue, 
                    "summation method"}, {
                    CalculateScan`RiemannSumScanner`Private`LeftValue -> 
                    "left endpoint", 
                    CalculateScan`RiemannSumScanner`Private`MidpointValue -> 
                    "midpoint", 
                    CalculateScan`RiemannSumScanner`Private`RightValue -> 
                    "right endpoint"}}, {
                    Hold[
                    Style[
                    Overlay[{
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "WABitmaps", "PodInfoBackground"]]], 
                    Pane[
                    Column[{
                    Manipulate`Place[1], 
                    Manipulate`Place[2]}], 
                    ImageMargins -> {{20, 30}, {10, 10}}]}, {1, 2}, 2, 
                    Alignment -> {Left, Top}]]], 
                    Manipulate`Dump`ThisIsNotAControl}}, Typeset`size$$ = 
                 Automatic, Typeset`update$$ = 0, Typeset`initDone$$ = False, 
                 Typeset`skipInitDone$$ = False, 
                 CalculateUtilities`GraphicsUtilities`Private`more$1492113$$ = 
                 False, CalculateScan`RiemannSumScanner`Private`intervals$\
1492118$$ = 0, CalculateScan`RiemannSumScanner`Private`method$1492119$$ = 
                 False}, 
                DynamicBox[
                 Manipulate`ManipulateBoxes[
                 2, TraditionalForm, 
                  "Variables" :> {
                   CalculateScan`RiemannSumScanner`Private`intervals$$ = 10, 
                    CalculateScan`RiemannSumScanner`Private`method$$ = 
                    CalculateScan`RiemannSumScanner`Private`LeftValue, 
                    CalculateUtilities`GraphicsUtilities`Private`more$$ = 
                    False}, "ControllerVariables" :> {
                    Hold[
                    CalculateUtilities`GraphicsUtilities`Private`more$$, 
                    CalculateUtilities`GraphicsUtilities`Private`more$1492113$\
$, False], 
                    Hold[
                    CalculateScan`RiemannSumScanner`Private`intervals$$, 
                    CalculateScan`RiemannSumScanner`Private`intervals$1492118$\
$, 0], 
                    Hold[
                    CalculateScan`RiemannSumScanner`Private`method$$, 
                    CalculateScan`RiemannSumScanner`Private`method$1492119$$, 
                    False]}, 
                  "OtherVariables" :> {
                   Typeset`show$$, Typeset`bookmarkList$$, 
                    Typeset`bookmarkMode$$, Typeset`animator$$, 
                    Typeset`animvar$$, Typeset`name$$, Typeset`specs$$, 
                    Typeset`size$$, Typeset`update$$, Typeset`initDone$$, 
                    Typeset`skipInitDone$$}, "Body" :> Quiet[
                    
                    With[{CalculateScan`RiemannSumScanner`Private`delta$ = (1 + 
                    0)/CalculateScan`RiemannSumScanner`Private`intervals$$, 
                    CalculateScan`RiemannSumScanner`Private`epsilon$ = 
                    RandomReal[{0, 0.001}]}, 
                    Labeled[
                    
                    Plot[(Rational[-1, 
                    2] + $CellContext`x)^2, {$CellContext`x, \
-0.09999999999999998, 1.1}, 
                    PlotRange -> {{-0.09999999999999998, 
                    1.1}, {-0.024999999999999994`, 0.275}}, Prolog -> Table[
                    (Flatten[{
                    If[
                    TrueQ[Part[#, 2, 2] > 0], {
                    Opacity[0.1], Blue, 
                    EdgeForm[
                    RGBColor[{0.63, 0.64, 0.84}]]}, {
                    Opacity[0.1], Red, 
                    EdgeForm[
                    RGBColor[{0.9, 0.64, 0.64}]]}], 
                    Polygon[#]}]& )[
                    ({{#, 0}, {#, #3}, {#2, #3}, {#2, 0}}& )[
                    0 + CalculateScan`RiemannSumScanner`Private`i 
                    CalculateScan`RiemannSumScanner`Private`delta$, 
                    0 + (CalculateScan`RiemannSumScanner`Private`i + 1) 
                    CalculateScan`RiemannSumScanner`Private`delta$, 
                    (If[
                    Or[
                    Not[
                    NumericQ[#]], 
                    Not[
                    FreeQ[#, 
                    Alternatives[Complex, I]]]], 0, #]& )[
                    Quiet[
                    Which[
                    MatchQ[
                    CalculateScan`RiemannSumScanner`Private`method$$, 
                    CalculateScan`RiemannSumScanner`Private`LeftValue], 
                    (If[
                    Not[
                    NumericQ[#]], 
                    N[
                    
                    ReplaceAll[(Rational[-1, 
                    2] + $CellContext`x)^2, $CellContext`x -> 
                    0 + CalculateScan`RiemannSumScanner`Private`i 
                    CalculateScan`RiemannSumScanner`Private`delta$ + 
                    CalculateScan`RiemannSumScanner`Private`epsilon$]], #]& )[
                    N[
                    
                    ReplaceAll[(Rational[-1, 
                    2] + $CellContext`x)^2, $CellContext`x -> 
                    0 + CalculateScan`RiemannSumScanner`Private`i 
                    CalculateScan`RiemannSumScanner`Private`delta$]]], 
                    MatchQ[
                    CalculateScan`RiemannSumScanner`Private`method$$, 
                    CalculateScan`RiemannSumScanner`Private`MidpointValue], 
                    (If[
                    Not[
                    NumericQ[#]], 
                    N[
                    
                    ReplaceAll[(Rational[-1, 
                    2] + $CellContext`x)^2, $CellContext`x -> 
                    0 + (CalculateScan`RiemannSumScanner`Private`i 
                    CalculateScan`RiemannSumScanner`Private`delta$ + (
                    CalculateScan`RiemannSumScanner`Private`i + 1) 
                    CalculateScan`RiemannSumScanner`Private`delta$)/2 + 
                    CalculateScan`RiemannSumScanner`Private`epsilon$]], #]& )[
                    N[
                    
                    ReplaceAll[(Rational[-1, 
                    2] + $CellContext`x)^2, $CellContext`x -> 
                    0 + (CalculateScan`RiemannSumScanner`Private`i 
                    CalculateScan`RiemannSumScanner`Private`delta$ + (
                    CalculateScan`RiemannSumScanner`Private`i + 1) 
                    CalculateScan`RiemannSumScanner`Private`delta$)/2]]], 
                    MatchQ[
                    CalculateScan`RiemannSumScanner`Private`method$$, 
                    CalculateScan`RiemannSumScanner`Private`RightValue], 
                    (If[
                    Not[
                    NumericQ[#]], 
                    N[
                    
                    ReplaceAll[(Rational[-1, 
                    2] + $CellContext`x)^2, $CellContext`x -> 
                    0 + (CalculateScan`RiemannSumScanner`Private`i + 1) 
                    CalculateScan`RiemannSumScanner`Private`delta$ - 
                    CalculateScan`RiemannSumScanner`Private`epsilon$]], #]& )[
                    N[
                    
                    ReplaceAll[(Rational[-1, 
                    2] + $CellContext`x)^2, $CellContext`x -> 
                    0 + (CalculateScan`RiemannSumScanner`Private`i + 1) 
                    CalculateScan`RiemannSumScanner`Private`delta$]]], True, 
                    0]]]]], {
                    CalculateScan`RiemannSumScanner`Private`i, 0, 
                    CalculateScan`RiemannSumScanner`Private`intervals$$ - 1}],
                     PlotStyle -> AbsoluteThickness[1], ImageSize -> 1.5 200], 
                    (If[
                    NumericQ[#], 
                    Grid[{{
                    Row[{
                    Style["integral: ", 
                    GrayLevel[0.6]], 
                    TildeTilde[
                    Rational[1, 12], 0.08333333333333333]}]}, {
                    Row[{
                    Style["Riemann sum: ", 
                    GrayLevel[0.6]], #}]}, {
                    Row[{
                    Style["error: ", 
                    GrayLevel[0.6]], 
                    Abs[# - Rational[1, 12]]}]}}, Alignment -> ":"], ""]& )[
                    (Chop[
                    N[
                    TimeConstrained[
                    Simplify[#], 0.5, #]]]& )[
                    Quiet[CalculateScan`RiemannSumScanner`Private`delta$ Sum[
                    
                    ReplaceAll[(
                    Rational[-1, 2] + $CellContext`x)^2, {$CellContext`x -> 
                    0 + CalculateScan`RiemannSumScanner`Private`k 
                    CalculateScan`RiemannSumScanner`Private`delta$ + 
                    CalculateScan`RiemannSumScanner`Private`delta$ 
                    ReplaceAll[
                    CalculateScan`RiemannSumScanner`Private`method$$, {
                    CalculateScan`RiemannSumScanner`Private`LeftValue -> 0, 
                    CalculateScan`RiemannSumScanner`Private`MidpointValue -> 
                    Rational[1, 2], 
                    CalculateScan`RiemannSumScanner`Private`RightValue -> 
                    1}]}], {
                    CalculateScan`RiemannSumScanner`Private`k, 0, 
                    CalculateScan`RiemannSumScanner`Private`intervals$$ - 
                    1}]]]]]]], 
                  "Specifications" :> {{
                    CalculateUtilities`GraphicsUtilities`Private`more$$, {
                    False, True}, ControlType -> None}, {{
                    CalculateScan`RiemannSumScanner`Private`intervals$$, 10, 
                    "number of subintervals"}, 2, 100, 1, ControlPlacement -> 
                    1}, {{CalculateScan`RiemannSumScanner`Private`method$$, 
                    CalculateScan`RiemannSumScanner`Private`LeftValue, 
                    "summation method"}, {
                    CalculateScan`RiemannSumScanner`Private`LeftValue -> 
                    "left endpoint", 
                    CalculateScan`RiemannSumScanner`Private`MidpointValue -> 
                    "midpoint", 
                    CalculateScan`RiemannSumScanner`Private`RightValue -> 
                    "right endpoint"}, ControlPlacement -> 2}, 
                    Style[
                    Overlay[{
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "WABitmaps", "PodInfoBackground"]]], 
                    Pane[
                    Column[{
                    Manipulate`Place[1], 
                    Manipulate`Place[2]}], 
                    ImageMargins -> {{20, 30}, {10, 10}}]}, {1, 2}, 2, 
                    Alignment -> {Left, Top}]]}, 
                  "Options" :> {
                   ControlPlacement -> Bottom, 
                    FrameMargins -> {{0, 0}, {0, 10}}, Paneled -> False, 
                    AppearanceElements -> {}, 
                    LabelStyle -> {
                    "DialogStyle", FontColor -> GrayLevel[0.25]}}, 
                  "DefaultOptions" :> {}], SingleEvaluation -> True], 
                Initialization :> ({None, 
                   ReleaseHold[
                    Uncompress[
                    "6:eJztVtuO0zAQbSn3O/\
wBEs9IhfKwD0hAl11WWqAk5b2ziZNYuHawnb3w8+Cxm6TZdivFdAGt0odRPWmOZ86cmc6zIxEk/\
V6vp64b81GwOLmFp6fGjMU8FwWPP5zmkihFBU+u4bO7xoRE7xIGZyR2vpvG7Ak5B+3Ob/\
B9YFHBQJNvmjKqKVGzfQl5RiNVeyaSHpufzJiIgNGf5PlwtDN8PdpxMBjLBLQmkqtXbSHzTIIiSQ+\
BbhjzngH/7o5PyuPngrGQ/\
CgIj4h6ZLxTCbGBERwY5uN969Vm6j4mpoHHIONLp8nKc9z2AqUl5emUzHN842Kyhm2BQabKcfOg5Ga\
Tglz4t/GBCG1MzmOTtmdLoF8YV4y+87L659wN8Py2LbwUJ+uJw/\
zeMeQNND0mapXOF63r5BiputZGv+DqsubLVoO8eMrU/\
0uHVOnVMF62DYPMj0yN12tvFX7UFl7k2PULcT805otzlIDrhkMluE8iLtgiimbKAyfR9umq3Dgcxr2\
K7xCdPhWscAITZ9kvtj8eV+\
D1phBi7WZbkA6vZ0BAcmJcseV2l6ZUjzOQEBngxXX9ssmmog7F4872tac8pmaAOUI2LU9oDpKluoOO\
sq9/VNxKLueaDHk/4JqkRG4U/R2sjzTk8ngqPCMJ8YKmXr05rJKagPSW/aAECXPgFCHpL/\
Ox39zD5UogVfsS1SUdiwNbmlP/\
JPplgQ8JT3XW3LE9R5d322I2gTipVRfQJFmeNttjut9kunFDc6D7kuBbEv+\
B3m0K3abwVzeFlT24WxO6NaFbE7o1oVsT/t81wUaM/0q/Ab91uKY="]]}; 
                 Typeset`initDone$$ = True), DynamicModuleValues :> {}, 
                Deinitialization :> None, 
                UntrackedVariables :> {Typeset`size$$}, 
                SynchronousInitialization -> True, 
                UnsavedVariables :> {Typeset`initDone$$}, 
                UndoTrackedVariables :> {
                 Typeset`show$$, Typeset`bookmarkMode$$}], "Manipulate", 
               Deployed -> True, StripOnInput -> False], TraditionalForm], 
             Manipulate`InterpretManipulate[1]], TraditionalForm]], 
          "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement["dataformats", {}, {}]}], 
     XMLElement["expressiontypes", {"count" -> "2"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Grid"}, {}], "\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  "}], 
     XMLElement["states", {"count" -> "1"}, {
       XMLElement[
       "state", {
        "name" -> "More cases", "input" -> 
         "RiemannSums__More cases"}, {}]}]}], Typeset`pod4$$ = XMLElement[
   "pod", {"title" -> "Indefinite integral", "scanner" -> "Integral", "id" -> 
     "IndefiniteIntegral", "position" -> "400", "error" -> "false", 
     "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["minput", {}, {"Integrate[(-1/2 + x)^2, x]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            RowBox[{
              TagBox[
               RowBox[{"\[Integral]", 
                 RowBox[{
                   TagBox[
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"x", "-", 
                    FractionBox["1", "2"]}], ")"}], "2"], HoldForm], 
                   RowBox[{"\[DifferentialD]", "x"}]}]}], HoldForm], 
              "\[LongEqual]", 
              TagBox[
               StyleBox[
                RowBox[{
                  StyleBox[
                   RowBox[{
                    FractionBox[
                    SuperscriptBox["x", "3"], "3"], "-", 
                    FractionBox[
                    SuperscriptBox["x", "2"], "2"], "+", 
                    FractionBox["x", "4"]}], {
                    GrayLevel[0], LinebreakAdjustments -> {1, 100, 1, 0, 100},
                     LineIndent -> 0}], "+", 
                  StyleBox[
                  "\"constant\"", {
                   Magnification -> 0.9 Inherited, FontFamily -> "Helvetica", 
                    FontSize -> Inherited, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}], {
                 GrayLevel[0.6], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                 LineIndent -> 0}], Identity]}], TraditionalForm]], 
          "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,moutput,computabledata,formatteddata,formuladata"}]}\
], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  "}], 
     XMLElement["states", {"count" -> "1"}, {
       XMLElement[
       "state", {
        "name" -> "Step-by-step solution", "input" -> 
         "IndefiniteIntegral__Step-by-step solution", "stepbystep" -> 
         "true"}, {}]}]}], Typeset`aux1$$ = {
   True, False, {False, False}, True}, Typeset`aux2$$ = {
   True, False, {False}, True}, Typeset`aux3$$ = {
   True, False, {False, False}, True}, Typeset`aux4$$ = {
   True, False, {False}, True}, Typeset`asyncpods$$ = {}, 
   Typeset`nonpods$$ = {}, Typeset`initdone$$ = 
   FrontEnd`SuppressEvaluationHash[True], Typeset`queryinfo$$ = {
   "success" -> "true", "error" -> 
    "false", {"http://www.w3.org/XML/1998/namespace", "space"} -> "preserve", 
    "numpods" -> "4", "datatypes" -> "", "timedout" -> "", "timedoutpods" -> 
    "", "timing" -> "0.882", "parsetiming" -> "0.5", "parsetimedout" -> 
    "false", "recalculate" -> "", "id" -> 
    "MSP40220072e27e7dh941f00004hacgi4b01d7c59a", "host" -> 
    "https://www6b3.wolframalpha.com", "server" -> "2", "related" -> 
    "https://www6b3.wolframalpha.com/api/v1/relatedQueries.jsp?id=\
MSPa40320072e27e7dh941f00001h12369a6e52613h724077331436509559", "version" -> 
    "2.6", "inputstring" -> "Integrate (x-(1/2))^2 from 0 to 1"}, 
   Typeset`sessioninfo$$ = {
   "TimeZone" -> 1., 
    "Date" -> {2022, 3, 1, 13, 6, 57.2742541`9.510534275640147}, "Line" -> 36,
     "SessionID" -> 18717537931614503714}, Typeset`showpods$$ = {1, 2, 3, 4}, 
   Typeset`failedpods$$ = {}, Typeset`chosen$$ = {}, Typeset`open$$ = False, 
   Typeset`newq$$ = "Integrate (x-(1/2))^2 from 0 to 1"}, 
   DynamicBox[ToBoxes[
     AlphaIntegration`FormatAlphaResults[
      Dynamic[{
       1, {Typeset`pod1$$, Typeset`pod2$$, Typeset`pod3$$, Typeset`pod4$$}, {
        Typeset`aux1$$, Typeset`aux2$$, Typeset`aux3$$, Typeset`aux4$$}, 
        Typeset`chosen$$, Typeset`open$$, Typeset`elements$$, Typeset`q$$, 
        Typeset`opts$$, Typeset`nonpods$$, Typeset`queryinfo$$, 
        Typeset`sessioninfo$$, Typeset`showpods$$, Typeset`failedpods$$, 
        Typeset`newq$$}]], StandardForm],
    ImageSizeCache->{1371.6, {1208.8767091105226`, 1219.7232908894775`}},
    TrackedSymbols:>{Typeset`showpods$$, Typeset`failedpods$$}],
   DynamicModuleValues:>{},
   Initialization:>If[
     And[
      Not[Typeset`initdone$$ === True], 
      Not[Typeset`initdone$$ === FrontEnd`SuppressEvaluationHash[True]]], 
     Null; WolframAlphaClient`Private`doAsyncUpdates[
       Hold[{Typeset`pod1$$, Typeset`pod2$$, Typeset`pod3$$, Typeset`pod4$$}],
        Typeset`asyncpods$$, 
       Dynamic[Typeset`failedpods$$]]; Typeset`asyncpods$$ = {}; 
     Typeset`initdone$$ = FrontEnd`SuppressEvaluationHash[True]],
   SynchronousInitialization->False],
  BaseStyle->{Deployed -> True},
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True]], "Print", "WolframAlphaFullOutput",
 CellChangeTimes->{
  3.8551252173124456`*^9},ExpressionUUID->"4620132d-cde7-410a-910a-\
8488605f263c"]
}, Open  ]],

Cell["End of the presentation.", "SideNote",
 CellChangeTimes->{{3.855125243825939*^9, 
  3.8551252576549053`*^9}},ExpressionUUID->"912dfa6e-e5ff-4586-843d-\
3ca1ff358dc0"]
}, Open  ]]
},
NotebookAutoSave->True,
ScreenStyleEnvironment->"Slideshow Presentation",
WindowSize->{1440, 756.75},
WindowMargins->{{-6, Automatic}, {Automatic, -6}},
TaggingRules->{
 "WelcomeScreenSettings" -> {"FEStarting" -> False}, "TryRealOnly" -> False, 
  "PresenterSettings" -> {
   "SlideBreakStyles" -> {}, "ShowSlideBreaks" -> False, 
    "Dialogs" -> {"PresenterControlsPalette" -> 0}, 
    "WindowSize" -> {1152., 579.6}, 
    "WindowMargins" -> {{-5.3999999999999995`, -5.399999999999864}, \
{-5.399999999999977, -5.3999999999999995`}}, "ShowNavigationBar" -> True, 
    "UserModifications" -> {{
      "Input", CellMargins :> 
       Dynamic[{{
          0.135 FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}], 
           0.02999999999999998 
           FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]}, {
          0.019728556521739132` 
           FrontEnd`AbsoluteCurrentValue[{WindowSize, 2}], 
           0.11199100621118013` 
           FrontEnd`AbsoluteCurrentValue[{WindowSize, 2}]}}]}, {
      "Print", CellMargins :> 
       Dynamic[{{
          0.01736111111111112 FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}], 
           0.008680555555555556 
           FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]}, {
          0.013802622498274672` 
           FrontEnd`AbsoluteCurrentValue[{WindowSize, 2}], 
           0.025879917184265012` 
           FrontEnd`AbsoluteCurrentValue[{WindowSize, 2}]}}]}, {
      "WolframAlphaLong", CellMargins :> 
       Dynamic[{{
          0.135 FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}], 0.03 
           FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]}, {
          0.01940299985611511 FrontEnd`AbsoluteCurrentValue[{WindowSize, 2}], 
           0.11138058807810894` 
           FrontEnd`AbsoluteCurrentValue[{WindowSize, 2}]}}]}, {
      "Output", CellMargins :> 
       Dynamic[{{0.1 FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}], 0.}, {
          0.02587991718426501 FrontEnd`AbsoluteCurrentValue[{WindowSize, 2}], 
           0.}}]}, {
      "SlideShowNavigationBar", CellMargins :> 
       Dynamic[{{0.05 FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}], 0.}, {
          0.02587991718426501 FrontEnd`AbsoluteCurrentValue[{WindowSize, 2}], 
           0.}}]}, {
      "Text", CellMargins :> 
       Dynamic[{{
          0.135 FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}], 0.03 
           FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]}, {
          0.0124074 FrontEnd`AbsoluteCurrentValue[{WindowSize, 2}], 
           0.11240739999999999` 
           FrontEnd`AbsoluteCurrentValue[{WindowSize, 2}]}}]}}}},
Magnification:>0.9 Inherited,
FrontEndVersion->"14.0 for Microsoft Windows (64-bit) (December 12, 2023)",
StyleDefinitions->Notebook[{
   Cell[
    StyleData[
    StyleDefinitions -> 
     FrontEnd`FileName[{"PresenterTools"}, "Default.nb", CharacterEncoding -> 
       "UTF-8"]]], 
   Cell[
    StyleData["Notebook", "Slideshow Presentation"], 
    NotebookEventActions -> {ParentList, "HomeKeyDown" :> FrontEndTokenExecute[
        NotebookObject["3aabb2e6-fa4a-481c-b375-59299d483de2"], 
        "ScrollPageFirst"], "LeftArrowKeyDown" :> FrontEndTokenExecute[
        NotebookObject["3aabb2e6-fa4a-481c-b375-59299d483de2"], 
        "ScrollPagePrevious"], "RightArrowKeyDown" :> FrontEndTokenExecute[
        NotebookObject["3aabb2e6-fa4a-481c-b375-59299d483de2"], 
        "ScrollPageNext"], "EndKeyDown" :> FrontEndTokenExecute[
        NotebookObject["3aabb2e6-fa4a-481c-b375-59299d483de2"], 
        "ScrollPageLast"], "NotAssigned" :> PresenterTools`EndPresentation[
        NotebookObject["3aabb2e6-fa4a-481c-b375-59299d483de2"], 
        "KeyboardShortcut"]}]}, WindowSize -> {579.75, 486.75}, 
  WindowMargins -> {{279, Automatic}, {Automatic, 39.75}}, Visible -> False, 
  FrontEndVersion -> 
  "14.0 for Microsoft Windows (64-bit) (December 12, 2023)", StyleDefinitions -> 
  "PrivateStylesheetFormatting.nb"],
ExpressionUUID->"3aabb2e6-fa4a-481c-b375-59299d483de2"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "SlideShowHeader"->{
  Cell[580, 22, 122, 2, 1, "SlideShowNavigationBar",ExpressionUUID->"5db650d0-631c-4499-979a-39b261587dbb",
   CellTags->"SlideShowHeader"],
  Cell[1977, 60, 122, 2, 1, "SlideShowNavigationBar",ExpressionUUID->"bb4a671c-1796-405f-bff7-3289408c1f3c",
   CellTags->"SlideShowHeader"],
  Cell[5034, 153, 122, 2, 1, "SlideShowNavigationBar",ExpressionUUID->"76642f3f-335b-42ec-a611-f4b5e0dda7ba",
   CellTags->"SlideShowHeader"],
  Cell[19831, 464, 122, 2, 1, "SlideShowNavigationBar",ExpressionUUID->"276ece49-db6f-44ff-b407-85aef40795bb",
   CellTags->"SlideShowHeader"],
  Cell[22412, 538, 122, 2, 1, "SlideShowNavigationBar",ExpressionUUID->"e16c2549-9684-491f-87e8-fafbf5be272b",
   CellTags->"SlideShowHeader"],
  Cell[152410, 3032, 288, 5, 21, "SlideShowNavigationBar",ExpressionUUID->"285fb881-d3b7-4a7a-84f2-b6430a75e336",
   CellTags->"SlideShowHeader"],
  Cell[173654, 3491, 122, 2, 1, "SlideShowNavigationBar",ExpressionUUID->"869baab5-339c-4341-a92d-71d8c04683f5",
   CellTags->"SlideShowHeader"],
  Cell[202206, 4051, 122, 2, 1, "SlideShowNavigationBar",ExpressionUUID->"a830c7bb-63ed-4a40-a15b-e4d7dcbd6227",
   CellTags->"SlideShowHeader"],
  Cell[229515, 4589, 122, 2, 1, "SlideShowNavigationBar",ExpressionUUID->"648e7d59-8b07-4d6a-b039-be4bec6ed396",
   CellTags->"SlideShowHeader"],
  Cell[271318, 5396, 122, 2, 1, "SlideShowNavigationBar",ExpressionUUID->"10d81b53-d176-4fb3-b531-bbab77a678eb",
   CellTags->"SlideShowHeader"],
  Cell[280595, 5589, 122, 2, 1, "SlideShowNavigationBar",ExpressionUUID->"4e2cfac5-8168-4f29-9f8d-9a8f81d08791",
   CellTags->"SlideShowHeader"],
  Cell[282064, 5627, 122, 2, 1, "SlideShowNavigationBar",ExpressionUUID->"47fba31a-edda-4017-95f2-48c426074c48",
   CellTags->"SlideShowHeader"],
  Cell[291955, 5837, 122, 2, 1, "SlideShowNavigationBar",ExpressionUUID->"54e6d8ff-f523-4cc6-a4b0-23da489838cc",
   CellTags->"SlideShowHeader"],
  Cell[295543, 5942, 122, 2, 1, "SlideShowNavigationBar",ExpressionUUID->"d8b19bc6-3b8f-4a51-8124-bd3de62c7b7e",
   CellTags->"SlideShowHeader"],
  Cell[308796, 6207, 122, 2, 1, "SlideShowNavigationBar",ExpressionUUID->"4e12bead-708e-41f3-967b-382a078ff0db",
   CellTags->"SlideShowHeader"],
  Cell[310043, 6244, 122, 2, 1, "SlideShowNavigationBar",ExpressionUUID->"c38477b6-e633-483c-8492-1d237b85e72f",
   CellTags->"SlideShowHeader"],
  Cell[310719, 6261, 122, 2, 1, "SlideShowNavigationBar",ExpressionUUID->"49bea496-b4d4-42dc-bfe5-5ed1f6d2460d",
   CellTags->"SlideShowHeader"],
  Cell[312153, 6306, 122, 2, 1, "SlideShowNavigationBar",ExpressionUUID->"88b5b411-a99c-42e0-a19a-8a19fdc12bfa",
   CellTags->"SlideShowHeader"],
  Cell[312823, 6323, 122, 2, 1, "SlideShowNavigationBar",ExpressionUUID->"9b6da5ab-6d38-41e9-b7a5-c3fc6108076e",
   CellTags->"SlideShowHeader"],
  Cell[322660, 6612, 122, 2, 1, "SlideShowNavigationBar",ExpressionUUID->"c31c1659-e630-4bd0-bd70-663d6410795f",
   CellTags->"SlideShowHeader"],
  Cell[324132, 6656, 122, 2, 1, "SlideShowNavigationBar",ExpressionUUID->"675c582b-90bc-419f-83d1-2b0f42d40a7f",
   CellTags->"SlideShowHeader"],
  Cell[351228, 7204, 122, 2, 1, "SlideShowNavigationBar",ExpressionUUID->"a9b0651e-bc4a-4c4d-81b2-770de0705fe9",
   CellTags->"SlideShowHeader"],
  Cell[378526, 7740, 122, 2, 1, "SlideShowNavigationBar",ExpressionUUID->"673a9726-1ea8-444b-95ba-02d6ecd80fb1",
   CellTags->"SlideShowHeader"],
  Cell[435370, 8896, 122, 2, 1, "SlideShowNavigationBar",ExpressionUUID->"c94d2937-d166-4fcc-8417-163ca62decf4",
   CellTags->"SlideShowHeader"]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"SlideShowHeader", 507964, 10343}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 122, 2, 1, "SlideShowNavigationBar",ExpressionUUID->"5db650d0-631c-4499-979a-39b261587dbb",
 CellTags->"SlideShowHeader"],
Cell[705, 26, 474, 8, 246, "Title",ExpressionUUID->"620dc577-4893-4e94-86b2-0aa9eec94068"],
Cell[1182, 36, 190, 3, 71, "Author",ExpressionUUID->"39d614b9-6960-491b-a546-d9d394e64519"],
Cell[1375, 41, 316, 5, 49, "Affiliation",ExpressionUUID->"1dca433f-2621-4df7-92fe-a72298503036"],
Cell[1694, 48, 246, 7, 91, "Affiliation",ExpressionUUID->"1645a041-1075-42ff-bd9b-911e78ec92ab"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1977, 60, 122, 2, 1, "SlideShowNavigationBar",ExpressionUUID->"bb4a671c-1796-405f-bff7-3289408c1f3c",
 CellTags->"SlideShowHeader"],
Cell[2102, 64, 1146, 29, 123, "Input",ExpressionUUID->"26a306ed-d4b4-4ba0-9b4b-e51696b0fbf1"],
Cell[CellGroupData[{
Cell[3273, 97, 197, 3, 65, "Input",ExpressionUUID->"d2c0facc-1ee8-4706-aab6-b5475bcb5d5c"],
Cell[3473, 102, 1512, 45, 128, "Output",ExpressionUUID->"588adf6b-831d-c14b-8169-38bb2cf9e9ff"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[5034, 153, 122, 2, 1, "SlideShowNavigationBar",ExpressionUUID->"76642f3f-335b-42ec-a611-f4b5e0dda7ba",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[5181, 159, 1555, 28, 102, "Input",ExpressionUUID->"d39374ee-cdf9-4118-9c76-ad421ab09f62"],
Cell[6739, 189, 12887, 264, 445, "Output",ExpressionUUID->"20c32c40-caef-f24f-bb75-a31f5e91c623"]
}, Open  ]],
Cell[19641, 456, 153, 3, 65, "Input",ExpressionUUID->"2c8ad585-8101-4c63-ab74-29abd8407dc8"]
}, Open  ]],
Cell[CellGroupData[{
Cell[19831, 464, 122, 2, 1, "SlideShowNavigationBar",ExpressionUUID->"276ece49-db6f-44ff-b407-85aef40795bb",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[19978, 470, 513, 10, 129, "Item",ExpressionUUID->"0ca1a13b-cfa2-432e-a782-c1a67a09e7c8"],
Cell[20494, 482, 421, 10, 65, "Input",ExpressionUUID->"580d38fd-bce8-4105-a9ff-5d98c3cdfe7c"],
Cell[CellGroupData[{
Cell[20940, 496, 198, 3, 65, "Input",ExpressionUUID->"6e96882a-9b60-486b-bdc3-c5acd2b3aea2"],
Cell[21141, 501, 497, 10, 65, "Output",ExpressionUUID->"6c362222-6f76-714c-b1a3-56748af6e242"]
}, Open  ]],
Cell[CellGroupData[{
Cell[21675, 516, 151, 3, 65, "Input",ExpressionUUID->"15a22bb5-7da8-4aaa-b795-6ef7cc1fba09"],
Cell[21829, 521, 522, 10, 65, "Output",ExpressionUUID->"d5dd5e4d-c2ee-7c4e-ae92-a7ad18119ed6"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[22412, 538, 122, 2, 1, "SlideShowNavigationBar",ExpressionUUID->"e16c2549-9684-491f-87e8-fafbf5be272b",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[22559, 544, 526, 9, 139, "WolframAlphaLong",ExpressionUUID->"6bb0b635-c9a9-44dd-bc7f-80d160cbabee"],
Cell[23088, 555, 129273, 2471, 2196, "Print",ExpressionUUID->"1d200c73-5682-734a-a186-765f037e9039"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[152410, 3032, 288, 5, 21, "SlideShowNavigationBar",ExpressionUUID->"285fb881-d3b7-4a7a-84f2-b6430a75e336",
 CellTags->"SlideShowHeader"],
Cell[152701, 3039, 949, 25, 68, "Input",ExpressionUUID->"7fd410f0-d375-483f-bec0-a0ae82b18012"],
Cell[CellGroupData[{
Cell[153675, 3068, 363, 6, 46, "Input",ExpressionUUID->"7d8a05fd-eadd-4f87-927d-7e87d5e3f377"],
Cell[154041, 3076, 1939, 52, 109, "Output",ExpressionUUID->"2bf3f20c-61b6-5944-a953-1363c07261ec"]
}, Open  ]],
Cell[CellGroupData[{
Cell[156017, 3133, 1321, 25, 83, "Input",ExpressionUUID->"de7c2c01-cfde-4b41-af30-38ddf51d3d70"],
Cell[157341, 3160, 16264, 325, 221, "Output",ExpressionUUID->"57989956-b38d-994b-b880-e8f1818babaa"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[173654, 3491, 122, 2, 1, "SlideShowNavigationBar",ExpressionUUID->"869baab5-339c-4341-a92d-71d8c04683f5",
 CellTags->"SlideShowHeader"],
Cell[173779, 3495, 128, 3, 65, "Input",ExpressionUUID->"32797948-1d41-4e3c-8ca8-ab7181508c04"],
Cell[CellGroupData[{
Cell[173932, 3502, 1657, 35, 102, "Input",ExpressionUUID->"4b89b9e5-9a28-40ac-be05-4ab3de28f20b"],
Cell[175592, 3539, 26565, 506, 240, "Output",ExpressionUUID->"128f92d3-4140-8e4b-91b4-156e71996c03"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[202206, 4051, 122, 2, 1, "SlideShowNavigationBar",ExpressionUUID->"a830c7bb-63ed-4a40-a15b-e4d7dcbd6227",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[202353, 4057, 941, 24, 102, "Input",ExpressionUUID->"2a8f9213-da61-4dc5-a3d3-97540236c246"],
Cell[203297, 4083, 26169, 500, 240, "Output",ExpressionUUID->"fc4f845c-5d2a-ca40-bd2d-7f786a8bd8bf"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[229515, 4589, 122, 2, 1, "SlideShowNavigationBar",ExpressionUUID->"648e7d59-8b07-4d6a-b039-be4bec6ed396",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[229662, 4595, 706, 13, 82, "Input",ExpressionUUID->"812268f4-fe2e-4003-8cc4-235cc91cab17"],
Cell[230371, 4610, 40898, 780, 472, "Output",ExpressionUUID->"3317066a-abfc-d846-a0ec-d4666db9d803"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[271318, 5396, 122, 2, 1, "SlideShowNavigationBar",ExpressionUUID->"10d81b53-d176-4fb3-b531-bbab77a678eb",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[271465, 5402, 289, 5, 65, "Input",ExpressionUUID->"8307d285-cd5e-4e57-a01d-896274b8f40b"],
Cell[271757, 5409, 8789, 174, 458, "Output",ExpressionUUID->"729add66-2782-4ac7-8e4e-df6e040090fe"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[280595, 5589, 122, 2, 1, "SlideShowNavigationBar",ExpressionUUID->"4e2cfac5-8168-4f29-9f8d-9a8f81d08791",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[280742, 5595, 872, 19, 123, "Input",ExpressionUUID->"62e9d491-d2fd-44ee-9bdb-c2d833d57942"],
Cell[281617, 5616, 398, 5, 65, "Output",ExpressionUUID->"49fad51f-02de-c445-857c-2c8c26f92db4"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[282064, 5627, 122, 2, 1, "SlideShowNavigationBar",ExpressionUUID->"47fba31a-edda-4017-95f2-48c426074c48",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[282211, 5633, 220, 2, 86, "WolframAlphaLong",ExpressionUUID->"9a38ac9f-9d62-45d2-9a61-3834c184c052"],
Cell[282434, 5637, 9472, 194, 310, "Print",ExpressionUUID->"19c1ba0c-e12d-bf4f-97d5-934c031ba010"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[291955, 5837, 122, 2, 1, "SlideShowNavigationBar",ExpressionUUID->"54e6d8ff-f523-4cc6-a4b0-23da489838cc",
 CellTags->"SlideShowHeader"],
Cell[292080, 5841, 1291, 34, 172, "Input",ExpressionUUID->"1944a964-b243-4519-a17d-bd6fe2563a05"],
Cell[CellGroupData[{
Cell[293396, 5879, 229, 4, 65, "Input",ExpressionUUID->"00f36fb5-2e30-4e0d-85d9-9ec9a722635d"],
Cell[293628, 5885, 1866, 51, 152, "Output",ExpressionUUID->"cbb4d523-8847-b240-9103-90cf108c6d91"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[295543, 5942, 122, 2, 1, "SlideShowNavigationBar",ExpressionUUID->"d8b19bc6-3b8f-4a51-8124-bd3de62c7b7e",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[295690, 5948, 1101, 23, 154, "Input",ExpressionUUID->"6419046d-6bd5-46b3-aa8e-e0b47eb61d7f"],
Cell[296794, 5973, 11953, 228, 404, "Output",ExpressionUUID->"064e2fb7-88eb-47de-86e7-8e586de936d0"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[308796, 6207, 122, 2, 1, "SlideShowNavigationBar",ExpressionUUID->"4e12bead-708e-41f3-967b-382a078ff0db",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[308943, 6213, 775, 19, 118, "Input",ExpressionUUID->"bb6493a8-0826-4f8a-bb28-cae0058099c4"],
Cell[309721, 6234, 273, 4, 84, "Output",ExpressionUUID->"90c06f86-1b98-8548-b257-c81f924efba5"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[310043, 6244, 122, 2, 1, "SlideShowNavigationBar",ExpressionUUID->"c38477b6-e633-483c-8492-1d237b85e72f",
 CellTags->"SlideShowHeader"],
Cell[310168, 6248, 514, 8, 121, "WolframAlphaLong",ExpressionUUID->"1d2ef7d4-a872-4dda-b4a5-6e59958e1c6e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[310719, 6261, 122, 2, 1, "SlideShowNavigationBar",ExpressionUUID->"49bea496-b4d4-42dc-bfe5-5ed1f6d2460d",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[310866, 6267, 765, 19, 100, "Input",ExpressionUUID->"c8aeb071-7b1e-41ad-ad3c-202e46c50488"],
Cell[311634, 6288, 470, 12, 98, "Output",ExpressionUUID->"bc2f4684-1333-46b2-be97-5a67fbde1d5f"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[312153, 6306, 122, 2, 1, "SlideShowNavigationBar",ExpressionUUID->"88b5b411-a99c-42e0-a19a-8a19fdc12bfa",
 CellTags->"SlideShowHeader"],
Cell[312278, 6310, 508, 8, 121, "WolframAlphaLong",ExpressionUUID->"060c14d1-aebf-41ad-9241-94a7502dce33"]
}, Open  ]],
Cell[CellGroupData[{
Cell[312823, 6323, 122, 2, 1, "SlideShowNavigationBar",ExpressionUUID->"9b6da5ab-6d38-41e9-b7a5-c3fc6108076e",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[312970, 6329, 1352, 35, 155, "Input",ExpressionUUID->"748b8cca-7416-4643-b5b3-d49d35ed5320"],
Cell[314325, 6366, 1880, 52, 133, "Output",ExpressionUUID->"2d5b4002-3a49-c143-83cc-23290198edc2"]
}, Open  ]],
Cell[CellGroupData[{
Cell[316242, 6423, 406, 7, 65, "Input",ExpressionUUID->"0664a061-c88e-4067-a776-33ec3ef112a8"],
Cell[316651, 6432, 2010, 56, 142, "Output",ExpressionUUID->"46db339a-eb78-064d-88b7-5a9d6e4a49c0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[318698, 6493, 217, 3, 65, "Input",ExpressionUUID->"8c366e56-5db7-485f-93b8-6de855af9a38"],
Cell[318918, 6498, 1649, 48, 102, "Output",ExpressionUUID->"fc997ac8-02e5-4170-9e63-3ac555bc959f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[320604, 6551, 236, 4, 65, "Input",ExpressionUUID->"ed8b3baa-e6c5-4c35-8ba2-36b51413080f"],
Cell[320843, 6557, 1768, 49, 135, "Output",ExpressionUUID->"bc91dd0f-cc9a-47b1-b6a5-bf4d5d9cac07"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[322660, 6612, 122, 2, 1, "SlideShowNavigationBar",ExpressionUUID->"c31c1659-e630-4bd0-bd70-663d6410795f",
 CellTags->"SlideShowHeader"],
Cell[322785, 6616, 516, 8, 110, "WolframAlphaLong",ExpressionUUID->"8f374b52-49e4-439c-89f6-4b8eda992d03"],
Cell[CellGroupData[{
Cell[323326, 6628, 515, 15, 52, "Input",ExpressionUUID->"30c32606-b788-4cff-a480-221316d01380"],
Cell[323844, 6645, 239, 5, 72, "Output",ExpressionUUID->"739d32f3-9bf5-4da7-8374-e89c5f60b6f1"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[324132, 6656, 122, 2, 1, "SlideShowNavigationBar",ExpressionUUID->"675c582b-90bc-419f-83d1-2b0f42d40a7f",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[324279, 6662, 930, 18, 93, "Input",ExpressionUUID->"f464ac58-28c5-468f-a320-f446342db279"],
Cell[325212, 6682, 14269, 279, 128, "Output",ExpressionUUID->"28f28756-289d-4ee9-824b-7dffeb630e76"]
}, Open  ]],
Cell[CellGroupData[{
Cell[339518, 6966, 658, 12, 52, "Input",ExpressionUUID->"1e302b00-941b-456a-8a7c-77d90dad5fd2"],
Cell[340179, 6980, 11000, 218, 134, "Output",ExpressionUUID->"9aae3286-f10a-4430-82d6-e10fbc20800d"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[351228, 7204, 122, 2, 1, "SlideShowNavigationBar",ExpressionUUID->"a9b0651e-bc4a-4c4d-81b2-770de0705fe9",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[351375, 7210, 618, 11, 52, "Input",ExpressionUUID->"c1746005-b66d-43cf-8c20-6a4bd86984ee"],
Cell[351996, 7223, 26481, 511, 320, "Output",ExpressionUUID->"3e278afa-e303-4f4c-a3b1-57a09404fe80"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[378526, 7740, 122, 2, 1, "SlideShowNavigationBar",ExpressionUUID->"673a9726-1ea8-444b-95ba-02d6ecd80fb1",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[378673, 7746, 587, 12, 79, "Input",ExpressionUUID->"562d9a9b-100c-49db-af95-8da40557d4a4"],
Cell[379263, 7760, 219, 4, 71, "Output",ExpressionUUID->"5702e1b4-581c-40cf-bc54-09e03cc2a4b9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[379519, 7769, 198, 2, 70, "WolframAlphaLong",ExpressionUUID->"bad45390-76fb-4c19-a267-4ae7b882712c"],
Cell[379720, 7773, 55601, 1117, 1829, "Print",ExpressionUUID->"b8218a95-04c1-4d63-a79e-e17d8cb9d631"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[435370, 8896, 122, 2, 1, "SlideShowNavigationBar",ExpressionUUID->"c94d2937-d166-4fcc-8417-163ca62decf4",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[435517, 8902, 687, 16, 104, "Input",ExpressionUUID->"ab5629d4-d205-478b-ab24-1b0e8bc31324"],
Cell[436207, 8920, 192, 3, 71, "Output",ExpressionUUID->"5f4fd9bd-39ad-4daf-a594-4cc2d2d971f2"]
}, Open  ]],
Cell[CellGroupData[{
Cell[436436, 8928, 208, 2, 70, "WolframAlphaLong",ExpressionUUID->"fa1d8c64-f078-4335-8aa9-78cf9629a31c"],
Cell[436647, 8932, 67053, 1317, 2003, "Print",ExpressionUUID->"4620132d-cde7-410a-910a-8488605f263c"]
}, Open  ]],
Cell[503715, 10252, 172, 3, 0, "SideNote",ExpressionUUID->"912dfa6e-e5ff-4586-843d-3ca1ff358dc0"]
}, Open  ]]
}
]
*)

